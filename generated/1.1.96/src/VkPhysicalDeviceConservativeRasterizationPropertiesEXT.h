/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.1.2
 */
#ifndef __VK_VKPHYSICALDEVICECONSERVATIVERASTERIZATIONPROPERTIESEXT_H__
#define __VK_VKPHYSICALDEVICECONSERVATIVERASTERIZATIONPROPERTIESEXT_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkPhysicalDeviceConservativeRasterizationPropertiesEXT: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_SETTER(SetsType);
    
    static NAN_GETTER(GetprimitiveOverestimationSize);
    static NAN_SETTER(SetprimitiveOverestimationSize);
    
    static NAN_GETTER(GetmaxExtraPrimitiveOverestimationSize);
    static NAN_SETTER(SetmaxExtraPrimitiveOverestimationSize);
    
    static NAN_GETTER(GetextraPrimitiveOverestimationSizeGranularity);
    static NAN_SETTER(SetextraPrimitiveOverestimationSizeGranularity);
    
    static NAN_GETTER(GetprimitiveUnderestimation);
    static NAN_SETTER(SetprimitiveUnderestimation);
    
    static NAN_GETTER(GetconservativePointAndLineRasterization);
    static NAN_SETTER(SetconservativePointAndLineRasterization);
    
    static NAN_GETTER(GetdegenerateTrianglesRasterized);
    static NAN_SETTER(SetdegenerateTrianglesRasterized);
    
    static NAN_GETTER(GetdegenerateLinesRasterized);
    static NAN_SETTER(SetdegenerateLinesRasterized);
    
    static NAN_GETTER(GetfullyCoveredFragmentShaderInputVariable);
    static NAN_SETTER(SetfullyCoveredFragmentShaderInputVariable);
    
    static NAN_GETTER(GetconservativeRasterizationPostDepthCoverage);
    static NAN_SETTER(SetconservativeRasterizationPostDepthCoverage);
    

    // real instance
    VkPhysicalDeviceConservativeRasterizationPropertiesEXT instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);
    bool flush(void);

  private:

    _VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    ~_VkPhysicalDeviceConservativeRasterizationPropertiesEXT();

};

#endif