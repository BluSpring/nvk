/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.1.4
 */
#ifndef __VK_VKHDRMETADATAEXT_H__
#define __VK_VKHDRMETADATAEXT_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkHdrMetadataEXT: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_SETTER(SetsType);
    
      Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> displayPrimaryRed;
      static NAN_GETTER(GetdisplayPrimaryRed);
    static NAN_SETTER(SetdisplayPrimaryRed);
    
      Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> displayPrimaryGreen;
      static NAN_GETTER(GetdisplayPrimaryGreen);
    static NAN_SETTER(SetdisplayPrimaryGreen);
    
      Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> displayPrimaryBlue;
      static NAN_GETTER(GetdisplayPrimaryBlue);
    static NAN_SETTER(SetdisplayPrimaryBlue);
    
      Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> whitePoint;
      static NAN_GETTER(GetwhitePoint);
    static NAN_SETTER(SetwhitePoint);
    
    static NAN_GETTER(GetmaxLuminance);
    static NAN_SETTER(SetmaxLuminance);
    
    static NAN_GETTER(GetminLuminance);
    static NAN_SETTER(SetminLuminance);
    
    static NAN_GETTER(GetmaxContentLightLevel);
    static NAN_SETTER(SetmaxContentLightLevel);
    
    static NAN_GETTER(GetmaxFrameAverageLightLevel);
    static NAN_SETTER(SetmaxFrameAverageLightLevel);
    

    // real instance
    VkHdrMetadataEXT instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);
    bool flush(void);

  private:

    _VkHdrMetadataEXT();
    ~_VkHdrMetadataEXT();

};

#endif