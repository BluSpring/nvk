/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.2.0
 */
#ifndef __DYN_UNWRAP__
#define __DYN_UNWRAP__

#include <nan.h>
#include "source.h"

#include <map>
#include <string>

static const std::map<std::string, VkStructureType> constructor2sType = {
  { "VkApplicationInfo", VK_STRUCTURE_TYPE_APPLICATION_INFO },
  { "VkDeviceQueueCreateInfo", VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO },
  { "VkDeviceCreateInfo", VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO },
  { "VkInstanceCreateInfo", VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO },
  { "VkMemoryAllocateInfo", VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO },
  { "VkMappedMemoryRange", VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE },
  { "VkWriteDescriptorSet", VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET },
  { "VkCopyDescriptorSet", VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET },
  { "VkBufferCreateInfo", VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO },
  { "VkBufferViewCreateInfo", VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO },
  { "VkMemoryBarrier", VK_STRUCTURE_TYPE_MEMORY_BARRIER },
  { "VkBufferMemoryBarrier", VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER },
  { "VkImageMemoryBarrier", VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER },
  { "VkImageCreateInfo", VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO },
  { "VkImageViewCreateInfo", VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO },
  { "VkBindSparseInfo", VK_STRUCTURE_TYPE_BIND_SPARSE_INFO },
  { "VkShaderModuleCreateInfo", VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO },
  { "VkDescriptorSetLayoutCreateInfo", VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO },
  { "VkDescriptorPoolCreateInfo", VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO },
  { "VkDescriptorSetAllocateInfo", VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO },
  { "VkPipelineShaderStageCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO },
  { "VkComputePipelineCreateInfo", VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO },
  { "VkPipelineVertexInputStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO },
  { "VkPipelineInputAssemblyStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO },
  { "VkPipelineTessellationStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO },
  { "VkPipelineViewportStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO },
  { "VkPipelineRasterizationStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO },
  { "VkPipelineMultisampleStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO },
  { "VkPipelineColorBlendStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO },
  { "VkPipelineDynamicStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO },
  { "VkPipelineDepthStencilStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO },
  { "VkGraphicsPipelineCreateInfo", VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO },
  { "VkPipelineCacheCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO },
  { "VkPipelineLayoutCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO },
  { "VkSamplerCreateInfo", VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO },
  { "VkCommandPoolCreateInfo", VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO },
  { "VkCommandBufferAllocateInfo", VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO },
  { "VkCommandBufferInheritanceInfo", VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO },
  { "VkCommandBufferBeginInfo", VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO },
  { "VkRenderPassBeginInfo", VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO },
  { "VkRenderPassCreateInfo", VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO },
  { "VkEventCreateInfo", VK_STRUCTURE_TYPE_EVENT_CREATE_INFO },
  { "VkFenceCreateInfo", VK_STRUCTURE_TYPE_FENCE_CREATE_INFO },
  { "VkSemaphoreCreateInfo", VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO },
  { "VkQueryPoolCreateInfo", VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO },
  { "VkFramebufferCreateInfo", VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO },
  { "VkSubmitInfo", VK_STRUCTURE_TYPE_SUBMIT_INFO },
  { "VkDisplayModeCreateInfoKHR", VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR },
  { "VkDisplaySurfaceCreateInfoKHR", VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR },
  { "VkDisplayPresentInfoKHR", VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR },
  { "VkWin32SurfaceCreateInfoKHR", VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR },
  { "VkSwapchainCreateInfoKHR", VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR },
  { "VkPresentInfoKHR", VK_STRUCTURE_TYPE_PRESENT_INFO_KHR },
  { "VkDebugReportCallbackCreateInfoEXT", VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT },
  { "VkValidationFlagsEXT", VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT },
  { "VkValidationFeaturesEXT", VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT },
  { "VkPipelineRasterizationStateRasterizationOrderAMD", VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD },
  { "VkDebugMarkerObjectNameInfoEXT", VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT },
  { "VkDebugMarkerObjectTagInfoEXT", VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT },
  { "VkDebugMarkerMarkerInfoEXT", VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT },
  { "VkDedicatedAllocationImageCreateInfoNV", VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV },
  { "VkDedicatedAllocationBufferCreateInfoNV", VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV },
  { "VkDedicatedAllocationMemoryAllocateInfoNV", VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV },
  { "VkExternalMemoryImageCreateInfoNV", VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV },
  { "VkExportMemoryAllocateInfoNV", VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV },
  { "VkImportMemoryWin32HandleInfoNV", VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV },
  { "VkExportMemoryWin32HandleInfoNV", VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV },
  { "VkWin32KeyedMutexAcquireReleaseInfoNV", VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV },
  { "VkDeviceGeneratedCommandsFeaturesNVX", VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX },
  { "VkDeviceGeneratedCommandsLimitsNVX", VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX },
  { "VkIndirectCommandsLayoutCreateInfoNVX", VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX },
  { "VkCmdProcessCommandsInfoNVX", VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX },
  { "VkCmdReserveSpaceForCommandsInfoNVX", VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX },
  { "VkObjectTableCreateInfoNVX", VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX },
  { "VkPhysicalDeviceFeatures2", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 },
  { "VkPhysicalDeviceFeatures2KHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR },
  { "VkPhysicalDeviceProperties2", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 },
  { "VkPhysicalDeviceProperties2KHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR },
  { "VkFormatProperties2", VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 },
  { "VkFormatProperties2KHR", VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR },
  { "VkImageFormatProperties2", VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 },
  { "VkImageFormatProperties2KHR", VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR },
  { "VkPhysicalDeviceImageFormatInfo2", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 },
  { "VkPhysicalDeviceImageFormatInfo2KHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR },
  { "VkQueueFamilyProperties2", VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 },
  { "VkQueueFamilyProperties2KHR", VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR },
  { "VkPhysicalDeviceMemoryProperties2", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 },
  { "VkPhysicalDeviceMemoryProperties2KHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR },
  { "VkSparseImageFormatProperties2", VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 },
  { "VkSparseImageFormatProperties2KHR", VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR },
  { "VkPhysicalDeviceSparseImageFormatInfo2", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 },
  { "VkPhysicalDeviceSparseImageFormatInfo2KHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR },
  { "VkPhysicalDevicePushDescriptorPropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR },
  { "VkPhysicalDeviceDriverPropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR },
  { "VkPresentRegionsKHR", VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR },
  { "VkPhysicalDeviceVariablePointerFeatures", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES },
  { "VkPhysicalDeviceVariablePointerFeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR },
  { "VkPhysicalDeviceExternalImageFormatInfo", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO },
  { "VkPhysicalDeviceExternalImageFormatInfoKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR },
  { "VkExternalImageFormatProperties", VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES },
  { "VkExternalImageFormatPropertiesKHR", VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR },
  { "VkPhysicalDeviceExternalBufferInfo", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO },
  { "VkPhysicalDeviceExternalBufferInfoKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR },
  { "VkExternalBufferProperties", VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES },
  { "VkExternalBufferPropertiesKHR", VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR },
  { "VkPhysicalDeviceIDProperties", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES },
  { "VkPhysicalDeviceIDPropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR },
  { "VkExternalMemoryImageCreateInfo", VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO },
  { "VkExternalMemoryImageCreateInfoKHR", VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR },
  { "VkExternalMemoryBufferCreateInfo", VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO },
  { "VkExternalMemoryBufferCreateInfoKHR", VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR },
  { "VkExportMemoryAllocateInfo", VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO },
  { "VkExportMemoryAllocateInfoKHR", VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR },
  { "VkImportMemoryWin32HandleInfoKHR", VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR },
  { "VkExportMemoryWin32HandleInfoKHR", VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR },
  { "VkMemoryWin32HandlePropertiesKHR", VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR },
  { "VkMemoryGetWin32HandleInfoKHR", VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR },
  { "VkImportMemoryFdInfoKHR", VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR },
  { "VkMemoryFdPropertiesKHR", VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR },
  { "VkMemoryGetFdInfoKHR", VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR },
  { "VkWin32KeyedMutexAcquireReleaseInfoKHR", VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR },
  { "VkPhysicalDeviceExternalSemaphoreInfo", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO },
  { "VkPhysicalDeviceExternalSemaphoreInfoKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR },
  { "VkExternalSemaphoreProperties", VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES },
  { "VkExternalSemaphorePropertiesKHR", VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR },
  { "VkExportSemaphoreCreateInfo", VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO },
  { "VkExportSemaphoreCreateInfoKHR", VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR },
  { "VkImportSemaphoreWin32HandleInfoKHR", VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR },
  { "VkExportSemaphoreWin32HandleInfoKHR", VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR },
  { "VkD3D12FenceSubmitInfoKHR", VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR },
  { "VkSemaphoreGetWin32HandleInfoKHR", VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR },
  { "VkImportSemaphoreFdInfoKHR", VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR },
  { "VkSemaphoreGetFdInfoKHR", VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR },
  { "VkPhysicalDeviceExternalFenceInfo", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO },
  { "VkPhysicalDeviceExternalFenceInfoKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR },
  { "VkExternalFenceProperties", VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES },
  { "VkExternalFencePropertiesKHR", VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR },
  { "VkExportFenceCreateInfo", VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO },
  { "VkExportFenceCreateInfoKHR", VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR },
  { "VkImportFenceWin32HandleInfoKHR", VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR },
  { "VkExportFenceWin32HandleInfoKHR", VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR },
  { "VkFenceGetWin32HandleInfoKHR", VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR },
  { "VkImportFenceFdInfoKHR", VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR },
  { "VkFenceGetFdInfoKHR", VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR },
  { "VkPhysicalDeviceMultiviewFeatures", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES },
  { "VkPhysicalDeviceMultiviewFeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR },
  { "VkPhysicalDeviceMultiviewProperties", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES },
  { "VkPhysicalDeviceMultiviewPropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR },
  { "VkRenderPassMultiviewCreateInfo", VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO },
  { "VkRenderPassMultiviewCreateInfoKHR", VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR },
  { "VkSurfaceCapabilities2EXT", VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT },
  { "VkDisplayPowerInfoEXT", VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT },
  { "VkDeviceEventInfoEXT", VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT },
  { "VkDisplayEventInfoEXT", VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT },
  { "VkSwapchainCounterCreateInfoEXT", VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT },
  { "VkPhysicalDeviceGroupProperties", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES },
  { "VkPhysicalDeviceGroupPropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR },
  { "VkMemoryAllocateFlagsInfo", VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO },
  { "VkMemoryAllocateFlagsInfoKHR", VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR },
  { "VkBindBufferMemoryInfo", VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO },
  { "VkBindBufferMemoryInfoKHR", VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR },
  { "VkBindBufferMemoryDeviceGroupInfo", VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO },
  { "VkBindBufferMemoryDeviceGroupInfoKHR", VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR },
  { "VkBindImageMemoryInfo", VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO },
  { "VkBindImageMemoryInfoKHR", VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR },
  { "VkBindImageMemoryDeviceGroupInfo", VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO },
  { "VkBindImageMemoryDeviceGroupInfoKHR", VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR },
  { "VkDeviceGroupRenderPassBeginInfo", VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO },
  { "VkDeviceGroupRenderPassBeginInfoKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR },
  { "VkDeviceGroupCommandBufferBeginInfo", VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO },
  { "VkDeviceGroupCommandBufferBeginInfoKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR },
  { "VkDeviceGroupSubmitInfo", VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO },
  { "VkDeviceGroupSubmitInfoKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR },
  { "VkDeviceGroupBindSparseInfo", VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO },
  { "VkDeviceGroupBindSparseInfoKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR },
  { "VkDeviceGroupPresentCapabilitiesKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR },
  { "VkImageSwapchainCreateInfoKHR", VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR },
  { "VkBindImageMemorySwapchainInfoKHR", VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR },
  { "VkAcquireNextImageInfoKHR", VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR },
  { "VkDeviceGroupPresentInfoKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR },
  { "VkDeviceGroupDeviceCreateInfo", VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO },
  { "VkDeviceGroupDeviceCreateInfoKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR },
  { "VkDeviceGroupSwapchainCreateInfoKHR", VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR },
  { "VkDescriptorUpdateTemplateCreateInfo", VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO },
  { "VkDescriptorUpdateTemplateCreateInfoKHR", VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR },
  { "VkHdrMetadataEXT", VK_STRUCTURE_TYPE_HDR_METADATA_EXT },
  { "VkPresentTimesInfoGOOGLE", VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE },
  { "VkPipelineViewportWScalingStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV },
  { "VkPipelineViewportSwizzleStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV },
  { "VkPhysicalDeviceDiscardRectanglePropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT },
  { "VkPipelineDiscardRectangleStateCreateInfoEXT", VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT },
  { "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX },
  { "VkRenderPassInputAttachmentAspectCreateInfo", VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO },
  { "VkRenderPassInputAttachmentAspectCreateInfoKHR", VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR },
  { "VkPhysicalDeviceSurfaceInfo2KHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR },
  { "VkSurfaceCapabilities2KHR", VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR },
  { "VkSurfaceFormat2KHR", VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR },
  { "VkDisplayProperties2KHR", VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR },
  { "VkDisplayPlaneProperties2KHR", VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR },
  { "VkDisplayModeProperties2KHR", VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR },
  { "VkDisplayPlaneInfo2KHR", VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR },
  { "VkDisplayPlaneCapabilities2KHR", VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR },
  { "VkSharedPresentSurfaceCapabilitiesKHR", VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR },
  { "VkPhysicalDevice16BitStorageFeatures", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES },
  { "VkPhysicalDevice16BitStorageFeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR },
  { "VkPhysicalDeviceSubgroupProperties", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES },
  { "VkBufferMemoryRequirementsInfo2", VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 },
  { "VkBufferMemoryRequirementsInfo2KHR", VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR },
  { "VkImageMemoryRequirementsInfo2", VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 },
  { "VkImageMemoryRequirementsInfo2KHR", VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR },
  { "VkImageSparseMemoryRequirementsInfo2", VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 },
  { "VkImageSparseMemoryRequirementsInfo2KHR", VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR },
  { "VkMemoryRequirements2", VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 },
  { "VkMemoryRequirements2KHR", VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR },
  { "VkSparseImageMemoryRequirements2", VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 },
  { "VkSparseImageMemoryRequirements2KHR", VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR },
  { "VkPhysicalDevicePointClippingProperties", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES },
  { "VkPhysicalDevicePointClippingPropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR },
  { "VkMemoryDedicatedRequirements", VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS },
  { "VkMemoryDedicatedRequirementsKHR", VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR },
  { "VkMemoryDedicatedAllocateInfo", VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO },
  { "VkMemoryDedicatedAllocateInfoKHR", VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR },
  { "VkImageViewUsageCreateInfo", VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO },
  { "VkImageViewUsageCreateInfoKHR", VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR },
  { "VkPipelineTessellationDomainOriginStateCreateInfo", VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO },
  { "VkPipelineTessellationDomainOriginStateCreateInfoKHR", VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR },
  { "VkSamplerYcbcrConversionInfo", VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO },
  { "VkSamplerYcbcrConversionInfoKHR", VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR },
  { "VkSamplerYcbcrConversionCreateInfo", VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO },
  { "VkSamplerYcbcrConversionCreateInfoKHR", VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR },
  { "VkBindImagePlaneMemoryInfo", VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO },
  { "VkBindImagePlaneMemoryInfoKHR", VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR },
  { "VkImagePlaneMemoryRequirementsInfo", VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO },
  { "VkImagePlaneMemoryRequirementsInfoKHR", VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR },
  { "VkPhysicalDeviceSamplerYcbcrConversionFeatures", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES },
  { "VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR },
  { "VkSamplerYcbcrConversionImageFormatProperties", VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES },
  { "VkSamplerYcbcrConversionImageFormatPropertiesKHR", VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR },
  { "VkTextureLODGatherFormatPropertiesAMD", VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD },
  { "VkConditionalRenderingBeginInfoEXT", VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT },
  { "VkProtectedSubmitInfo", VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO },
  { "VkPhysicalDeviceProtectedMemoryFeatures", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES },
  { "VkPhysicalDeviceProtectedMemoryProperties", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES },
  { "VkDeviceQueueInfo2", VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 },
  { "VkPipelineCoverageToColorStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV },
  { "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT },
  { "VkSampleLocationsInfoEXT", VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT },
  { "VkRenderPassSampleLocationsBeginInfoEXT", VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT },
  { "VkPipelineSampleLocationsStateCreateInfoEXT", VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT },
  { "VkPhysicalDeviceSampleLocationsPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT },
  { "VkMultisamplePropertiesEXT", VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT },
  { "VkSamplerReductionModeCreateInfoEXT", VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT },
  { "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT },
  { "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT },
  { "VkPipelineColorBlendAdvancedStateCreateInfoEXT", VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT },
  { "VkPhysicalDeviceInlineUniformBlockFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT },
  { "VkPhysicalDeviceInlineUniformBlockPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT },
  { "VkWriteDescriptorSetInlineUniformBlockEXT", VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT },
  { "VkDescriptorPoolInlineUniformBlockCreateInfoEXT", VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT },
  { "VkPipelineCoverageModulationStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV },
  { "VkImageFormatListCreateInfoKHR", VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR },
  { "VkValidationCacheCreateInfoEXT", VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT },
  { "VkShaderModuleValidationCacheCreateInfoEXT", VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT },
  { "VkPhysicalDeviceMaintenance3Properties", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES },
  { "VkPhysicalDeviceMaintenance3PropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR },
  { "VkDescriptorSetLayoutSupport", VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT },
  { "VkDescriptorSetLayoutSupportKHR", VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR },
  { "VkPhysicalDeviceShaderDrawParameterFeatures", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES },
  { "VkPhysicalDeviceFloat16Int8FeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR },
  { "VkPhysicalDeviceFloatControlsPropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR },
  { "VkDeviceQueueGlobalPriorityCreateInfoEXT", VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT },
  { "VkDebugUtilsObjectNameInfoEXT", VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT },
  { "VkDebugUtilsObjectTagInfoEXT", VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT },
  { "VkDebugUtilsLabelEXT", VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT },
  { "VkDebugUtilsMessengerCreateInfoEXT", VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT },
  { "VkDebugUtilsMessengerCallbackDataEXT", VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT },
  { "VkImportMemoryHostPointerInfoEXT", VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT },
  { "VkMemoryHostPointerPropertiesEXT", VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT },
  { "VkPhysicalDeviceExternalMemoryHostPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT },
  { "VkPhysicalDeviceConservativeRasterizationPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT },
  { "VkCalibratedTimestampInfoEXT", VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT },
  { "VkPhysicalDeviceShaderCorePropertiesAMD", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD },
  { "VkPipelineRasterizationConservativeStateCreateInfoEXT", VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT },
  { "VkPhysicalDeviceDescriptorIndexingFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT },
  { "VkPhysicalDeviceDescriptorIndexingPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT },
  { "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT", VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT },
  { "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT", VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT },
  { "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT", VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT },
  { "VkAttachmentDescription2KHR", VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR },
  { "VkAttachmentReference2KHR", VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR },
  { "VkSubpassDescription2KHR", VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR },
  { "VkSubpassDependency2KHR", VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR },
  { "VkRenderPassCreateInfo2KHR", VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR },
  { "VkSubpassBeginInfoKHR", VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR },
  { "VkSubpassEndInfoKHR", VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR },
  { "VkPipelineVertexInputDivisorStateCreateInfoEXT", VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT },
  { "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT },
  { "VkPhysicalDevicePCIBusInfoPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT },
  { "VkCommandBufferInheritanceConditionalRenderingInfoEXT", VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT },
  { "VkPhysicalDevice8BitStorageFeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR },
  { "VkPhysicalDeviceConditionalRenderingFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT },
  { "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR },
  { "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR },
  { "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT },
  { "VkQueueFamilyCheckpointPropertiesNV", VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV },
  { "VkCheckpointDataNV", VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV },
  { "VkPhysicalDeviceDepthStencilResolvePropertiesKHR", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR },
  { "VkSubpassDescriptionDepthStencilResolveKHR", VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR },
  { "VkImageViewASTCDecodeModeEXT", VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT },
  { "VkPhysicalDeviceASTCDecodeFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT },
  { "VkPhysicalDeviceTransformFeedbackFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT },
  { "VkPhysicalDeviceTransformFeedbackPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT },
  { "VkPipelineRasterizationStateStreamCreateInfoEXT", VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT },
  { "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV },
  { "VkPipelineRepresentativeFragmentTestStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV },
  { "VkPhysicalDeviceExclusiveScissorFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV },
  { "VkPipelineViewportExclusiveScissorStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV },
  { "VkPhysicalDeviceCornerSampledImageFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV },
  { "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV },
  { "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV },
  { "VkPhysicalDeviceShaderImageFootprintFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV },
  { "VkPipelineViewportShadingRateImageStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV },
  { "VkPhysicalDeviceShadingRateImageFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV },
  { "VkPhysicalDeviceShadingRateImagePropertiesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV },
  { "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV", VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV },
  { "VkPhysicalDeviceMeshShaderFeaturesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV },
  { "VkPhysicalDeviceMeshShaderPropertiesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV },
  { "VkRayTracingShaderGroupCreateInfoNV", VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV },
  { "VkRayTracingPipelineCreateInfoNV", VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV },
  { "VkGeometryTrianglesNV", VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV },
  { "VkGeometryAABBNV", VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV },
  { "VkGeometryNV", VK_STRUCTURE_TYPE_GEOMETRY_NV },
  { "VkAccelerationStructureInfoNV", VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV },
  { "VkAccelerationStructureCreateInfoNV", VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV },
  { "VkBindAccelerationStructureMemoryInfoNV", VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV },
  { "VkWriteDescriptorSetAccelerationStructureNV", VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV },
  { "VkAccelerationStructureMemoryRequirementsInfoNV", VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV },
  { "VkPhysicalDeviceRayTracingPropertiesNV", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV },
  { "VkDrmFormatModifierPropertiesListEXT", VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT },
  { "VkPhysicalDeviceImageDrmFormatModifierInfoEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT },
  { "VkImageDrmFormatModifierListCreateInfoEXT", VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT },
  { "VkImageDrmFormatModifierExplicitCreateInfoEXT", VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT },
  { "VkImageDrmFormatModifierPropertiesEXT", VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT },
  { "VkImageStencilUsageCreateInfoEXT", VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT },
  { "VkDeviceMemoryOverallocationCreateInfoAMD", VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD },
  { "VkPhysicalDeviceFragmentDensityMapFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT },
  { "VkPhysicalDeviceFragmentDensityMapPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT },
  { "VkRenderPassFragmentDensityMapCreateInfoEXT", VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT },
  { "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT },
  { "VkPhysicalDeviceMemoryBudgetPropertiesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT },
  { "VkPhysicalDeviceMemoryPriorityFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT },
  { "VkMemoryPriorityAllocateInfoEXT", VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT },
  { "VkPhysicalDeviceBufferAddressFeaturesEXT", VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT },
  { "VkBufferDeviceAddressInfoEXT", VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT },
  { "VkBufferDeviceAddressCreateInfoEXT", VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT },
  
};

inline VkStructureType GetStructureTypeFromObject(v8::Local<v8::Object> obj) {
  std::string constructorName = std::string(*Nan::Utf8String(obj->GetConstructorName()));
  auto it = constructor2sType.find(constructorName);
  if (it == constructor2sType.end()) return (VkStructureType) -1;
  VkStructureType sType = it->second;
  return sType;
}

bool IsValidStructureObject(v8::Local<v8::Object> obj) {
  return GetStructureTypeFromObject(obj) > -1;
}

void * DynamicObjectUnwrapInstance(v8::Local<v8::Object> obj) {
  std::string constructorName = std::string(*Nan::Utf8String(obj->GetConstructorName()));
  VkStructureType sType = GetStructureTypeFromObject(obj);
  switch (sType) {
    case VK_STRUCTURE_TYPE_APPLICATION_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkApplicationInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceQueueCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkInstanceCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryAllocateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE: return (void *) &Nan::ObjectWrap::Unwrap<_VkMappedMemoryRange>(obj)->instance;
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET: return (void *) &Nan::ObjectWrap::Unwrap<_VkWriteDescriptorSet>(obj)->instance;
    case VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET: return (void *) &Nan::ObjectWrap::Unwrap<_VkCopyDescriptorSet>(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBufferCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBufferViewCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_BARRIER: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryBarrier>(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER: return (void *) &Nan::ObjectWrap::Unwrap<_VkBufferMemoryBarrier>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageMemoryBarrier>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageViewCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_SPARSE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindSparseInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkShaderModuleCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorSetLayoutCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorPoolCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorSetAllocateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineShaderStageCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkComputePipelineCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineVertexInputStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineInputAssemblyStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineTessellationStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineViewportStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineRasterizationStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineMultisampleStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineColorBlendStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineDynamicStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineDepthStencilStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkGraphicsPipelineCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineCacheCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineLayoutCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkSamplerCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkCommandPoolCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkCommandBufferAllocateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkCommandBufferInheritanceInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkCommandBufferBeginInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkRenderPassBeginInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkRenderPassCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_EVENT_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkEventCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_FENCE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkFenceCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkSemaphoreCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkQueryPoolCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkFramebufferCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBMIT_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkSubmitInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayModeCreateInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplaySurfaceCreateInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayPresentInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkWin32SurfaceCreateInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSwapchainCreateInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PRESENT_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPresentInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugReportCallbackCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkValidationFlagsEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkValidationFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineRasterizationStateRasterizationOrderAMD>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugMarkerObjectNameInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugMarkerObjectTagInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugMarkerMarkerInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkDedicatedAllocationImageCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkDedicatedAllocationBufferCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkDedicatedAllocationMemoryAllocateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkExternalMemoryImageCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportMemoryAllocateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportMemoryWin32HandleInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportMemoryWin32HandleInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkWin32KeyedMutexAcquireReleaseInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGeneratedCommandsFeaturesNVX>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGeneratedCommandsLimitsNVX>(obj)->instance;
    case VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX: return (void *) &Nan::ObjectWrap::Unwrap<_VkIndirectCommandsLayoutCreateInfoNVX>(obj)->instance;
    case VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX: return (void *) &Nan::ObjectWrap::Unwrap<_VkCmdProcessCommandsInfoNVX>(obj)->instance;
    case VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX: return (void *) &Nan::ObjectWrap::Unwrap<_VkCmdReserveSpaceForCommandsInfoNVX>(obj)->instance;
    case VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX: return (void *) &Nan::ObjectWrap::Unwrap<_VkObjectTableCreateInfoNVX>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceFeatures2>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceProperties2>(obj)->instance;
    case VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkFormatProperties2>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageFormatProperties2>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceImageFormatInfo2>(obj)->instance;
    case VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkQueueFamilyProperties2>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMemoryProperties2>(obj)->instance;
    case VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkSparseImageFormatProperties2>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceSparseImageFormatInfo2>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDevicePushDescriptorPropertiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceDriverPropertiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPresentRegionsKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceVariablePointerFeatures>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceExternalImageFormatInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkExternalImageFormatProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceExternalBufferInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkExternalBufferProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceIDProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkExternalMemoryImageCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkExternalMemoryBufferCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportMemoryAllocateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportMemoryWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportMemoryWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryWin32HandlePropertiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryGetWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportMemoryFdInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryFdPropertiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryGetFdInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkWin32KeyedMutexAcquireReleaseInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceExternalSemaphoreInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkExternalSemaphoreProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportSemaphoreCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportSemaphoreWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportSemaphoreWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkD3D12FenceSubmitInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSemaphoreGetWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportSemaphoreFdInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSemaphoreGetFdInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceExternalFenceInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkExternalFenceProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportFenceCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportFenceWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkExportFenceWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkFenceGetWin32HandleInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportFenceFdInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkFenceGetFdInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMultiviewFeatures>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMultiviewProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkRenderPassMultiviewCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkSurfaceCapabilities2EXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayPowerInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceEventInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayEventInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkSwapchainCounterCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceGroupProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryAllocateFlagsInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindBufferMemoryInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindBufferMemoryDeviceGroupInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindImageMemoryInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindImageMemoryDeviceGroupInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupRenderPassBeginInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupCommandBufferBeginInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupSubmitInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupBindSparseInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupPresentCapabilitiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageSwapchainCreateInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindImageMemorySwapchainInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkAcquireNextImageInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupPresentInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupDeviceCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceGroupSwapchainCreateInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorUpdateTemplateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_HDR_METADATA_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkHdrMetadataEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE: return (void *) &Nan::ObjectWrap::Unwrap<_VkPresentTimesInfoGOOGLE>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineViewportWScalingStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineViewportSwizzleStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceDiscardRectanglePropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineDiscardRectangleStateCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX>(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkRenderPassInputAttachmentAspectCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceSurfaceInfo2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSurfaceCapabilities2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSurfaceFormat2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayProperties2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayPlaneProperties2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayModeProperties2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayPlaneInfo2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkDisplayPlaneCapabilities2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSharedPresentSurfaceCapabilitiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDevice16BitStorageFeatures>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceSubgroupProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkBufferMemoryRequirementsInfo2>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageMemoryRequirementsInfo2>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageSparseMemoryRequirementsInfo2>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryRequirements2>(obj)->instance;
    case VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkSparseImageMemoryRequirements2>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDevicePointClippingProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryDedicatedRequirements>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryDedicatedAllocateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageViewUsageCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineTessellationDomainOriginStateCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkSamplerYcbcrConversionInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkSamplerYcbcrConversionCreateInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindImagePlaneMemoryInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkImagePlaneMemoryRequirementsInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceSamplerYcbcrConversionFeatures>(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkSamplerYcbcrConversionImageFormatProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD: return (void *) &Nan::ObjectWrap::Unwrap<_VkTextureLODGatherFormatPropertiesAMD>(obj)->instance;
    case VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkConditionalRenderingBeginInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO: return (void *) &Nan::ObjectWrap::Unwrap<_VkProtectedSubmitInfo>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceProtectedMemoryFeatures>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceProtectedMemoryProperties>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceQueueInfo2>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineCoverageToColorStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkSampleLocationsInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkRenderPassSampleLocationsBeginInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineSampleLocationsStateCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceSampleLocationsPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkMultisamplePropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkSamplerReductionModeCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineColorBlendAdvancedStateCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceInlineUniformBlockFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceInlineUniformBlockPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkWriteDescriptorSetInlineUniformBlockEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorPoolInlineUniformBlockCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineCoverageModulationStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageFormatListCreateInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkValidationCacheCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkShaderModuleValidationCacheCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMaintenance3Properties>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorSetLayoutSupport>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceShaderDrawParameterFeatures>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceFloat16Int8FeaturesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceFloatControlsPropertiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceQueueGlobalPriorityCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugUtilsObjectNameInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugUtilsObjectTagInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugUtilsLabelEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugUtilsMessengerCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDebugUtilsMessengerCallbackDataEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkImportMemoryHostPointerInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryHostPointerPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceExternalMemoryHostPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceConservativeRasterizationPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkCalibratedTimestampInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceShaderCorePropertiesAMD>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineRasterizationConservativeStateCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceDescriptorIndexingFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceDescriptorIndexingPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkAttachmentDescription2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkAttachmentReference2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSubpassDescription2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSubpassDependency2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkRenderPassCreateInfo2KHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSubpassBeginInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSubpassEndInfoKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineVertexInputDivisorStateCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDevicePCIBusInfoPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkCommandBufferInheritanceConditionalRenderingInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDevice8BitStorageFeaturesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceConditionalRenderingFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkQueueFamilyCheckpointPropertiesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkCheckpointDataNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceDepthStencilResolvePropertiesKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR: return (void *) &Nan::ObjectWrap::Unwrap<_VkSubpassDescriptionDepthStencilResolveKHR>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageViewASTCDecodeModeEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceASTCDecodeFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineRasterizationStateStreamCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineRepresentativeFragmentTestStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceExclusiveScissorFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineViewportExclusiveScissorStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceCornerSampledImageFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceShaderImageFootprintFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineViewportShadingRateImageStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceShadingRateImageFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceShadingRateImagePropertiesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMeshShaderFeaturesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMeshShaderPropertiesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkRayTracingShaderGroupCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkRayTracingPipelineCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkGeometryTrianglesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkGeometryAABBNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_GEOMETRY_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkGeometryNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkAccelerationStructureInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkAccelerationStructureCreateInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkBindAccelerationStructureMemoryInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkWriteDescriptorSetAccelerationStructureNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkAccelerationStructureMemoryRequirementsInfoNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceRayTracingPropertiesNV>(obj)->instance;
    case VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkDrmFormatModifierPropertiesListEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceImageDrmFormatModifierInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageDrmFormatModifierListCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageDrmFormatModifierExplicitCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageDrmFormatModifierPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkImageStencilUsageCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD: return (void *) &Nan::ObjectWrap::Unwrap<_VkDeviceMemoryOverallocationCreateInfoAMD>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceFragmentDensityMapFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceFragmentDensityMapPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkRenderPassFragmentDensityMapCreateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMemoryBudgetPropertiesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceMemoryPriorityFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkMemoryPriorityAllocateInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceBufferAddressFeaturesEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkBufferDeviceAddressInfoEXT>(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT: return (void *) &Nan::ObjectWrap::Unwrap<_VkBufferDeviceAddressCreateInfoEXT>(obj)->instance;
    
  };
  std::string msg = "Dynamic Object Unwrap failed! Invalid constructor: '" + constructorName + "'";
  Nan::ThrowTypeError(msg.c_str());
  return nullptr;
}

#endif
