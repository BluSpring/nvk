/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.1.4
 */
#ifndef __VK_VKDESCRIPTORUPDATETEMPLATECREATEINFO_H__
#define __VK_VKDESCRIPTORUPDATETEMPLATECREATEINFO_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkDescriptorUpdateTemplateCreateInfo: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_SETTER(SetsType);
    
    static NAN_GETTER(Getflags);
    static NAN_SETTER(Setflags);
    
    static NAN_GETTER(GetdescriptorUpdateEntryCount);
    static NAN_SETTER(SetdescriptorUpdateEntryCount);
    
    std::vector<VkDescriptorUpdateTemplateEntry>* vpDescriptorUpdateEntries;
    Nan::Persistent<v8::Array, v8::CopyablePersistentTraits<v8::Array>> pDescriptorUpdateEntries;
    static NAN_GETTER(GetpDescriptorUpdateEntries);
    static NAN_SETTER(SetpDescriptorUpdateEntries);
    
    static NAN_GETTER(GettemplateType);
    static NAN_SETTER(SettemplateType);
    
      Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> descriptorSetLayout;
      static NAN_GETTER(GetdescriptorSetLayout);
    static NAN_SETTER(SetdescriptorSetLayout);
    
    static NAN_GETTER(GetpipelineBindPoint);
    static NAN_SETTER(SetpipelineBindPoint);
    
      Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> pipelineLayout;
      static NAN_GETTER(GetpipelineLayout);
    static NAN_SETTER(SetpipelineLayout);
    
    static NAN_GETTER(Getset);
    static NAN_SETTER(Setset);
    

    // real instance
    VkDescriptorUpdateTemplateCreateInfo instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);
    bool flush(void);

  private:

    _VkDescriptorUpdateTemplateCreateInfo();
    ~_VkDescriptorUpdateTemplateCreateInfo();

};

#endif