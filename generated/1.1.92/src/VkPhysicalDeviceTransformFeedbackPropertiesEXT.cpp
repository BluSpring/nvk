/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.1.2
 */
#include "utils.h"
#include "index.h"
#include "VkPhysicalDeviceTransformFeedbackPropertiesEXT.h"

Nan::Persistent<v8::FunctionTemplate> _VkPhysicalDeviceTransformFeedbackPropertiesEXT::constructor;

_VkPhysicalDeviceTransformFeedbackPropertiesEXT::_VkPhysicalDeviceTransformFeedbackPropertiesEXT() {
  instance.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT;
  
}

_VkPhysicalDeviceTransformFeedbackPropertiesEXT::~_VkPhysicalDeviceTransformFeedbackPropertiesEXT() {
  //printf("VkPhysicalDeviceTransformFeedbackPropertiesEXT deconstructed!!\n");
  
  
  
  
  
  
  
  
  
  
  
  
}

void _VkPhysicalDeviceTransformFeedbackPropertiesEXT::Initialize(Nan::ADDON_REGISTER_FUNCTION_ARGS_TYPE target) {
  Nan::HandleScope scope;

  // constructor
  v8::Local<v8::FunctionTemplate> ctor = Nan::New<v8::FunctionTemplate>(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::New);
  constructor.Reset(ctor);
  ctor->InstanceTemplate()->SetInternalFieldCount(1);
  ctor->SetClassName(Nan::New("VkPhysicalDeviceTransformFeedbackPropertiesEXT").ToLocalChecked());

  // prototype
  v8::Local<v8::ObjectTemplate> proto = ctor->PrototypeTemplate();
  
  SetPrototypeAccessor(proto, Nan::New("sType").ToLocalChecked(), GetsType, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("maxTransformFeedbackStreams").ToLocalChecked(), GetmaxTransformFeedbackStreams, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("maxTransformFeedbackBuffers").ToLocalChecked(), GetmaxTransformFeedbackBuffers, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("maxTransformFeedbackBufferSize").ToLocalChecked(), GetmaxTransformFeedbackBufferSize, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("maxTransformFeedbackStreamDataSize").ToLocalChecked(), GetmaxTransformFeedbackStreamDataSize, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("maxTransformFeedbackBufferDataSize").ToLocalChecked(), GetmaxTransformFeedbackBufferDataSize, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("maxTransformFeedbackBufferDataStride").ToLocalChecked(), GetmaxTransformFeedbackBufferDataStride, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("transformFeedbackQueries").ToLocalChecked(), GettransformFeedbackQueries, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("transformFeedbackStreamsLinesTriangles").ToLocalChecked(), GettransformFeedbackStreamsLinesTriangles, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("transformFeedbackRasterizationStreamSelect").ToLocalChecked(), GettransformFeedbackRasterizationStreamSelect, nullptr, ctor);
  SetPrototypeAccessor(proto, Nan::New("transformFeedbackDraw").ToLocalChecked(), GettransformFeedbackDraw, nullptr, ctor);
  Nan::Set(target, Nan::New("VkPhysicalDeviceTransformFeedbackPropertiesEXT").ToLocalChecked(), ctor->GetFunction());
}

bool _VkPhysicalDeviceTransformFeedbackPropertiesEXT::flush() {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = this;
  
  return true;
}

NAN_METHOD(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::New) {
  if (info.IsConstructCall()) {
    _VkPhysicalDeviceTransformFeedbackPropertiesEXT* self = new _VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    self->Wrap(info.Holder());
    
    info.GetReturnValue().Set(info.Holder());
  } else {
    Nan::ThrowError("VkPhysicalDeviceTransformFeedbackPropertiesEXT constructor cannot be invoked without 'new'");
  }
};

// sType
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GetsType) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.sType));
}// maxTransformFeedbackStreams
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GetmaxTransformFeedbackStreams) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.maxTransformFeedbackStreams));
}// maxTransformFeedbackBuffers
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GetmaxTransformFeedbackBuffers) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.maxTransformFeedbackBuffers));
}// maxTransformFeedbackBufferSize
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GetmaxTransformFeedbackBufferSize) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.maxTransformFeedbackBufferSize));
}// maxTransformFeedbackStreamDataSize
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GetmaxTransformFeedbackStreamDataSize) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.maxTransformFeedbackStreamDataSize));
}// maxTransformFeedbackBufferDataSize
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GetmaxTransformFeedbackBufferDataSize) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.maxTransformFeedbackBufferDataSize));
}// maxTransformFeedbackBufferDataStride
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GetmaxTransformFeedbackBufferDataStride) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.maxTransformFeedbackBufferDataStride));
}// transformFeedbackQueries
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GettransformFeedbackQueries) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.transformFeedbackQueries));
}// transformFeedbackStreamsLinesTriangles
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GettransformFeedbackStreamsLinesTriangles) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.transformFeedbackStreamsLinesTriangles));
}// transformFeedbackRasterizationStreamSelect
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GettransformFeedbackRasterizationStreamSelect) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.transformFeedbackRasterizationStreamSelect));
}// transformFeedbackDraw
NAN_GETTER(_VkPhysicalDeviceTransformFeedbackPropertiesEXT::GettransformFeedbackDraw) {
  _VkPhysicalDeviceTransformFeedbackPropertiesEXT *self = Nan::ObjectWrap::Unwrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>(info.This());
  info.GetReturnValue().Set(Nan::New<v8::Number>(self->instance.transformFeedbackDraw));
}