/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.1.5
 */
#ifndef __VK_VKDEBUGMARKEROBJECTTAGINFOEXT_H__
#define __VK_VKDEBUGMARKEROBJECTTAGINFOEXT_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkDebugMarkerObjectTagInfoEXT: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_SETTER(SetsType);
    
    static NAN_GETTER(GetobjectType);
    static NAN_SETTER(SetobjectType);
    
    static NAN_GETTER(Getobject);
    static NAN_SETTER(Setobject);
    
    static NAN_GETTER(GettagName);
    static NAN_SETTER(SettagName);
    
    static NAN_GETTER(GettagSize);
    static NAN_SETTER(SettagSize);
    
    Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> pTag;
    static NAN_GETTER(GetpTag);
    static NAN_SETTER(SetpTag);
    

    // real instance
    VkDebugMarkerObjectTagInfoEXT instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);
    bool flush(void);

  private:

    _VkDebugMarkerObjectTagInfoEXT();
    ~_VkDebugMarkerObjectTagInfoEXT();

};

#endif