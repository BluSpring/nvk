/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.1.2
 */
#ifndef __VK_VKPHYSICALDEVICESHADERCOREPROPERTIESAMD_H__
#define __VK_VKPHYSICALDEVICESHADERCOREPROPERTIESAMD_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkPhysicalDeviceShaderCorePropertiesAMD: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_GETTER(GetshaderEngineCount);
    static NAN_GETTER(GetshaderArraysPerEngineCount);
    static NAN_GETTER(GetcomputeUnitsPerShaderArray);
    static NAN_GETTER(GetsimdPerComputeUnit);
    static NAN_GETTER(GetwavefrontsPerSimd);
    static NAN_GETTER(GetwavefrontSize);
    static NAN_GETTER(GetsgprsPerSimd);
    static NAN_GETTER(GetminSgprAllocation);
    static NAN_GETTER(GetmaxSgprAllocation);
    static NAN_GETTER(GetsgprAllocationGranularity);
    static NAN_GETTER(GetvgprsPerSimd);
    static NAN_GETTER(GetminVgprAllocation);
    static NAN_GETTER(GetmaxVgprAllocation);
    static NAN_GETTER(GetvgprAllocationGranularity);

    // real instance
    VkPhysicalDeviceShaderCorePropertiesAMD instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);
    bool flush(void);

  private:

    _VkPhysicalDeviceShaderCorePropertiesAMD();
    ~_VkPhysicalDeviceShaderCorePropertiesAMD();

};

#endif