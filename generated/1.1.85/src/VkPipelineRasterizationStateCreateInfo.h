/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY node-vulkan v0.0.6
 */
#ifndef __VK_VKPIPELINERASTERIZATIONSTATECREATEINFO_H__
#define __VK_VKPIPELINERASTERIZATIONSTATECREATEINFO_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkPipelineRasterizationStateCreateInfo: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    static NAN_METHOD(flush);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_SETTER(SetsType);
    
    Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> pNext;
    static NAN_GETTER(GetpNext);
    static NAN_SETTER(SetpNext);
    
    static NAN_GETTER(Getflags);
    static NAN_SETTER(Setflags);
    
    static NAN_GETTER(GetdepthClampEnable);
    static NAN_SETTER(SetdepthClampEnable);
    
    static NAN_GETTER(GetrasterizerDiscardEnable);
    static NAN_SETTER(SetrasterizerDiscardEnable);
    
    static NAN_GETTER(GetpolygonMode);
    static NAN_SETTER(SetpolygonMode);
    
    static NAN_GETTER(GetcullMode);
    static NAN_SETTER(SetcullMode);
    
    static NAN_GETTER(GetfrontFace);
    static NAN_SETTER(SetfrontFace);
    
    static NAN_GETTER(GetdepthBiasEnable);
    static NAN_SETTER(SetdepthBiasEnable);
    
    static NAN_GETTER(GetdepthBiasConstantFactor);
    static NAN_SETTER(SetdepthBiasConstantFactor);
    
    static NAN_GETTER(GetdepthBiasClamp);
    static NAN_SETTER(SetdepthBiasClamp);
    
    static NAN_GETTER(GetdepthBiasSlopeFactor);
    static NAN_SETTER(SetdepthBiasSlopeFactor);
    
    static NAN_GETTER(GetlineWidth);
    static NAN_SETTER(SetlineWidth);
    

    // real instance
    VkPipelineRasterizationStateCreateInfo instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);

  private:
    v8::Local<v8::String> sAccess0 = Nan::New("sType").ToLocalChecked();
    v8::Local<v8::String> sAccess1 = Nan::New("pNext").ToLocalChecked();
    v8::Local<v8::String> sAccess2 = Nan::New("flags").ToLocalChecked();
    v8::Local<v8::String> sAccess3 = Nan::New("depthClampEnable").ToLocalChecked();
    v8::Local<v8::String> sAccess4 = Nan::New("rasterizerDiscardEnable").ToLocalChecked();
    v8::Local<v8::String> sAccess5 = Nan::New("polygonMode").ToLocalChecked();
    v8::Local<v8::String> sAccess6 = Nan::New("cullMode").ToLocalChecked();
    v8::Local<v8::String> sAccess7 = Nan::New("frontFace").ToLocalChecked();
    v8::Local<v8::String> sAccess8 = Nan::New("depthBiasEnable").ToLocalChecked();
    v8::Local<v8::String> sAccess9 = Nan::New("depthBiasConstantFactor").ToLocalChecked();
    v8::Local<v8::String> sAccess10 = Nan::New("depthBiasClamp").ToLocalChecked();
    v8::Local<v8::String> sAccess11 = Nan::New("depthBiasSlopeFactor").ToLocalChecked();
    v8::Local<v8::String> sAccess12 = Nan::New("lineWidth").ToLocalChecked();

    _VkPipelineRasterizationStateCreateInfo();
    ~_VkPipelineRasterizationStateCreateInfo();

};

#endif