/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY node-vulkan v0.0.8
 */
#ifndef __VK_VKSUBMITINFO_H__
#define __VK_VKSUBMITINFO_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkSubmitInfo: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_SETTER(SetsType);
    
    Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> pNext;
    static NAN_GETTER(GetpNext);
    static NAN_SETTER(SetpNext);
    
    static NAN_GETTER(GetwaitSemaphoreCount);
    static NAN_SETTER(SetwaitSemaphoreCount);
    
    std::vector<VkSemaphore>* vpWaitSemaphores;
    Nan::Persistent<v8::Array, v8::CopyablePersistentTraits<v8::Array>> pWaitSemaphores;
    static NAN_GETTER(GetpWaitSemaphores);
    static NAN_SETTER(SetpWaitSemaphores);
    
    Nan::Persistent<v8::Array, v8::CopyablePersistentTraits<v8::Array>> pWaitDstStageMask;
    static NAN_GETTER(GetpWaitDstStageMask);
    static NAN_SETTER(SetpWaitDstStageMask);
    
    static NAN_GETTER(GetcommandBufferCount);
    static NAN_SETTER(SetcommandBufferCount);
    
    std::vector<VkCommandBuffer>* vpCommandBuffers;
    Nan::Persistent<v8::Array, v8::CopyablePersistentTraits<v8::Array>> pCommandBuffers;
    static NAN_GETTER(GetpCommandBuffers);
    static NAN_SETTER(SetpCommandBuffers);
    
    static NAN_GETTER(GetsignalSemaphoreCount);
    static NAN_SETTER(SetsignalSemaphoreCount);
    
    std::vector<VkSemaphore>* vpSignalSemaphores;
    Nan::Persistent<v8::Array, v8::CopyablePersistentTraits<v8::Array>> pSignalSemaphores;
    static NAN_GETTER(GetpSignalSemaphores);
    static NAN_SETTER(SetpSignalSemaphores);
    

    // real instance
    VkSubmitInfo instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);
    bool flush(void);

  private:

    _VkSubmitInfo();
    ~_VkSubmitInfo();

};

#endif