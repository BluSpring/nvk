/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY node-vulkan v0.0.6
 */
#ifndef __VK_VKSAMPLERCREATEINFO_H__
#define __VK_VKSAMPLERCREATEINFO_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkSamplerCreateInfo: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    // #accessors
    static NAN_GETTER(GetsType);
    static NAN_SETTER(SetsType);
    
    Nan::Persistent<v8::Object, v8::CopyablePersistentTraits<v8::Object>> pNext;
    static NAN_GETTER(GetpNext);
    static NAN_SETTER(SetpNext);
    
    static NAN_GETTER(Getflags);
    static NAN_SETTER(Setflags);
    
    static NAN_GETTER(GetmagFilter);
    static NAN_SETTER(SetmagFilter);
    
    static NAN_GETTER(GetminFilter);
    static NAN_SETTER(SetminFilter);
    
    static NAN_GETTER(GetmipmapMode);
    static NAN_SETTER(SetmipmapMode);
    
    static NAN_GETTER(GetaddressModeU);
    static NAN_SETTER(SetaddressModeU);
    
    static NAN_GETTER(GetaddressModeV);
    static NAN_SETTER(SetaddressModeV);
    
    static NAN_GETTER(GetaddressModeW);
    static NAN_SETTER(SetaddressModeW);
    
    static NAN_GETTER(GetmipLodBias);
    static NAN_SETTER(SetmipLodBias);
    
    static NAN_GETTER(GetanisotropyEnable);
    static NAN_SETTER(SetanisotropyEnable);
    
    static NAN_GETTER(GetmaxAnisotropy);
    static NAN_SETTER(SetmaxAnisotropy);
    
    static NAN_GETTER(GetcompareEnable);
    static NAN_SETTER(SetcompareEnable);
    
    static NAN_GETTER(GetcompareOp);
    static NAN_SETTER(SetcompareOp);
    
    static NAN_GETTER(GetminLod);
    static NAN_SETTER(SetminLod);
    
    static NAN_GETTER(GetmaxLod);
    static NAN_SETTER(SetmaxLod);
    
    static NAN_GETTER(GetborderColor);
    static NAN_SETTER(SetborderColor);
    
    static NAN_GETTER(GetunnormalizedCoordinates);
    static NAN_SETTER(SetunnormalizedCoordinates);
    

    // real instance
    VkSamplerCreateInfo instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);

  private:
    _VkSamplerCreateInfo();
    ~_VkSamplerCreateInfo();

};

#endif