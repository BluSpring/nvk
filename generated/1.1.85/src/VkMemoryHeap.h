/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY node-vulkan v0.0.7
 */
#ifndef __VK_VKMEMORYHEAP_H__
#define __VK_VKMEMORYHEAP_H__

#include <nan.h>

#include <vulkan/vulkan_win32.h>
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

class _VkMemoryHeap: public Nan::ObjectWrap {

  public:
    // #methods
    static NAN_METHOD(New);
    static NAN_METHOD(flush);
    // #accessors
    static NAN_GETTER(Getsize);
    static NAN_GETTER(Getflags);

    // real instance
    VkMemoryHeap instance = {};

    static Nan::Persistent<v8::FunctionTemplate> constructor;
    static void Initialize(v8::Local<v8::Object> exports);

  private:
    v8::Local<v8::String> sAccess0 = Nan::New("size").ToLocalChecked();
    v8::Local<v8::String> sAccess1 = Nan::New("flags").ToLocalChecked();

    _VkMemoryHeap();
    ~_VkMemoryHeap();

};

#endif