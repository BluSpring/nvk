/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY nvk v0.3.8
 */
#ifndef __DYN_UNWRAP__
#define __DYN_UNWRAP__

#define NAPI_EXPERIMENTAL
#include <napi.h>
#include "source.h"

#include <map>
#include <string>

inline VkStructureType GetStructureTypeFromObject(Napi::Object obj) {
  if (!obj.Has("sType")) Napi::TypeError::New(obj.Env(), "Failed to resolve structure type, 'sType' property is missing").ThrowAsJavaScriptException();
  VkStructureType sType = static_cast<VkStructureType>(obj.Get("sType").As<Napi::Number>().Int32Value());
  return sType;
}

bool IsValidStructureObject(Napi::Object obj) {
  return GetStructureTypeFromObject(obj) > -1;
}

void * DynamicObjectUnwrapInstance(Napi::Object obj) {
  VkStructureType sType = GetStructureTypeFromObject(obj);
  switch (sType) {
    case VK_STRUCTURE_TYPE_APPLICATION_INFO: return (void *) &Napi::ObjectWrap<_VkApplicationInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkDeviceQueueCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkDeviceCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkInstanceCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO: return (void *) &Napi::ObjectWrap<_VkMemoryAllocateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE: return (void *) &Napi::ObjectWrap<_VkMappedMemoryRange>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET: return (void *) &Napi::ObjectWrap<_VkWriteDescriptorSet>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET: return (void *) &Napi::ObjectWrap<_VkCopyDescriptorSet>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkBufferCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkBufferViewCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_BARRIER: return (void *) &Napi::ObjectWrap<_VkMemoryBarrier>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER: return (void *) &Napi::ObjectWrap<_VkBufferMemoryBarrier>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER: return (void *) &Napi::ObjectWrap<_VkImageMemoryBarrier>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkImageCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkImageViewCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_SPARSE_INFO: return (void *) &Napi::ObjectWrap<_VkBindSparseInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkShaderModuleCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkDescriptorSetLayoutCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkDescriptorPoolCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO: return (void *) &Napi::ObjectWrap<_VkDescriptorSetAllocateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineShaderStageCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkComputePipelineCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineVertexInputStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineInputAssemblyStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineTessellationStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineViewportStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineRasterizationStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineMultisampleStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineColorBlendStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineDynamicStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineDepthStencilStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkGraphicsPipelineCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineCacheCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineLayoutCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkSamplerCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkCommandPoolCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO: return (void *) &Napi::ObjectWrap<_VkCommandBufferAllocateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO: return (void *) &Napi::ObjectWrap<_VkCommandBufferInheritanceInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO: return (void *) &Napi::ObjectWrap<_VkCommandBufferBeginInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO: return (void *) &Napi::ObjectWrap<_VkRenderPassBeginInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkRenderPassCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EVENT_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkEventCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_FENCE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkFenceCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkSemaphoreCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkQueryPoolCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkFramebufferCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBMIT_INFO: return (void *) &Napi::ObjectWrap<_VkSubmitInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkDisplayModeCreateInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkDisplaySurfaceCreateInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkDisplayPresentInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkWin32SurfaceCreateInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkSwapchainCreateInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PRESENT_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkPresentInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDebugReportCallbackCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT: return (void *) &Napi::ObjectWrap<_VkValidationFlagsEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkValidationFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD: return (void *) &Napi::ObjectWrap<_VkPipelineRasterizationStateRasterizationOrderAMD>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDebugMarkerObjectNameInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDebugMarkerObjectTagInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDebugMarkerMarkerInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkDedicatedAllocationImageCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkDedicatedAllocationBufferCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkDedicatedAllocationMemoryAllocateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkExternalMemoryImageCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkExportMemoryAllocateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkImportMemoryWin32HandleInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkExportMemoryWin32HandleInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkWin32KeyedMutexAcquireReleaseInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX: return (void *) &Napi::ObjectWrap<_VkDeviceGeneratedCommandsFeaturesNVX>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX: return (void *) &Napi::ObjectWrap<_VkDeviceGeneratedCommandsLimitsNVX>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX: return (void *) &Napi::ObjectWrap<_VkIndirectCommandsLayoutCreateInfoNVX>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX: return (void *) &Napi::ObjectWrap<_VkCmdProcessCommandsInfoNVX>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX: return (void *) &Napi::ObjectWrap<_VkCmdReserveSpaceForCommandsInfoNVX>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX: return (void *) &Napi::ObjectWrap<_VkObjectTableCreateInfoNVX>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceFeatures2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceProperties2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2: return (void *) &Napi::ObjectWrap<_VkFormatProperties2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2: return (void *) &Napi::ObjectWrap<_VkImageFormatProperties2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceImageFormatInfo2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2: return (void *) &Napi::ObjectWrap<_VkQueueFamilyProperties2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMemoryProperties2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2: return (void *) &Napi::ObjectWrap<_VkSparseImageFormatProperties2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceSparseImageFormatInfo2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDevicePushDescriptorPropertiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceDriverPropertiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR: return (void *) &Napi::ObjectWrap<_VkPresentRegionsKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceVariablePointerFeatures>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceExternalImageFormatInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkExternalImageFormatProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceExternalBufferInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkExternalBufferProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceIDProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkExternalMemoryImageCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkExternalMemoryBufferCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO: return (void *) &Napi::ObjectWrap<_VkExportMemoryAllocateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImportMemoryWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkExportMemoryWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR: return (void *) &Napi::ObjectWrap<_VkMemoryWin32HandlePropertiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkMemoryGetWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImportMemoryFdInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR: return (void *) &Napi::ObjectWrap<_VkMemoryFdPropertiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkMemoryGetFdInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkWin32KeyedMutexAcquireReleaseInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceExternalSemaphoreInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkExternalSemaphoreProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkExportSemaphoreCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImportSemaphoreWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkExportSemaphoreWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkD3D12FenceSubmitInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkSemaphoreGetWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImportSemaphoreFdInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkSemaphoreGetFdInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceExternalFenceInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkExternalFenceProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkExportFenceCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImportFenceWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkExportFenceWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkFenceGetWin32HandleInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImportFenceFdInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkFenceGetFdInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMultiviewFeatures>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMultiviewProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkRenderPassMultiviewCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT: return (void *) &Napi::ObjectWrap<_VkSurfaceCapabilities2EXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDisplayPowerInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDeviceEventInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDisplayEventInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkSwapchainCounterCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceGroupProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO: return (void *) &Napi::ObjectWrap<_VkMemoryAllocateFlagsInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO: return (void *) &Napi::ObjectWrap<_VkBindBufferMemoryInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO: return (void *) &Napi::ObjectWrap<_VkBindBufferMemoryDeviceGroupInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO: return (void *) &Napi::ObjectWrap<_VkBindImageMemoryInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO: return (void *) &Napi::ObjectWrap<_VkBindImageMemoryDeviceGroupInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO: return (void *) &Napi::ObjectWrap<_VkDeviceGroupRenderPassBeginInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO: return (void *) &Napi::ObjectWrap<_VkDeviceGroupCommandBufferBeginInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO: return (void *) &Napi::ObjectWrap<_VkDeviceGroupSubmitInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO: return (void *) &Napi::ObjectWrap<_VkDeviceGroupBindSparseInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR: return (void *) &Napi::ObjectWrap<_VkDeviceGroupPresentCapabilitiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImageSwapchainCreateInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkBindImageMemorySwapchainInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkAcquireNextImageInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkDeviceGroupPresentInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkDeviceGroupDeviceCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkDeviceGroupSwapchainCreateInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkDescriptorUpdateTemplateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_HDR_METADATA_EXT: return (void *) &Napi::ObjectWrap<_VkHdrMetadataEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE: return (void *) &Napi::ObjectWrap<_VkPresentTimesInfoGOOGLE>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineViewportWScalingStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineViewportSwizzleStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceDiscardRectanglePropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPipelineDiscardRectangleStateCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkRenderPassInputAttachmentAspectCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceSurfaceInfo2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR: return (void *) &Napi::ObjectWrap<_VkSurfaceCapabilities2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR: return (void *) &Napi::ObjectWrap<_VkSurfaceFormat2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR: return (void *) &Napi::ObjectWrap<_VkDisplayProperties2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR: return (void *) &Napi::ObjectWrap<_VkDisplayPlaneProperties2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR: return (void *) &Napi::ObjectWrap<_VkDisplayModeProperties2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR: return (void *) &Napi::ObjectWrap<_VkDisplayPlaneInfo2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR: return (void *) &Napi::ObjectWrap<_VkDisplayPlaneCapabilities2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR: return (void *) &Napi::ObjectWrap<_VkSharedPresentSurfaceCapabilitiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES: return (void *) &Napi::ObjectWrap<_VkPhysicalDevice16BitStorageFeatures>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceSubgroupProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2: return (void *) &Napi::ObjectWrap<_VkBufferMemoryRequirementsInfo2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2: return (void *) &Napi::ObjectWrap<_VkImageMemoryRequirementsInfo2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2: return (void *) &Napi::ObjectWrap<_VkImageSparseMemoryRequirementsInfo2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2: return (void *) &Napi::ObjectWrap<_VkMemoryRequirements2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2: return (void *) &Napi::ObjectWrap<_VkSparseImageMemoryRequirements2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkPhysicalDevicePointClippingProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS: return (void *) &Napi::ObjectWrap<_VkMemoryDedicatedRequirements>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO: return (void *) &Napi::ObjectWrap<_VkMemoryDedicatedAllocateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkImageViewUsageCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkPipelineTessellationDomainOriginStateCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO: return (void *) &Napi::ObjectWrap<_VkSamplerYcbcrConversionInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO: return (void *) &Napi::ObjectWrap<_VkSamplerYcbcrConversionCreateInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO: return (void *) &Napi::ObjectWrap<_VkBindImagePlaneMemoryInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO: return (void *) &Napi::ObjectWrap<_VkImagePlaneMemoryRequirementsInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceSamplerYcbcrConversionFeatures>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkSamplerYcbcrConversionImageFormatProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD: return (void *) &Napi::ObjectWrap<_VkTextureLODGatherFormatPropertiesAMD>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkConditionalRenderingBeginInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO: return (void *) &Napi::ObjectWrap<_VkProtectedSubmitInfo>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceProtectedMemoryFeatures>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceProtectedMemoryProperties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2: return (void *) &Napi::ObjectWrap<_VkDeviceQueueInfo2>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineCoverageToColorStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkSampleLocationsInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkRenderPassSampleLocationsBeginInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPipelineSampleLocationsStateCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceSampleLocationsPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkMultisamplePropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkSamplerReductionModeCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPipelineColorBlendAdvancedStateCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceInlineUniformBlockFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceInlineUniformBlockPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT: return (void *) &Napi::ObjectWrap<_VkWriteDescriptorSetInlineUniformBlockEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDescriptorPoolInlineUniformBlockCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineCoverageModulationStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkImageFormatListCreateInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkValidationCacheCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkShaderModuleValidationCacheCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMaintenance3Properties>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT: return (void *) &Napi::ObjectWrap<_VkDescriptorSetLayoutSupport>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceShaderDrawParameterFeatures>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceFloat16Int8FeaturesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceFloatControlsPropertiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDeviceQueueGlobalPriorityCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDebugUtilsObjectNameInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDebugUtilsObjectTagInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT: return (void *) &Napi::ObjectWrap<_VkDebugUtilsLabelEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDebugUtilsMessengerCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT: return (void *) &Napi::ObjectWrap<_VkDebugUtilsMessengerCallbackDataEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkImportMemoryHostPointerInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkMemoryHostPointerPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceExternalMemoryHostPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceConservativeRasterizationPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkCalibratedTimestampInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceShaderCorePropertiesAMD>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPipelineRasterizationConservativeStateCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceDescriptorIndexingFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceDescriptorIndexingPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT: return (void *) &Napi::ObjectWrap<_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR: return (void *) &Napi::ObjectWrap<_VkAttachmentDescription2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR: return (void *) &Napi::ObjectWrap<_VkAttachmentReference2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR: return (void *) &Napi::ObjectWrap<_VkSubpassDescription2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR: return (void *) &Napi::ObjectWrap<_VkSubpassDependency2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR: return (void *) &Napi::ObjectWrap<_VkRenderPassCreateInfo2KHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkSubpassBeginInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR: return (void *) &Napi::ObjectWrap<_VkSubpassEndInfoKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPipelineVertexInputDivisorStateCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDevicePCIBusInfoPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkCommandBufferInheritanceConditionalRenderingInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDevice8BitStorageFeaturesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceConditionalRenderingFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV: return (void *) &Napi::ObjectWrap<_VkQueueFamilyCheckpointPropertiesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV: return (void *) &Napi::ObjectWrap<_VkCheckpointDataNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceDepthStencilResolvePropertiesKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR: return (void *) &Napi::ObjectWrap<_VkSubpassDescriptionDepthStencilResolveKHR>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT: return (void *) &Napi::ObjectWrap<_VkImageViewASTCDecodeModeEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceASTCDecodeFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceTransformFeedbackFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceTransformFeedbackPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPipelineRasterizationStateStreamCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineRepresentativeFragmentTestStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceExclusiveScissorFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineViewportExclusiveScissorStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceCornerSampledImageFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceShaderImageFootprintFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineViewportShadingRateImageStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceShadingRateImageFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceShadingRateImagePropertiesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMeshShaderFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMeshShaderPropertiesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkRayTracingShaderGroupCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkRayTracingPipelineCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV: return (void *) &Napi::ObjectWrap<_VkGeometryTrianglesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV: return (void *) &Napi::ObjectWrap<_VkGeometryAABBNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_GEOMETRY_NV: return (void *) &Napi::ObjectWrap<_VkGeometryNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkAccelerationStructureInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV: return (void *) &Napi::ObjectWrap<_VkAccelerationStructureCreateInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV: return (void *) &Napi::ObjectWrap<_VkBindAccelerationStructureMemoryInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV: return (void *) &Napi::ObjectWrap<_VkWriteDescriptorSetAccelerationStructureNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV: return (void *) &Napi::ObjectWrap<_VkAccelerationStructureMemoryRequirementsInfoNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceRayTracingPropertiesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT: return (void *) &Napi::ObjectWrap<_VkDrmFormatModifierPropertiesListEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceImageDrmFormatModifierInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkImageDrmFormatModifierListCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkImageDrmFormatModifierExplicitCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkImageDrmFormatModifierPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkImageStencilUsageCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD: return (void *) &Napi::ObjectWrap<_VkDeviceMemoryOverallocationCreateInfoAMD>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceFragmentDensityMapFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceFragmentDensityMapPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkRenderPassFragmentDensityMapCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceDepthClipEnableFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPipelineRasterizationDepthClipStateCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMemoryBudgetPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceMemoryPriorityFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkMemoryPriorityAllocateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceBufferAddressFeaturesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkBufferDeviceAddressInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkBufferDeviceAddressCreateInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceImageViewImageFormatInfoEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT: return (void *) &Napi::ObjectWrap<_VkFilterCubicImageViewImageFormatPropertiesEXT>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceCooperativeMatrixFeaturesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV: return (void *) &Napi::ObjectWrap<_VkPhysicalDeviceCooperativeMatrixPropertiesNV>::Unwrap(obj)->instance;
    case VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV: return (void *) &Napi::ObjectWrap<_VkCooperativeMatrixPropertiesNV>::Unwrap(obj)->instance;
    
  };
  std::string constructorName = obj.Get("constructor").As<Napi::Object>().Get("name").As<Napi::String>().Utf8Value();
  std::string msg = "Dynamic Object Unwrap failed! Invalid constructor: '" + constructorName + "'";
  Napi::TypeError::New(obj.Env(), msg).ThrowAsJavaScriptException();
  return nullptr;
}

int GetStructureByteSize(Napi::Object obj) {
  VkStructureType sType = GetStructureTypeFromObject(obj);
  switch (sType) {
    case VK_STRUCTURE_TYPE_APPLICATION_INFO: return sizeof(VkApplicationInfo);
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO: return sizeof(VkDeviceQueueCreateInfo);
    case VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO: return sizeof(VkDeviceCreateInfo);
    case VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO: return sizeof(VkInstanceCreateInfo);
    case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO: return sizeof(VkMemoryAllocateInfo);
    case VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE: return sizeof(VkMappedMemoryRange);
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET: return sizeof(VkWriteDescriptorSet);
    case VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET: return sizeof(VkCopyDescriptorSet);
    case VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO: return sizeof(VkBufferCreateInfo);
    case VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO: return sizeof(VkBufferViewCreateInfo);
    case VK_STRUCTURE_TYPE_MEMORY_BARRIER: return sizeof(VkMemoryBarrier);
    case VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER: return sizeof(VkBufferMemoryBarrier);
    case VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER: return sizeof(VkImageMemoryBarrier);
    case VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO: return sizeof(VkImageCreateInfo);
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO: return sizeof(VkImageViewCreateInfo);
    case VK_STRUCTURE_TYPE_BIND_SPARSE_INFO: return sizeof(VkBindSparseInfo);
    case VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO: return sizeof(VkShaderModuleCreateInfo);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO: return sizeof(VkDescriptorSetLayoutCreateInfo);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO: return sizeof(VkDescriptorPoolCreateInfo);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO: return sizeof(VkDescriptorSetAllocateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO: return sizeof(VkPipelineShaderStageCreateInfo);
    case VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO: return sizeof(VkComputePipelineCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO: return sizeof(VkPipelineVertexInputStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO: return sizeof(VkPipelineInputAssemblyStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO: return sizeof(VkPipelineTessellationStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO: return sizeof(VkPipelineViewportStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO: return sizeof(VkPipelineRasterizationStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO: return sizeof(VkPipelineMultisampleStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO: return sizeof(VkPipelineColorBlendStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO: return sizeof(VkPipelineDynamicStateCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO: return sizeof(VkPipelineDepthStencilStateCreateInfo);
    case VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO: return sizeof(VkGraphicsPipelineCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO: return sizeof(VkPipelineCacheCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO: return sizeof(VkPipelineLayoutCreateInfo);
    case VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO: return sizeof(VkSamplerCreateInfo);
    case VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO: return sizeof(VkCommandPoolCreateInfo);
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO: return sizeof(VkCommandBufferAllocateInfo);
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO: return sizeof(VkCommandBufferInheritanceInfo);
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO: return sizeof(VkCommandBufferBeginInfo);
    case VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO: return sizeof(VkRenderPassBeginInfo);
    case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO: return sizeof(VkRenderPassCreateInfo);
    case VK_STRUCTURE_TYPE_EVENT_CREATE_INFO: return sizeof(VkEventCreateInfo);
    case VK_STRUCTURE_TYPE_FENCE_CREATE_INFO: return sizeof(VkFenceCreateInfo);
    case VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO: return sizeof(VkSemaphoreCreateInfo);
    case VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO: return sizeof(VkQueryPoolCreateInfo);
    case VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO: return sizeof(VkFramebufferCreateInfo);
    case VK_STRUCTURE_TYPE_SUBMIT_INFO: return sizeof(VkSubmitInfo);
    case VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR: return sizeof(VkDisplayModeCreateInfoKHR);
    case VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR: return sizeof(VkDisplaySurfaceCreateInfoKHR);
    case VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR: return sizeof(VkDisplayPresentInfoKHR);
    case VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR: return sizeof(VkWin32SurfaceCreateInfoKHR);
    case VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR: return sizeof(VkSwapchainCreateInfoKHR);
    case VK_STRUCTURE_TYPE_PRESENT_INFO_KHR: return sizeof(VkPresentInfoKHR);
    case VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT: return sizeof(VkDebugReportCallbackCreateInfoEXT);
    case VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT: return sizeof(VkValidationFlagsEXT);
    case VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT: return sizeof(VkValidationFeaturesEXT);
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD: return sizeof(VkPipelineRasterizationStateRasterizationOrderAMD);
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT: return sizeof(VkDebugMarkerObjectNameInfoEXT);
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT: return sizeof(VkDebugMarkerObjectTagInfoEXT);
    case VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT: return sizeof(VkDebugMarkerMarkerInfoEXT);
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV: return sizeof(VkDedicatedAllocationImageCreateInfoNV);
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV: return sizeof(VkDedicatedAllocationBufferCreateInfoNV);
    case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV: return sizeof(VkDedicatedAllocationMemoryAllocateInfoNV);
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV: return sizeof(VkExternalMemoryImageCreateInfoNV);
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV: return sizeof(VkExportMemoryAllocateInfoNV);
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV: return sizeof(VkImportMemoryWin32HandleInfoNV);
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV: return sizeof(VkExportMemoryWin32HandleInfoNV);
    case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV: return sizeof(VkWin32KeyedMutexAcquireReleaseInfoNV);
    case VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX: return sizeof(VkDeviceGeneratedCommandsFeaturesNVX);
    case VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX: return sizeof(VkDeviceGeneratedCommandsLimitsNVX);
    case VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX: return sizeof(VkIndirectCommandsLayoutCreateInfoNVX);
    case VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX: return sizeof(VkCmdProcessCommandsInfoNVX);
    case VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX: return sizeof(VkCmdReserveSpaceForCommandsInfoNVX);
    case VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX: return sizeof(VkObjectTableCreateInfoNVX);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2: return sizeof(VkPhysicalDeviceFeatures2);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2: return sizeof(VkPhysicalDeviceProperties2);
    case VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2: return sizeof(VkFormatProperties2);
    case VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2: return sizeof(VkImageFormatProperties2);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2: return sizeof(VkPhysicalDeviceImageFormatInfo2);
    case VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2: return sizeof(VkQueueFamilyProperties2);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2: return sizeof(VkPhysicalDeviceMemoryProperties2);
    case VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2: return sizeof(VkSparseImageFormatProperties2);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2: return sizeof(VkPhysicalDeviceSparseImageFormatInfo2);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR: return sizeof(VkPhysicalDevicePushDescriptorPropertiesKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR: return sizeof(VkPhysicalDeviceDriverPropertiesKHR);
    case VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR: return sizeof(VkPresentRegionsKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES: return sizeof(VkPhysicalDeviceVariablePointerFeatures);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO: return sizeof(VkPhysicalDeviceExternalImageFormatInfo);
    case VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES: return sizeof(VkExternalImageFormatProperties);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO: return sizeof(VkPhysicalDeviceExternalBufferInfo);
    case VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES: return sizeof(VkExternalBufferProperties);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES: return sizeof(VkPhysicalDeviceIDProperties);
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO: return sizeof(VkExternalMemoryImageCreateInfo);
    case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO: return sizeof(VkExternalMemoryBufferCreateInfo);
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO: return sizeof(VkExportMemoryAllocateInfo);
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR: return sizeof(VkImportMemoryWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR: return sizeof(VkExportMemoryWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR: return sizeof(VkMemoryWin32HandlePropertiesKHR);
    case VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR: return sizeof(VkMemoryGetWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR: return sizeof(VkImportMemoryFdInfoKHR);
    case VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR: return sizeof(VkMemoryFdPropertiesKHR);
    case VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR: return sizeof(VkMemoryGetFdInfoKHR);
    case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR: return sizeof(VkWin32KeyedMutexAcquireReleaseInfoKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO: return sizeof(VkPhysicalDeviceExternalSemaphoreInfo);
    case VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES: return sizeof(VkExternalSemaphoreProperties);
    case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO: return sizeof(VkExportSemaphoreCreateInfo);
    case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: return sizeof(VkImportSemaphoreWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR: return sizeof(VkExportSemaphoreWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR: return sizeof(VkD3D12FenceSubmitInfoKHR);
    case VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR: return sizeof(VkSemaphoreGetWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR: return sizeof(VkImportSemaphoreFdInfoKHR);
    case VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR: return sizeof(VkSemaphoreGetFdInfoKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO: return sizeof(VkPhysicalDeviceExternalFenceInfo);
    case VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES: return sizeof(VkExternalFenceProperties);
    case VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO: return sizeof(VkExportFenceCreateInfo);
    case VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR: return sizeof(VkImportFenceWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR: return sizeof(VkExportFenceWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR: return sizeof(VkFenceGetWin32HandleInfoKHR);
    case VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR: return sizeof(VkImportFenceFdInfoKHR);
    case VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR: return sizeof(VkFenceGetFdInfoKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES: return sizeof(VkPhysicalDeviceMultiviewFeatures);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES: return sizeof(VkPhysicalDeviceMultiviewProperties);
    case VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO: return sizeof(VkRenderPassMultiviewCreateInfo);
    case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT: return sizeof(VkSurfaceCapabilities2EXT);
    case VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT: return sizeof(VkDisplayPowerInfoEXT);
    case VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT: return sizeof(VkDeviceEventInfoEXT);
    case VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT: return sizeof(VkDisplayEventInfoEXT);
    case VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT: return sizeof(VkSwapchainCounterCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES: return sizeof(VkPhysicalDeviceGroupProperties);
    case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO: return sizeof(VkMemoryAllocateFlagsInfo);
    case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO: return sizeof(VkBindBufferMemoryInfo);
    case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO: return sizeof(VkBindBufferMemoryDeviceGroupInfo);
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO: return sizeof(VkBindImageMemoryInfo);
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO: return sizeof(VkBindImageMemoryDeviceGroupInfo);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO: return sizeof(VkDeviceGroupRenderPassBeginInfo);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO: return sizeof(VkDeviceGroupCommandBufferBeginInfo);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO: return sizeof(VkDeviceGroupSubmitInfo);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO: return sizeof(VkDeviceGroupBindSparseInfo);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR: return sizeof(VkDeviceGroupPresentCapabilitiesKHR);
    case VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR: return sizeof(VkImageSwapchainCreateInfoKHR);
    case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR: return sizeof(VkBindImageMemorySwapchainInfoKHR);
    case VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR: return sizeof(VkAcquireNextImageInfoKHR);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR: return sizeof(VkDeviceGroupPresentInfoKHR);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO: return sizeof(VkDeviceGroupDeviceCreateInfo);
    case VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR: return sizeof(VkDeviceGroupSwapchainCreateInfoKHR);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO: return sizeof(VkDescriptorUpdateTemplateCreateInfo);
    case VK_STRUCTURE_TYPE_HDR_METADATA_EXT: return sizeof(VkHdrMetadataEXT);
    case VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE: return sizeof(VkPresentTimesInfoGOOGLE);
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV: return sizeof(VkPipelineViewportWScalingStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV: return sizeof(VkPipelineViewportSwizzleStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceDiscardRectanglePropertiesEXT);
    case VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT: return sizeof(VkPipelineDiscardRectangleStateCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX: return sizeof(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX);
    case VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO: return sizeof(VkRenderPassInputAttachmentAspectCreateInfo);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR: return sizeof(VkPhysicalDeviceSurfaceInfo2KHR);
    case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR: return sizeof(VkSurfaceCapabilities2KHR);
    case VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR: return sizeof(VkSurfaceFormat2KHR);
    case VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR: return sizeof(VkDisplayProperties2KHR);
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR: return sizeof(VkDisplayPlaneProperties2KHR);
    case VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR: return sizeof(VkDisplayModeProperties2KHR);
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR: return sizeof(VkDisplayPlaneInfo2KHR);
    case VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR: return sizeof(VkDisplayPlaneCapabilities2KHR);
    case VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR: return sizeof(VkSharedPresentSurfaceCapabilitiesKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES: return sizeof(VkPhysicalDevice16BitStorageFeatures);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES: return sizeof(VkPhysicalDeviceSubgroupProperties);
    case VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2: return sizeof(VkBufferMemoryRequirementsInfo2);
    case VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2: return sizeof(VkImageMemoryRequirementsInfo2);
    case VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2: return sizeof(VkImageSparseMemoryRequirementsInfo2);
    case VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2: return sizeof(VkMemoryRequirements2);
    case VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2: return sizeof(VkSparseImageMemoryRequirements2);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES: return sizeof(VkPhysicalDevicePointClippingProperties);
    case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS: return sizeof(VkMemoryDedicatedRequirements);
    case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO: return sizeof(VkMemoryDedicatedAllocateInfo);
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO: return sizeof(VkImageViewUsageCreateInfo);
    case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO: return sizeof(VkPipelineTessellationDomainOriginStateCreateInfo);
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO: return sizeof(VkSamplerYcbcrConversionInfo);
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO: return sizeof(VkSamplerYcbcrConversionCreateInfo);
    case VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO: return sizeof(VkBindImagePlaneMemoryInfo);
    case VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO: return sizeof(VkImagePlaneMemoryRequirementsInfo);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES: return sizeof(VkPhysicalDeviceSamplerYcbcrConversionFeatures);
    case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES: return sizeof(VkSamplerYcbcrConversionImageFormatProperties);
    case VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD: return sizeof(VkTextureLODGatherFormatPropertiesAMD);
    case VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT: return sizeof(VkConditionalRenderingBeginInfoEXT);
    case VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO: return sizeof(VkProtectedSubmitInfo);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES: return sizeof(VkPhysicalDeviceProtectedMemoryFeatures);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES: return sizeof(VkPhysicalDeviceProtectedMemoryProperties);
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2: return sizeof(VkDeviceQueueInfo2);
    case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV: return sizeof(VkPipelineCoverageToColorStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT);
    case VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT: return sizeof(VkSampleLocationsInfoEXT);
    case VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT: return sizeof(VkRenderPassSampleLocationsBeginInfoEXT);
    case VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT: return sizeof(VkPipelineSampleLocationsStateCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceSampleLocationsPropertiesEXT);
    case VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT: return sizeof(VkMultisamplePropertiesEXT);
    case VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT: return sizeof(VkSamplerReductionModeCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT: return sizeof(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT);
    case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT: return sizeof(VkPipelineColorBlendAdvancedStateCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT: return sizeof(VkPhysicalDeviceInlineUniformBlockFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceInlineUniformBlockPropertiesEXT);
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT: return sizeof(VkWriteDescriptorSetInlineUniformBlockEXT);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT: return sizeof(VkDescriptorPoolInlineUniformBlockCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV: return sizeof(VkPipelineCoverageModulationStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR: return sizeof(VkImageFormatListCreateInfoKHR);
    case VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT: return sizeof(VkValidationCacheCreateInfoEXT);
    case VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT: return sizeof(VkShaderModuleValidationCacheCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES: return sizeof(VkPhysicalDeviceMaintenance3Properties);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT: return sizeof(VkDescriptorSetLayoutSupport);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES: return sizeof(VkPhysicalDeviceShaderDrawParameterFeatures);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR: return sizeof(VkPhysicalDeviceFloat16Int8FeaturesKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR: return sizeof(VkPhysicalDeviceFloatControlsPropertiesKHR);
    case VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT: return sizeof(VkDeviceQueueGlobalPriorityCreateInfoEXT);
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT: return sizeof(VkDebugUtilsObjectNameInfoEXT);
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT: return sizeof(VkDebugUtilsObjectTagInfoEXT);
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT: return sizeof(VkDebugUtilsLabelEXT);
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT: return sizeof(VkDebugUtilsMessengerCreateInfoEXT);
    case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT: return sizeof(VkDebugUtilsMessengerCallbackDataEXT);
    case VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT: return sizeof(VkImportMemoryHostPointerInfoEXT);
    case VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT: return sizeof(VkMemoryHostPointerPropertiesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceExternalMemoryHostPropertiesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceConservativeRasterizationPropertiesEXT);
    case VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT: return sizeof(VkCalibratedTimestampInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD: return sizeof(VkPhysicalDeviceShaderCorePropertiesAMD);
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT: return sizeof(VkPipelineRasterizationConservativeStateCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT: return sizeof(VkPhysicalDeviceDescriptorIndexingFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceDescriptorIndexingPropertiesEXT);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT: return sizeof(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT: return sizeof(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT);
    case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT: return sizeof(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT);
    case VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR: return sizeof(VkAttachmentDescription2KHR);
    case VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR: return sizeof(VkAttachmentReference2KHR);
    case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR: return sizeof(VkSubpassDescription2KHR);
    case VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR: return sizeof(VkSubpassDependency2KHR);
    case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR: return sizeof(VkRenderPassCreateInfo2KHR);
    case VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR: return sizeof(VkSubpassBeginInfoKHR);
    case VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR: return sizeof(VkSubpassEndInfoKHR);
    case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT: return sizeof(VkPipelineVertexInputDivisorStateCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT: return sizeof(VkPhysicalDevicePCIBusInfoPropertiesEXT);
    case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT: return sizeof(VkCommandBufferInheritanceConditionalRenderingInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR: return sizeof(VkPhysicalDevice8BitStorageFeaturesKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT: return sizeof(VkPhysicalDeviceConditionalRenderingFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR: return sizeof(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR: return sizeof(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT: return sizeof(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT);
    case VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV: return sizeof(VkQueueFamilyCheckpointPropertiesNV);
    case VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV: return sizeof(VkCheckpointDataNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR: return sizeof(VkPhysicalDeviceDepthStencilResolvePropertiesKHR);
    case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR: return sizeof(VkSubpassDescriptionDepthStencilResolveKHR);
    case VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT: return sizeof(VkImageViewASTCDecodeModeEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT: return sizeof(VkPhysicalDeviceASTCDecodeFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT: return sizeof(VkPhysicalDeviceTransformFeedbackFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceTransformFeedbackPropertiesEXT);
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT: return sizeof(VkPipelineRasterizationStateStreamCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV: return sizeof(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV);
    case VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV: return sizeof(VkPipelineRepresentativeFragmentTestStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV: return sizeof(VkPhysicalDeviceExclusiveScissorFeaturesNV);
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV: return sizeof(VkPipelineViewportExclusiveScissorStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV: return sizeof(VkPhysicalDeviceCornerSampledImageFeaturesNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV: return sizeof(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV: return sizeof(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV: return sizeof(VkPhysicalDeviceShaderImageFootprintFeaturesNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV: return sizeof(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV);
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV: return sizeof(VkPipelineViewportShadingRateImageStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV: return sizeof(VkPhysicalDeviceShadingRateImageFeaturesNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV: return sizeof(VkPhysicalDeviceShadingRateImagePropertiesNV);
    case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV: return sizeof(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV: return sizeof(VkPhysicalDeviceMeshShaderFeaturesNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV: return sizeof(VkPhysicalDeviceMeshShaderPropertiesNV);
    case VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV: return sizeof(VkRayTracingShaderGroupCreateInfoNV);
    case VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV: return sizeof(VkRayTracingPipelineCreateInfoNV);
    case VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV: return sizeof(VkGeometryTrianglesNV);
    case VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV: return sizeof(VkGeometryAABBNV);
    case VK_STRUCTURE_TYPE_GEOMETRY_NV: return sizeof(VkGeometryNV);
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV: return sizeof(VkAccelerationStructureInfoNV);
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV: return sizeof(VkAccelerationStructureCreateInfoNV);
    case VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV: return sizeof(VkBindAccelerationStructureMemoryInfoNV);
    case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV: return sizeof(VkWriteDescriptorSetAccelerationStructureNV);
    case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV: return sizeof(VkAccelerationStructureMemoryRequirementsInfoNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV: return sizeof(VkPhysicalDeviceRayTracingPropertiesNV);
    case VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT: return sizeof(VkDrmFormatModifierPropertiesListEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT: return sizeof(VkPhysicalDeviceImageDrmFormatModifierInfoEXT);
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT: return sizeof(VkImageDrmFormatModifierListCreateInfoEXT);
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT: return sizeof(VkImageDrmFormatModifierExplicitCreateInfoEXT);
    case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT: return sizeof(VkImageDrmFormatModifierPropertiesEXT);
    case VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT: return sizeof(VkImageStencilUsageCreateInfoEXT);
    case VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD: return sizeof(VkDeviceMemoryOverallocationCreateInfoAMD);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT: return sizeof(VkPhysicalDeviceFragmentDensityMapFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceFragmentDensityMapPropertiesEXT);
    case VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT: return sizeof(VkRenderPassFragmentDensityMapCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT: return sizeof(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT: return sizeof(VkPhysicalDeviceDepthClipEnableFeaturesEXT);
    case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT: return sizeof(VkPipelineRasterizationDepthClipStateCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT: return sizeof(VkPhysicalDeviceMemoryBudgetPropertiesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT: return sizeof(VkPhysicalDeviceMemoryPriorityFeaturesEXT);
    case VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT: return sizeof(VkMemoryPriorityAllocateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT: return sizeof(VkPhysicalDeviceBufferAddressFeaturesEXT);
    case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT: return sizeof(VkBufferDeviceAddressInfoEXT);
    case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT: return sizeof(VkBufferDeviceAddressCreateInfoEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT: return sizeof(VkPhysicalDeviceImageViewImageFormatInfoEXT);
    case VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT: return sizeof(VkFilterCubicImageViewImageFormatPropertiesEXT);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV: return sizeof(VkPhysicalDeviceCooperativeMatrixFeaturesNV);
    case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV: return sizeof(VkPhysicalDeviceCooperativeMatrixPropertiesNV);
    case VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV: return sizeof(VkCooperativeMatrixPropertiesNV);
    
  };
  std::string constructorName = obj.Get("constructor").As<Napi::Object>().Get("name").As<Napi::String>().Utf8Value();
  std::string msg = "Cannot resolve structure byteSize! Invalid constructor: '" + constructorName + "'";
  Napi::TypeError::New(obj.Env(), msg).ThrowAsJavaScriptException();
  return -1;
}

#endif
