[
  {
    "kind": "HANDLE",
    "name": "VkInstance",
    "parent": null,
    "isNonDispatchable": false,
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Opaque handle to an instance object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkPhysicalDevice",
    "parent": "VkInstance",
    "isNonDispatchable": false,
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Opaque handle to a physical device object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDevice",
    "parent": "VkPhysicalDevice",
    "isNonDispatchable": false,
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Opaque handle to a device object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkQueue",
    "parent": "VkDevice",
    "isNonDispatchable": false,
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Opaque handle to a queue object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkCommandBuffer",
    "parent": "VkCommandPool",
    "isNonDispatchable": false,
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Opaque handle to a command buffer object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDeviceMemory",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Opaque handle to a device memory object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkCommandPool",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Opaque handle to a command pool object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkBuffer",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Opaque handle to a buffer object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkBufferView",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Opaque handle to a buffer view object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkImage",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Opaque handle to an image object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkImageView",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Opaque handle to an image view object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkShaderModule",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Opaque handle to a shader module object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkPipeline",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Opaque handle to a pipeline object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkPipelineLayout",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Opaque handle to a pipeline layout object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkSampler",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Opaque handle to a sampler object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDescriptorSet",
    "parent": "VkDescriptorPool",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Opaque handle to a descriptor set object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDescriptorSetLayout",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Opaque handle to a descriptor set layout object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDescriptorPool",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Opaque handle to a descriptor pool object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkFence",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Opaque handle to a fence object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkSemaphore",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Opaque handle to a semaphore object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkEvent",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Opaque handle to an event object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkQueryPool",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Opaque handle to a query pool object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkFramebuffer",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Opaque handle to a framebuffer object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkRenderPass",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Opaque handle to a render pass object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkPipelineCache",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Opaque handle to a pipeline cache object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkObjectTableNVX",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Opaque handle to an object table"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkIndirectCommandsLayoutNVX",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Opaque handle to an indirect commands layout object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDescriptorUpdateTemplate",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Opaque handle to a descriptor update template"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkSamplerYcbcrConversion",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Opaque handle to a device-specific sampler Y\\"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkValidationCacheEXT",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Opaque handle to a validation cache object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkAccelerationStructureNV",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Opaque handle to an acceleration structure object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkPerformanceConfigurationINTEL",
    "parent": "VkDevice",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Device configuration for performance queries"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDisplayKHR",
    "parent": null,
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Opaque handle to a display object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDisplayModeKHR",
    "parent": "VkPhysicalDevice,VkDisplayKHR",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Opaque handle to a display mode object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkSurfaceKHR",
    "parent": "VkInstance",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Opaque handle to a surface object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkSwapchainKHR",
    "parent": "VkSurfaceKHR",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Opaque handle to a swapchain object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDebugReportCallbackEXT",
    "parent": "VkInstance",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_report",
      "description": "Opaque handle to a debug report callback object"
    }
  },
  {
    "kind": "HANDLE",
    "name": "VkDebugUtilsMessengerEXT",
    "parent": "VkInstance",
    "isNonDispatchable": true,
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Opaque handle to a debug messenger object"
    }
  },
  {
    "kind": "ENUM",
    "type": "UNKNOWN",
    "name": "API_Constants",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "256",
        "name": "VK_MAX_PHYSICAL_DEVICE_NAME_SIZE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "16",
        "name": "VK_UUID_SIZE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_LUID_SIZE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "ALIAS",
        "value": "(int32_t)VK_LUID_SIZE",
        "name": "VK_LUID_SIZE_KHR",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "256",
        "name": "VK_MAX_EXTENSION_NAME_SIZE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "256",
        "name": "VK_MAX_DESCRIPTION_SIZE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "32",
        "name": "VK_MAX_MEMORY_TYPES",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "16",
        "name": "VK_MAX_MEMORY_HEAPS",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)1000.0f",
        "name": "VK_LOD_CLAMP_NONE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U)",
        "name": "VK_REMAINING_MIP_LEVELS",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U)",
        "name": "VK_REMAINING_ARRAY_LAYERS",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0ULL)",
        "name": "VK_WHOLE_SIZE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U)",
        "name": "VK_ATTACHMENT_UNUSED",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_TRUE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_FALSE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U)",
        "name": "VK_QUEUE_FAMILY_IGNORED",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U-1)",
        "name": "VK_QUEUE_FAMILY_EXTERNAL",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "ALIAS",
        "value": "(int32_t)VK_QUEUE_FAMILY_EXTERNAL",
        "name": "VK_QUEUE_FAMILY_EXTERNAL_KHR",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U-2)",
        "name": "VK_QUEUE_FAMILY_FOREIGN_EXT",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U)",
        "name": "VK_SUBPASS_EXTERNAL",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "32",
        "name": "VK_MAX_DEVICE_GROUP_SIZE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "ALIAS",
        "value": "(int32_t)VK_MAX_DEVICE_GROUP_SIZE",
        "name": "VK_MAX_DEVICE_GROUP_SIZE_KHR",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "256",
        "name": "VK_MAX_DRIVER_NAME_SIZE_KHR",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "256",
        "name": "VK_MAX_DRIVER_INFO_SIZE_KHR",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "(int32_t)(~0U)",
        "name": "VK_SHADER_UNUSED_NV",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_NULL_HANDLE",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "xlib",
    "include": "VK_USE_PLATFORM_XLIB_KHR",
    "description": "X Window System, Xlib client library"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "xlib_xrandr",
    "include": "VK_USE_PLATFORM_XLIB_XRANDR_EXT",
    "description": "X Window System, Xlib client library, XRandR extension"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "xcb",
    "include": "VK_USE_PLATFORM_XCB_KHR",
    "description": "X Window System, Xcb client library"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "wayland",
    "include": "VK_USE_PLATFORM_WAYLAND_KHR",
    "description": "Wayland display server protocol"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "android",
    "include": "VK_USE_PLATFORM_ANDROID_KHR",
    "description": "Android OS"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "win32",
    "include": "VK_USE_PLATFORM_WIN32_KHR",
    "description": "Microsoft Win32 API (also refers to Win64 apps)"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "vi",
    "include": "VK_USE_PLATFORM_VI_NN",
    "description": "Nintendo Vi"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "ios",
    "include": "VK_USE_PLATFORM_IOS_MVK",
    "description": "Apple IOS"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "macos",
    "include": "VK_USE_PLATFORM_MACOS_MVK",
    "description": "Apple MacOS"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "metal",
    "include": "VK_USE_PLATFORM_METAL_EXT",
    "description": "Metal on CoreAnimation on Apple platforms"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "fuchsia",
    "include": "VK_USE_PLATFORM_FUCHSIA",
    "description": "Fuchsia"
  },
  {
    "kind": "PLATFORM_INCLUDE",
    "platform": "ggp",
    "include": "VK_USE_PLATFORM_GGP",
    "description": "Google Games Platform"
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkImageLayout",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_IMAGE_LAYOUT_UNDEFINED",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkAttachmentDescription"
            },
            {
              "kind": "pname",
              "value": "initialLayout"
            },
            {
              "kind": "pname",
              "value": "oldLayout"
            }
          ],
          "description": " does not support device access. This layout {#0#} only be used as the {#3#} member of {#1#} or {#2#}, or as the {#4#} in an image transition. When transitioning out of this layout, the contents of the memory are not guaranteed to be preserved."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_IMAGE_LAYOUT_GENERAL",
        "documentation": {
          "macros": [],
          "description": " supports all types of device access."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkFramebuffer"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT"
            }
          ],
          "description": " {#0#} only be used as a color or resolve attachment in a {#1#}. This layout is valid only for image subresources of images created with the {#2#} usage bit enabled."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " {#0#} only be used as a depth/stencil or depth/stencil resolve"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_IMAGE_LAYOUT_PREINITIALIZED",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkAttachmentDescription"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_LAYOUT_PREINITIALIZED"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_TILING_OPTIMAL"
            },
            {
              "kind": "pname",
              "value": "initialLayout"
            },
            {
              "kind": "pname",
              "value": "oldLayout"
            }
          ],
          "description": " does not support device access. This layout {#1#} only be used as the {#6#} member of {#2#} or {#3#}, or as the {#7#} in an image transition. When transitioning out of this layout, the contents of the memory are preserved. This layout is intended to be used as the initial layout for an image whose contents are written by the host, and hence the data {#0#} be written to memory immediately, without first executing a layout transition. Currently, {#4#} is only useful with <<glossary-linear-resource,linear>> images because there is not a standard layout defined for {#5#} images."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000117000",
        "name": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000117001",
        "name": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_IMAGE_LAYOUT_PRESENT_SRC_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Layout of image and image subresources"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkAttachmentLoadOp",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_ATTACHMENT_LOAD_OP_LOAD",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_ACCESS_COLOR_ATTACHMENT_READ_BIT"
            }
          ],
          "description": " specifies that the previous contents of the image within the render area will be preserved. For attachments with a depth/stencil format, this uses the access type {#0#}. For attachments with a color format, this uses the access type {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_ATTACHMENT_LOAD_OP_CLEAR",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"
            }
          ],
          "description": " specifies that the contents within the render area will be cleared to a uniform value, which is specified when a render pass instance is begun. For attachments with a depth/stencil format, this uses the access type {#0#}. For attachments with a color format, this uses the access type {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_ATTACHMENT_LOAD_OP_DONT_CARE",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"
            },
            {
              "kind": "undefined",
              "value": ""
            }
          ],
          "description": " specifies that the previous contents within the area need not be preserved; the contents of the attachment will be {#2#} inside the render area. For attachments with a depth/stencil format, this uses the access type {#0#}. For attachments with a color format, this uses the access type {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Specify how contents of an attachment are treated at the beginning of a subpass"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkAttachmentStoreOp",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_ATTACHMENT_STORE_OP_STORE",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"
            }
          ],
          "description": " specifies the contents generated during the render pass and within the render area are written to memory. For attachments with a depth/stencil format, this uses the access type {#0#}. For attachments with a color format, this uses the access type {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_ATTACHMENT_STORE_OP_DONT_CARE",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"
            },
            {
              "kind": "undefined",
              "value": ""
            }
          ],
          "description": " specifies the contents within the render area are not needed after rendering, and {#0#} be discarded; the contents of the attachment will be {#3#} inside the render area. For attachments with a depth/stencil format, this uses the access type {#1#}. For attachments with a color format, this uses the access type {#2#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Specify how contents of an attachment are treated at the end of a subpass"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkImageType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_IMAGE_TYPE_1D",
        "documentation": {
          "macros": [],
          "description": " specifies a one-dimensional image."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_IMAGE_TYPE_2D",
        "documentation": {
          "macros": [],
          "description": " specifies a two-dimensional image."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_IMAGE_TYPE_3D",
        "documentation": {
          "macros": [],
          "description": " specifies a three-dimensional image."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specifies the type of an image object"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkImageTiling",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_IMAGE_TILING_OPTIMAL",
        "documentation": {
          "macros": [],
          "description": " specifies optimal tiling (texels are laid out in an implementation-dependent arrangement, for more optimal memory access)."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_IMAGE_TILING_LINEAR",
        "documentation": {
          "macros": [],
          "description": " specifies linear tiling (texels are laid out in memory in row-major order, possibly with some padding on each row)."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkGetImageDrmFormatModifierPropertiesEXT"
            },
            {
              "kind": "slink",
              "value": "VkImageDrmFormatModifierListCreateInfoEXT"
            },
            {
              "kind": "slink",
              "value": "VkImageDrmFormatModifierExplicitCreateInfoEXT"
            }
          ],
          "description": " indicates that the image's tiling is defined by a <<glossary-drm-format-modifier,Linux DRM format modifier>>. The modifier is specified at image creation with {#2#} or {#3#}, and {#0#} be queried with {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specifies the tiling arrangement of data in an image"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkImageViewType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_IMAGE_VIEW_TYPE_1D"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_IMAGE_VIEW_TYPE_2D"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_IMAGE_VIEW_TYPE_3D"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_IMAGE_VIEW_TYPE_CUBE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_IMAGE_VIEW_TYPE_1D_ARRAY"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_IMAGE_VIEW_TYPE_2D_ARRAY"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_IMAGE_VIEW_TYPE_CUBE_ARRAY"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Image view types"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkCommandBufferLevel",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COMMAND_BUFFER_LEVEL_PRIMARY",
        "documentation": {
          "macros": [],
          "description": " specifies a primary command buffer."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COMMAND_BUFFER_LEVEL_SECONDARY",
        "documentation": {
          "macros": [],
          "description": " specifies a secondary command buffer."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Enumerant specifying a command buffer level"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkComponentSwizzle",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COMPONENT_SWIZZLE_IDENTITY",
        "documentation": {
          "macros": [],
          "description": " specifies that the component is set to the identity swizzle."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COMPONENT_SWIZZLE_ZERO",
        "documentation": {
          "macros": [],
          "description": " specifies that the component is set to zero."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_COMPONENT_SWIZZLE_ONE",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " specifies that the component is set to either 1 or 1.0, depending on whether the type of the image view format is integer or floating-point respectively, as determined by the <<formats-definition,Format Definition>> section for each {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_COMPONENT_SWIZZLE_R",
        "documentation": {
          "macros": [],
          "description": " specifies that the component is set to the value of the R component of the image."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_COMPONENT_SWIZZLE_G",
        "documentation": {
          "macros": [],
          "description": " specifies that the component is set to the value of the G component of the image."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_COMPONENT_SWIZZLE_B",
        "documentation": {
          "macros": [],
          "description": " specifies that the component is set to the value of the B component of the image."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_COMPONENT_SWIZZLE_A",
        "documentation": {
          "macros": [],
          "description": " specifies that the component is set to the value of the A component of the image."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify how a component is swizzled"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDescriptorType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DESCRIPTOR_TYPE_SAMPLER",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-sampler, sampler descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-combinedimagesampler, combined image sampler descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-sampledimage, sampled image descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-storageimage, storage image descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-uniformtexelbuffer, uniform texel buffer descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-storagetexelbuffer, storage texel buffer descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-uniformbuffer, uniform buffer descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-storagebuffer, storage buffer descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-uniformbufferdynamic, dynamic uniform buffer descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC",
        "documentation": {
          "macros": [],
          "description": " specifies a <<descriptorsets-storagebufferdynamic, dynamic storage buffer descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT",
        "documentation": {
          "macros": [],
          "description": " specifies an <<descriptorsets-inputattachment, input attachment descriptor>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies an <<descriptorsets-inlineuniformblock, inline uniform block>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Specifies the type of a descriptor in a descriptor set"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkQueryType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_QUERY_TYPE_OCCLUSION",
        "documentation": {
          "macros": [],
          "description": " specifies an <<queries-occlusion, occlusion query>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_QUERY_TYPE_PIPELINE_STATISTICS",
        "documentation": {
          "macros": [],
          "description": " specifies a <<queries-pipestats, pipeline statistics query>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_QUERY_TYPE_TIMESTAMP",
        "documentation": {
          "macros": [],
          "description": " specifies a <<queries-timestamps, timestamp query>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999008",
        "name": "VK_QUERY_TYPE_RESERVED_8"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_QUERY_TYPE_RESERVED_4"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies a <<queries-transform-feedback, transform feedback query>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Specify the type of queries managed by a query pool"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkBorderColor",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK",
        "documentation": {
          "macros": [],
          "description": " specifies a transparent, floating-point format, black color."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_BORDER_COLOR_INT_TRANSPARENT_BLACK",
        "documentation": {
          "macros": [],
          "description": " specifies a transparent, integer format, black color."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK",
        "documentation": {
          "macros": [],
          "description": " specifies an opaque, floating-point format, black color."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_BORDER_COLOR_INT_OPAQUE_BLACK",
        "documentation": {
          "macros": [],
          "description": " specifies an opaque, integer format, black color."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE",
        "documentation": {
          "macros": [],
          "description": " specifies an opaque, floating-point format, white color."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_BORDER_COLOR_INT_OPAQUE_WHITE",
        "documentation": {
          "macros": [],
          "description": " specifies an opaque, integer format, white color."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Specify border color used for texture lookups"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPipelineBindPoint",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PIPELINE_BIND_POINT_GRAPHICS",
        "documentation": {
          "macros": [],
          "description": " specifies binding as a graphics pipeline."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PIPELINE_BIND_POINT_COMPUTE",
        "documentation": {
          "macros": [],
          "description": " specifies binding as a compute pipeline."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_PIPELINE_BIND_POINT_RAY_TRACING_NV",
        "documentation": {
          "macros": [],
          "description": " specifies binding as a ray tracing pipeline."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Specify the bind point of a pipeline object to a command buffer"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPipelineCacheHeaderVersion",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PIPELINE_CACHE_HEADER_VERSION_ONE"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Encode pipeline cache version"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPrimitiveTopology",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PRIMITIVE_TOPOLOGY_POINT_LIST",
        "documentation": {
          "macros": [],
          "description": " specifies a series of <<drawing-point-lists,separate point primitives>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PRIMITIVE_TOPOLOGY_LINE_LIST",
        "documentation": {
          "macros": [],
          "description": " specifies a series of <<drawing-line-lists,separate line primitives>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP",
        "documentation": {
          "macros": [],
          "description": " specifies a series of <<drawing-line-strips,connected line primitives>> with consecutive lines sharing a vertex."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST",
        "documentation": {
          "macros": [],
          "description": " specifies a series of <<drawing-triangle-lists,separate triangle primitives>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP",
        "documentation": {
          "macros": [],
          "description": " specifies a series of <<drawing-triangle-strips,connected triangle primitives>> with consecutive triangles sharing an edge."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN",
        "documentation": {
          "macros": [],
          "description": " specifies a series of <<drawing-triangle-fans,connected triangle primitives>> with all triangles sharing a common vertex."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY",
        "documentation": {
          "macros": [],
          "description": " specifies a series <<drawing-line-lists-with-adjacency,separate line primitives with adjacency>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY",
        "documentation": {
          "macros": [],
          "description": " specifies a series <<drawing-line-strips-with-adjacency,connected line primitives with adjacency>>, with consecutive primitives sharing three vertices."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY",
        "documentation": {
          "macros": [],
          "description": " specifies a series <<drawing-line-lists-with-adjacency,separate triangle primitives with adjacency>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY",
        "documentation": {
          "macros": [],
          "description": " specifies <<drawing-line-lists-with-adjacency,connected triangle primitives with adjacency>>, with consecutive triangles sharing an edge."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_PRIMITIVE_TOPOLOGY_PATCH_LIST",
        "documentation": {
          "macros": [],
          "description": " specifies <<drawing-patch-lists,separate patch primitives>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Supported primitive topologies"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSharingMode",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SHARING_MODE_EXCLUSIVE",
        "documentation": {
          "macros": [],
          "description": " specifies that access to any range or image subresource of the object will be exclusive to a single queue family at a time."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SHARING_MODE_CONCURRENT",
        "documentation": {
          "macros": [],
          "description": " specifies that concurrent access to any range or image subresource of the object from multiple queue families is supported."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Buffer and image sharing modes"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkIndexType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_INDEX_TYPE_UINT16",
        "documentation": {
          "macros": [],
          "description": " specifies that indices are 16-bit unsigned integer values."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_INDEX_TYPE_UINT32",
        "documentation": {
          "macros": [],
          "description": " specifies that indices are 32-bit unsigned integer values."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_INDEX_TYPE_NONE_NV",
        "documentation": {
          "macros": [],
          "description": " specifies that no indices are provided."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_INDEX_TYPE_UINT8_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Type of index buffer indices"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkFilter",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_FILTER_NEAREST",
        "documentation": {
          "macros": [],
          "description": " specifies nearest filtering."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_FILTER_LINEAR",
        "documentation": {
          "macros": [],
          "description": " specifies linear filtering."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_FILTER_CUBIC_IMG"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Specify filters used for texture lookups"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSamplerMipmapMode",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SAMPLER_MIPMAP_MODE_NEAREST",
        "documentation": {
          "macros": [],
          "description": " specifies nearest filtering."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SAMPLER_MIPMAP_MODE_LINEAR",
        "documentation": {
          "macros": [],
          "description": " specifies linear filtering."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Specify mipmap mode used for texture lookups"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSamplerAddressMode",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SAMPLER_ADDRESS_MODE_REPEAT",
        "documentation": {
          "macros": [],
          "description": " specifies that the repeat wrap mode will be used."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT",
        "documentation": {
          "macros": [],
          "description": " specifies that the mirrored repeat wrap mode will be used."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE",
        "documentation": {
          "macros": [],
          "description": " specifies that the clamp to edge wrap mode will be used."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER",
        "documentation": {
          "macros": [],
          "description": " specifies that the clamp to border wrap mode will be used."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Specify behavior of sampling with texture coordinates outside an image"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkCompareOp",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COMPARE_OP_NEVER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COMPARE_OP_LESS"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_COMPARE_OP_EQUAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_COMPARE_OP_LESS_OR_EQUAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_COMPARE_OP_GREATER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_COMPARE_OP_NOT_EQUAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_COMPARE_OP_GREATER_OR_EQUAL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_COMPARE_OP_ALWAYS",
        "documentation": {
          "macros": [],
          "description": " specifies that the test always passes."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Stencil comparison function"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPolygonMode",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_POLYGON_MODE_FILL",
        "documentation": {
          "macros": [],
          "description": " specifies that polygons are rendered using the polygon rasterization rules in this section."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_POLYGON_MODE_LINE",
        "documentation": {
          "macros": [],
          "description": " specifies that polygon edges are drawn as line segments."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_POLYGON_MODE_POINT",
        "documentation": {
          "macros": [],
          "description": " specifies that polygon vertices are drawn as reference."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_POLYGON_MODE_FILL_RECTANGLE_NV",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_POLYGON_MODE_FILL_RECTANGLE_NV"
            },
            {
              "kind": "ename",
              "value": "VK_POLYGON_MODE_FILL_RECTANGLE_NV"
            }
          ],
          "description": " specifies that polygons are rendered using polygon rasterization rules, modified to consider a sample within the primitive if the sample location is inside the axis-aligned bounding box of the triangle after projection. Note that the barycentric weights used in attribute interpolation {#0#} extend outside the range [eq]#[0,1]# when these primitives are shaded. Special treatment is given to a sample position on the boundary edge of the bounding box. In such a case, if two rectangles lie on either side of a common edge (with identical endreference) on which a sample position lies, then exactly one of the triangles {#2#} produce a fragment that covers that sample during rasterization.+Polygons rendered in {#3#} mode {#1#} be clipped by the frustum or by user clip planes. If clipping is applied, the triangle is culled rather than clipped.+Area calculation and facingness are determined for {#4#} mode using the triangle's vertices."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Control polygon rasterization mode"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkFrontFace",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_FRONT_FACE_COUNTER_CLOCKWISE",
        "documentation": {
          "macros": [],
          "description": " specifies that a triangle with positive area is considered front-facing."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_FRONT_FACE_CLOCKWISE",
        "documentation": {
          "macros": [],
          "description": " specifies that a triangle with negative area is considered front-facing."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Interpret polygon front-facing orientation"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkBlendFactor",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_BLEND_FACTOR_ZERO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_BLEND_FACTOR_ONE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_BLEND_FACTOR_SRC_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_BLEND_FACTOR_DST_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_BLEND_FACTOR_SRC_ALPHA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_BLEND_FACTOR_DST_ALPHA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_BLEND_FACTOR_CONSTANT_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "12",
        "name": "VK_BLEND_FACTOR_CONSTANT_ALPHA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "13",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "14",
        "name": "VK_BLEND_FACTOR_SRC_ALPHA_SATURATE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "15",
        "name": "VK_BLEND_FACTOR_SRC1_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "16",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "17",
        "name": "VK_BLEND_FACTOR_SRC1_ALPHA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "18",
        "name": "VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "The Framebuffer",
      "description": "Framebuffer blending factors"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkBlendOp",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_BLEND_OP_ADD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_BLEND_OP_SUBTRACT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_BLEND_OP_REVERSE_SUBTRACT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_BLEND_OP_MIN"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_BLEND_OP_MAX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_BLEND_OP_ZERO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_BLEND_OP_SRC_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_BLEND_OP_DST_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_BLEND_OP_SRC_OVER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_BLEND_OP_DST_OVER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_BLEND_OP_SRC_IN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999006",
        "name": "VK_BLEND_OP_DST_IN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999007",
        "name": "VK_BLEND_OP_SRC_OUT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999008",
        "name": "VK_BLEND_OP_DST_OUT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999009",
        "name": "VK_BLEND_OP_SRC_ATOP_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999010",
        "name": "VK_BLEND_OP_DST_ATOP_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999011",
        "name": "VK_BLEND_OP_XOR_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999012",
        "name": "VK_BLEND_OP_MULTIPLY_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999013",
        "name": "VK_BLEND_OP_SCREEN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999014",
        "name": "VK_BLEND_OP_OVERLAY_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999015",
        "name": "VK_BLEND_OP_DARKEN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999016",
        "name": "VK_BLEND_OP_LIGHTEN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999017",
        "name": "VK_BLEND_OP_COLORDODGE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999018",
        "name": "VK_BLEND_OP_COLORBURN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999019",
        "name": "VK_BLEND_OP_HARDLIGHT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999020",
        "name": "VK_BLEND_OP_SOFTLIGHT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999021",
        "name": "VK_BLEND_OP_DIFFERENCE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999022",
        "name": "VK_BLEND_OP_EXCLUSION_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999023",
        "name": "VK_BLEND_OP_INVERT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999024",
        "name": "VK_BLEND_OP_INVERT_RGB_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999025",
        "name": "VK_BLEND_OP_LINEARDODGE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999026",
        "name": "VK_BLEND_OP_LINEARBURN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999027",
        "name": "VK_BLEND_OP_VIVIDLIGHT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999028",
        "name": "VK_BLEND_OP_LINEARLIGHT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999029",
        "name": "VK_BLEND_OP_PINLIGHT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999030",
        "name": "VK_BLEND_OP_HARDMIX_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999031",
        "name": "VK_BLEND_OP_HSL_HUE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999032",
        "name": "VK_BLEND_OP_HSL_SATURATION_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999033",
        "name": "VK_BLEND_OP_HSL_COLOR_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999034",
        "name": "VK_BLEND_OP_HSL_LUMINOSITY_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999035",
        "name": "VK_BLEND_OP_PLUS_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999036",
        "name": "VK_BLEND_OP_PLUS_CLAMPED_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999037",
        "name": "VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999038",
        "name": "VK_BLEND_OP_PLUS_DARKER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999039",
        "name": "VK_BLEND_OP_MINUS_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999040",
        "name": "VK_BLEND_OP_MINUS_CLAMPED_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999041",
        "name": "VK_BLEND_OP_CONTRAST_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999042",
        "name": "VK_BLEND_OP_INVERT_OVG_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999043",
        "name": "VK_BLEND_OP_RED_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999044",
        "name": "VK_BLEND_OP_GREEN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999045",
        "name": "VK_BLEND_OP_BLUE_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "The Framebuffer",
      "description": "Framebuffer blending operations"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkStencilOp",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_STENCIL_OP_KEEP",
        "documentation": {
          "macros": [],
          "description": " keeps the current value."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_STENCIL_OP_ZERO",
        "documentation": {
          "macros": [],
          "description": " sets the value to 0."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_STENCIL_OP_REPLACE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_STENCIL_OP_INCREMENT_AND_CLAMP",
        "documentation": {
          "macros": [],
          "description": " increments the current value and clamps to the maximum representable unsigned value."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_STENCIL_OP_DECREMENT_AND_CLAMP",
        "documentation": {
          "macros": [],
          "description": " decrements the current value and clamps to 0."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_STENCIL_OP_INVERT",
        "documentation": {
          "macros": [],
          "description": " bitwise-inverts the current value."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_STENCIL_OP_INCREMENT_AND_WRAP",
        "documentation": {
          "macros": [],
          "description": " increments the current value and wraps to 0 when the maximum value would have been exceeded."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_STENCIL_OP_DECREMENT_AND_WRAP",
        "documentation": {
          "macros": [],
          "description": " decrements the current value and wraps to the maximum possible value when the value would go below 0."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Stencil comparison function"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkLogicOp",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_LOGIC_OP_CLEAR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_LOGIC_OP_AND"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_LOGIC_OP_AND_REVERSE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_LOGIC_OP_COPY"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_LOGIC_OP_AND_INVERTED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_LOGIC_OP_NO_OP"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_LOGIC_OP_XOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_LOGIC_OP_OR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_LOGIC_OP_NOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_LOGIC_OP_EQUIVALENT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_LOGIC_OP_INVERT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_LOGIC_OP_OR_REVERSE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "12",
        "name": "VK_LOGIC_OP_COPY_INVERTED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "13",
        "name": "VK_LOGIC_OP_OR_INVERTED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "14",
        "name": "VK_LOGIC_OP_NAND"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "15",
        "name": "VK_LOGIC_OP_SET"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "The Framebuffer",
      "description": "Framebuffer logical operations"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkInternalAllocationType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE",
        "documentation": {
          "macros": [],
          "description": " specifies that the allocation is intended for execution by the host."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Allocation type"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSystemAllocationScope",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SYSTEM_ALLOCATION_SCOPE_COMMAND",
        "documentation": {
          "macros": [],
          "description": " specifies that the allocation is scoped to the duration of the Vulkan command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SYSTEM_ALLOCATION_SCOPE_OBJECT",
        "documentation": {
          "macros": [],
          "description": " specifies that the allocation is scoped to the lifetime of the Vulkan object that is being created or used."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SYSTEM_ALLOCATION_SCOPE_CACHE",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPipelineCache"
            },
            {
              "kind": "sname",
              "value": "VkValidationCacheEXT"
            }
          ],
          "description": " specifies that the allocation is scoped to the lifetime of a {#0#} or {#1#}"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_SYSTEM_ALLOCATION_SCOPE_DEVICE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Allocation scope"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPhysicalDeviceType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PHYSICAL_DEVICE_TYPE_OTHER",
        "documentation": {
          "macros": [],
          "description": " - the device does not match any other available types."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU",
        "documentation": {
          "macros": [],
          "description": " - the device is typically one embedded in or tightly coupled with the host."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU",
        "documentation": {
          "macros": [],
          "description": " - the device is typically a separate processor connected to the host via an interlink."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU",
        "documentation": {
          "macros": [],
          "description": " - the device is typically a virtual node in a virtualization environment."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_PHYSICAL_DEVICE_TYPE_CPU",
        "documentation": {
          "macros": [],
          "description": " - the device is typically running on the same processors as the host."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Supported physical device types"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkVertexInputRate",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_VERTEX_INPUT_RATE_VERTEX",
        "documentation": {
          "macros": [],
          "description": " specifies that vertex attribute addressing is a function of the vertex index."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_VERTEX_INPUT_RATE_INSTANCE",
        "documentation": {
          "macros": [],
          "description": " specifies that vertex attribute addressing is a function of the instance index."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Processing",
      "description": "Specify rate at which vertex attributes are pulled from buffers"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkFormat",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_FORMAT_UNDEFINED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_FORMAT_R4G4_UNORM_PACK8"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_FORMAT_R4G4B4A4_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_FORMAT_B4G4R4A4_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_FORMAT_R5G6B5_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_FORMAT_B5G6R5_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_FORMAT_R5G5B5A1_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_FORMAT_B5G5R5A1_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_FORMAT_A1R5G5B5_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_FORMAT_R8_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_FORMAT_R8_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_FORMAT_R8_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "12",
        "name": "VK_FORMAT_R8_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "13",
        "name": "VK_FORMAT_R8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "14",
        "name": "VK_FORMAT_R8_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "15",
        "name": "VK_FORMAT_R8_SRGB"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "16",
        "name": "VK_FORMAT_R8G8_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "17",
        "name": "VK_FORMAT_R8G8_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "18",
        "name": "VK_FORMAT_R8G8_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "19",
        "name": "VK_FORMAT_R8G8_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "20",
        "name": "VK_FORMAT_R8G8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "21",
        "name": "VK_FORMAT_R8G8_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "22",
        "name": "VK_FORMAT_R8G8_SRGB"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "23",
        "name": "VK_FORMAT_R8G8B8_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "24",
        "name": "VK_FORMAT_R8G8B8_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "25",
        "name": "VK_FORMAT_R8G8B8_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "26",
        "name": "VK_FORMAT_R8G8B8_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "27",
        "name": "VK_FORMAT_R8G8B8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "28",
        "name": "VK_FORMAT_R8G8B8_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "29",
        "name": "VK_FORMAT_R8G8B8_SRGB"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "30",
        "name": "VK_FORMAT_B8G8R8_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "31",
        "name": "VK_FORMAT_B8G8R8_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "32",
        "name": "VK_FORMAT_B8G8R8_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "33",
        "name": "VK_FORMAT_B8G8R8_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "34",
        "name": "VK_FORMAT_B8G8R8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "35",
        "name": "VK_FORMAT_B8G8R8_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "36",
        "name": "VK_FORMAT_B8G8R8_SRGB"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "37",
        "name": "VK_FORMAT_R8G8B8A8_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "38",
        "name": "VK_FORMAT_R8G8B8A8_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "39",
        "name": "VK_FORMAT_R8G8B8A8_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "40",
        "name": "VK_FORMAT_R8G8B8A8_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "41",
        "name": "VK_FORMAT_R8G8B8A8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "42",
        "name": "VK_FORMAT_R8G8B8A8_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "43",
        "name": "VK_FORMAT_R8G8B8A8_SRGB"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "44",
        "name": "VK_FORMAT_B8G8R8A8_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "45",
        "name": "VK_FORMAT_B8G8R8A8_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "46",
        "name": "VK_FORMAT_B8G8R8A8_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "47",
        "name": "VK_FORMAT_B8G8R8A8_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "48",
        "name": "VK_FORMAT_B8G8R8A8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "49",
        "name": "VK_FORMAT_B8G8R8A8_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "50",
        "name": "VK_FORMAT_B8G8R8A8_SRGB"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "51",
        "name": "VK_FORMAT_A8B8G8R8_UNORM_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "52",
        "name": "VK_FORMAT_A8B8G8R8_SNORM_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "53",
        "name": "VK_FORMAT_A8B8G8R8_USCALED_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "54",
        "name": "VK_FORMAT_A8B8G8R8_SSCALED_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "55",
        "name": "VK_FORMAT_A8B8G8R8_UINT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "56",
        "name": "VK_FORMAT_A8B8G8R8_SINT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "57",
        "name": "VK_FORMAT_A8B8G8R8_SRGB_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "58",
        "name": "VK_FORMAT_A2R10G10B10_UNORM_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "59",
        "name": "VK_FORMAT_A2R10G10B10_SNORM_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "60",
        "name": "VK_FORMAT_A2R10G10B10_USCALED_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "61",
        "name": "VK_FORMAT_A2R10G10B10_SSCALED_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "62",
        "name": "VK_FORMAT_A2R10G10B10_UINT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "63",
        "name": "VK_FORMAT_A2R10G10B10_SINT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "64",
        "name": "VK_FORMAT_A2B10G10R10_UNORM_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "65",
        "name": "VK_FORMAT_A2B10G10R10_SNORM_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "66",
        "name": "VK_FORMAT_A2B10G10R10_USCALED_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "67",
        "name": "VK_FORMAT_A2B10G10R10_SSCALED_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "68",
        "name": "VK_FORMAT_A2B10G10R10_UINT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "69",
        "name": "VK_FORMAT_A2B10G10R10_SINT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "70",
        "name": "VK_FORMAT_R16_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "71",
        "name": "VK_FORMAT_R16_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "72",
        "name": "VK_FORMAT_R16_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "73",
        "name": "VK_FORMAT_R16_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "74",
        "name": "VK_FORMAT_R16_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "75",
        "name": "VK_FORMAT_R16_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "76",
        "name": "VK_FORMAT_R16_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "77",
        "name": "VK_FORMAT_R16G16_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "78",
        "name": "VK_FORMAT_R16G16_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "79",
        "name": "VK_FORMAT_R16G16_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "80",
        "name": "VK_FORMAT_R16G16_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "81",
        "name": "VK_FORMAT_R16G16_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "82",
        "name": "VK_FORMAT_R16G16_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "83",
        "name": "VK_FORMAT_R16G16_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "84",
        "name": "VK_FORMAT_R16G16B16_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "85",
        "name": "VK_FORMAT_R16G16B16_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "86",
        "name": "VK_FORMAT_R16G16B16_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "87",
        "name": "VK_FORMAT_R16G16B16_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "88",
        "name": "VK_FORMAT_R16G16B16_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "89",
        "name": "VK_FORMAT_R16G16B16_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "90",
        "name": "VK_FORMAT_R16G16B16_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "91",
        "name": "VK_FORMAT_R16G16B16A16_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "92",
        "name": "VK_FORMAT_R16G16B16A16_SNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "93",
        "name": "VK_FORMAT_R16G16B16A16_USCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "94",
        "name": "VK_FORMAT_R16G16B16A16_SSCALED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "95",
        "name": "VK_FORMAT_R16G16B16A16_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "96",
        "name": "VK_FORMAT_R16G16B16A16_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "97",
        "name": "VK_FORMAT_R16G16B16A16_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "98",
        "name": "VK_FORMAT_R32_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "99",
        "name": "VK_FORMAT_R32_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "100",
        "name": "VK_FORMAT_R32_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "101",
        "name": "VK_FORMAT_R32G32_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "102",
        "name": "VK_FORMAT_R32G32_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "103",
        "name": "VK_FORMAT_R32G32_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "104",
        "name": "VK_FORMAT_R32G32B32_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "105",
        "name": "VK_FORMAT_R32G32B32_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "106",
        "name": "VK_FORMAT_R32G32B32_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "107",
        "name": "VK_FORMAT_R32G32B32A32_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "108",
        "name": "VK_FORMAT_R32G32B32A32_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "109",
        "name": "VK_FORMAT_R32G32B32A32_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "110",
        "name": "VK_FORMAT_R64_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "111",
        "name": "VK_FORMAT_R64_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "112",
        "name": "VK_FORMAT_R64_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "113",
        "name": "VK_FORMAT_R64G64_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "114",
        "name": "VK_FORMAT_R64G64_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "115",
        "name": "VK_FORMAT_R64G64_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "116",
        "name": "VK_FORMAT_R64G64B64_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "117",
        "name": "VK_FORMAT_R64G64B64_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "118",
        "name": "VK_FORMAT_R64G64B64_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "119",
        "name": "VK_FORMAT_R64G64B64A64_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "120",
        "name": "VK_FORMAT_R64G64B64A64_SINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "121",
        "name": "VK_FORMAT_R64G64B64A64_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "122",
        "name": "VK_FORMAT_B10G11R11_UFLOAT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "123",
        "name": "VK_FORMAT_E5B9G9R9_UFLOAT_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "124",
        "name": "VK_FORMAT_D16_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "125",
        "name": "VK_FORMAT_X8_D24_UNORM_PACK32"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "126",
        "name": "VK_FORMAT_D32_SFLOAT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "127",
        "name": "VK_FORMAT_S8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "128",
        "name": "VK_FORMAT_D16_UNORM_S8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "129",
        "name": "VK_FORMAT_D24_UNORM_S8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "130",
        "name": "VK_FORMAT_D32_SFLOAT_S8_UINT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "131",
        "name": "VK_FORMAT_BC1_RGB_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "132",
        "name": "VK_FORMAT_BC1_RGB_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "133",
        "name": "VK_FORMAT_BC1_RGBA_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "134",
        "name": "VK_FORMAT_BC1_RGBA_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "135",
        "name": "VK_FORMAT_BC2_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "136",
        "name": "VK_FORMAT_BC2_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "137",
        "name": "VK_FORMAT_BC3_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "138",
        "name": "VK_FORMAT_BC3_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "139",
        "name": "VK_FORMAT_BC4_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "140",
        "name": "VK_FORMAT_BC4_SNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "141",
        "name": "VK_FORMAT_BC5_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "142",
        "name": "VK_FORMAT_BC5_SNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "143",
        "name": "VK_FORMAT_BC6H_UFLOAT_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "144",
        "name": "VK_FORMAT_BC6H_SFLOAT_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "145",
        "name": "VK_FORMAT_BC7_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "146",
        "name": "VK_FORMAT_BC7_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "147",
        "name": "VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "148",
        "name": "VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "149",
        "name": "VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "150",
        "name": "VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "151",
        "name": "VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "152",
        "name": "VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "153",
        "name": "VK_FORMAT_EAC_R11_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "154",
        "name": "VK_FORMAT_EAC_R11_SNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "155",
        "name": "VK_FORMAT_EAC_R11G11_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "156",
        "name": "VK_FORMAT_EAC_R11G11_SNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "157",
        "name": "VK_FORMAT_ASTC_4x4_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "158",
        "name": "VK_FORMAT_ASTC_4x4_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "159",
        "name": "VK_FORMAT_ASTC_5x4_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "160",
        "name": "VK_FORMAT_ASTC_5x4_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "161",
        "name": "VK_FORMAT_ASTC_5x5_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "162",
        "name": "VK_FORMAT_ASTC_5x5_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "163",
        "name": "VK_FORMAT_ASTC_6x5_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "164",
        "name": "VK_FORMAT_ASTC_6x5_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "165",
        "name": "VK_FORMAT_ASTC_6x6_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "166",
        "name": "VK_FORMAT_ASTC_6x6_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "167",
        "name": "VK_FORMAT_ASTC_8x5_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "168",
        "name": "VK_FORMAT_ASTC_8x5_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "169",
        "name": "VK_FORMAT_ASTC_8x6_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "170",
        "name": "VK_FORMAT_ASTC_8x6_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "171",
        "name": "VK_FORMAT_ASTC_8x8_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "172",
        "name": "VK_FORMAT_ASTC_8x8_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "173",
        "name": "VK_FORMAT_ASTC_10x5_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "174",
        "name": "VK_FORMAT_ASTC_10x5_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "175",
        "name": "VK_FORMAT_ASTC_10x6_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "176",
        "name": "VK_FORMAT_ASTC_10x6_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "177",
        "name": "VK_FORMAT_ASTC_10x8_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "178",
        "name": "VK_FORMAT_ASTC_10x8_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "179",
        "name": "VK_FORMAT_ASTC_10x10_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "180",
        "name": "VK_FORMAT_ASTC_10x10_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "181",
        "name": "VK_FORMAT_ASTC_12x10_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "182",
        "name": "VK_FORMAT_ASTC_12x10_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "183",
        "name": "VK_FORMAT_ASTC_12x12_UNORM_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "184",
        "name": "VK_FORMAT_ASTC_12x12_SRGB_BLOCK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156000",
        "name": "VK_FORMAT_G8B8G8R8_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156001",
        "name": "VK_FORMAT_B8G8R8G8_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156002",
        "name": "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156003",
        "name": "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156004",
        "name": "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156005",
        "name": "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156006",
        "name": "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156007",
        "name": "VK_FORMAT_R10X6_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156008",
        "name": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156009",
        "name": "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156010",
        "name": "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156011",
        "name": "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156012",
        "name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156013",
        "name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156014",
        "name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156015",
        "name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156016",
        "name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156017",
        "name": "VK_FORMAT_R12X4_UNORM_PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156018",
        "name": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156019",
        "name": "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156020",
        "name": "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156021",
        "name": "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156022",
        "name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156023",
        "name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156024",
        "name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156025",
        "name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156026",
        "name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156027",
        "name": "VK_FORMAT_G16B16G16R16_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156028",
        "name": "VK_FORMAT_B16G16R16G16_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156029",
        "name": "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156030",
        "name": "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156031",
        "name": "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156032",
        "name": "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156033",
        "name": "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999006",
        "name": "VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999007",
        "name": "VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066000",
        "name": "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066001",
        "name": "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066002",
        "name": "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066003",
        "name": "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066004",
        "name": "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066005",
        "name": "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066006",
        "name": "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066007",
        "name": "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066008",
        "name": "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066009",
        "name": "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066010",
        "name": "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066011",
        "name": "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066012",
        "name": "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000066013",
        "name": "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Available image formats"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkStructureType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_STRUCTURE_TYPE_APPLICATION_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_STRUCTURE_TYPE_SUBMIT_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_STRUCTURE_TYPE_BIND_SPARSE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_STRUCTURE_TYPE_FENCE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_STRUCTURE_TYPE_EVENT_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "12",
        "name": "VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "13",
        "name": "VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "14",
        "name": "VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "15",
        "name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "16",
        "name": "VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "17",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "18",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "19",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "20",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "21",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "22",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "23",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "24",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "25",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "26",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "27",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "28",
        "name": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "29",
        "name": "VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "30",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "31",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "32",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "33",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "34",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "35",
        "name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "36",
        "name": "VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "37",
        "name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "38",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "39",
        "name": "VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "40",
        "name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "41",
        "name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "42",
        "name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "43",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "44",
        "name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "45",
        "name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "46",
        "name": "VK_STRUCTURE_TYPE_MEMORY_BARRIER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "47",
        "name": "VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "48",
        "name": "VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000094000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000157000",
        "name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000157001",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000083000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000127000",
        "name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000127001",
        "name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060000",
        "name": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060003",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060004",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060005",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060006",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060013",
        "name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060014",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000070000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000070001",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000146000",
        "name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000146001",
        "name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000146002",
        "name": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000146003",
        "name": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000146004",
        "name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059002",
        "name": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059003",
        "name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059004",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059005",
        "name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059006",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059007",
        "name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000059008",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000117000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000117001",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000117002",
        "name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000117003",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000053000",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000053001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000053002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000120000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000120000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000145000",
        "name": "VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000145001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000145002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000145003",
        "name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156000",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156001",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156002",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156003",
        "name": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156004",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156005",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000085000",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000071000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000071001",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000071002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000071003",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000071004",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000072000",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000072001",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000072002",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000112000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000112001",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000113000",
        "name": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000077000",
        "name": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000076000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000076001",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000168000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000168001",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000063000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000063000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PRESENT_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060007",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060008",
        "name": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060009",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060010",
        "name": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060011",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000060012",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_HDR_METADATA_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999006",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_GEOMETRY_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999006",
        "name": "VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999007",
        "name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999008",
        "name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999009",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999011",
        "name": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999012",
        "name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Vulkan structure types ({#0#})"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSubpassContents",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SUBPASS_CONTENTS_INLINE",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that the contents of the subpass will be recorded inline in the primary command buffer, and secondary command buffers {#0#} not be executed within the subpass."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdExecuteCommands"
            },
            {
              "kind": "flink",
              "value": "vkCmdNextSubpass"
            },
            {
              "kind": "flink",
              "value": "vkCmdEndRenderPass"
            }
          ],
          "description": " specifies that the contents are recorded in secondary command buffers that will be called from the primary command buffer, and {#0#} is the only valid command on the command buffer until {#1#} or {#2#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Specify how commands in the first subpass of a render pass are provided"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkResult",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SUCCESS",
        "documentation": {
          "macros": [],
          "description": " Command successfully completed"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_NOT_READY",
        "documentation": {
          "macros": [],
          "description": " A fence or query has not yet completed"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_TIMEOUT",
        "documentation": {
          "macros": [],
          "description": " A wait operation has not completed in the specified time"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_EVENT_SET",
        "documentation": {
          "macros": [],
          "description": " An event is signaled"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_EVENT_RESET",
        "documentation": {
          "macros": [],
          "description": " An event is unsignaled"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_INCOMPLETE",
        "documentation": {
          "macros": [],
          "description": " A return array was too small for the result"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-1",
        "name": "VK_ERROR_OUT_OF_HOST_MEMORY"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-2",
        "name": "VK_ERROR_OUT_OF_DEVICE_MEMORY"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-3",
        "name": "VK_ERROR_INITIALIZATION_FAILED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-4",
        "name": "VK_ERROR_DEVICE_LOST"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-5",
        "name": "VK_ERROR_MEMORY_MAP_FAILED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-6",
        "name": "VK_ERROR_LAYER_NOT_PRESENT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-7",
        "name": "VK_ERROR_EXTENSION_NOT_PRESENT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-8",
        "name": "VK_ERROR_FEATURE_NOT_PRESENT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-9",
        "name": "VK_ERROR_INCOMPATIBLE_DRIVER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-10",
        "name": "VK_ERROR_TOO_MANY_OBJECTS"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-11",
        "name": "VK_ERROR_FORMAT_NOT_SUPPORTED"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-12",
        "name": "VK_ERROR_FRAGMENTED_POOL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-1000069000",
        "name": "VK_ERROR_OUT_OF_POOL_MEMORY"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-1000072003",
        "name": "VK_ERROR_INVALID_EXTERNAL_HANDLE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999000",
        "name": "VK_ERROR_SURFACE_LOST_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999001",
        "name": "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_SUBOPTIMAL_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " A swapchain no longer matches the surface properties exactly, but {#0#} still be used to present to the surface successfully."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999004",
        "name": "VK_ERROR_OUT_OF_DATE_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999001",
        "name": "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999001",
        "name": "VK_ERROR_VALIDATION_FAILED_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999000",
        "name": "VK_ERROR_INVALID_SHADER_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999000",
        "name": "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999000",
        "name": "VK_ERROR_FRAGMENTATION_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999001",
        "name": "VK_ERROR_NOT_PERMITTED_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999000",
        "name": "VK_ERROR_INVALID_DEVICE_ADDRESS_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-999999000",
        "name": "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Vulkan command return codes"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDynamicState",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DYNAMIC_STATE_VIEWPORT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_DYNAMIC_STATE_SCISSOR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_DYNAMIC_STATE_LINE_WIDTH"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_DYNAMIC_STATE_DEPTH_BIAS",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdSetDepthBias"
            },
            {
              "kind": "sname",
              "value": "VkPipelineRasterizationStateCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkPipelineRasterizationStateCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "depthBiasConstantFactor"
            },
            {
              "kind": "pname",
              "value": "depthBiasClamp"
            },
            {
              "kind": "pname",
              "value": "depthBiasSlopeFactor"
            },
            {
              "kind": "pname",
              "value": "depthBiasEnable"
            }
          ],
          "description": " specifies that the {#5#}, {#6#} and {#7#} states in {#2#} will be ignored and {#0#} be set dynamically with {#1#} before any draws are performed with {#8#} in {#3#} set to {#4#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_DYNAMIC_STATE_BLEND_CONSTANTS",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdSetBlendConstants"
            },
            {
              "kind": "sname",
              "value": "VkPipelineColorBlendStateCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkPipelineColorBlendAttachmentState"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "blendConstants"
            },
            {
              "kind": "pname",
              "value": "blendEnable"
            }
          ],
          "description": " specifies that the {#5#} state in {#2#} will be ignored and {#0#} be set dynamically with {#1#} before any draws are performed with a pipeline state with {#3#} member {#6#} set to {#4#} and any of the blend functions using a constant blend color."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_DYNAMIC_STATE_DEPTH_BOUNDS",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdSetDepthBounds"
            },
            {
              "kind": "sname",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "slink",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "minDepthBounds"
            },
            {
              "kind": "pname",
              "value": "maxDepthBounds"
            },
            {
              "kind": "pname",
              "value": "depthBoundsTestEnable"
            }
          ],
          "description": " specifies that the {#5#} and {#6#} states of {#3#} will be ignored and {#0#} be set dynamically with {#1#} before any draws are performed with a pipeline state with {#2#} member {#7#} set to {#4#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdSetStencilCompareMask"
            },
            {
              "kind": "sname",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "compareMask"
            },
            {
              "kind": "pname",
              "value": "front"
            },
            {
              "kind": "pname",
              "value": "back"
            },
            {
              "kind": "pname",
              "value": "stencilTestEnable"
            }
          ],
          "description": " specifies that the {#5#} state in {#2#} for both {#6#} and {#7#} will be ignored and {#0#} be set dynamically with {#1#} before any draws are performed with a pipeline state with {#3#} member {#8#} set to {#4#}"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_DYNAMIC_STATE_STENCIL_WRITE_MASK",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdSetStencilWriteMask"
            },
            {
              "kind": "sname",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "writeMask"
            },
            {
              "kind": "pname",
              "value": "front"
            },
            {
              "kind": "pname",
              "value": "back"
            },
            {
              "kind": "pname",
              "value": "stencilTestEnable"
            }
          ],
          "description": " specifies that the {#5#} state in {#2#} for both {#6#} and {#7#} will be ignored and {#0#} be set dynamically with {#1#} before any draws are performed with a pipeline state with {#3#} member {#8#} set to {#4#}"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_DYNAMIC_STATE_STENCIL_REFERENCE",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdSetStencilReference"
            },
            {
              "kind": "sname",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkPipelineDepthStencilStateCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "reference"
            },
            {
              "kind": "pname",
              "value": "front"
            },
            {
              "kind": "pname",
              "value": "back"
            },
            {
              "kind": "pname",
              "value": "stencilTestEnable"
            }
          ],
          "description": " specifies that the {#5#} state in {#2#} for both {#6#} and {#7#} will be ignored and {#0#} be set dynamically with {#1#} before any draws are performed with a pipeline state with {#3#} member {#8#} set to {#4#}"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdSetViewportWScalingNV"
            },
            {
              "kind": "slink",
              "value": "VkPipelineViewportWScalingStateCreateInfoNV"
            },
            {
              "kind": "slink",
              "value": "VkPipelineViewportWScalingStateCreateInfoNV"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "pViewportScalings"
            },
            {
              "kind": "pname",
              "value": "viewportScalingEnable"
            }
          ],
          "description": " specifies that the {#5#} state in {#2#} will be ignored and {#0#} be set dynamically with {#1#} before any draws are performed with a pipeline state with {#3#} member {#6#} set to {#4#}"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999006",
        "name": "VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_DYNAMIC_STATE_LINE_STIPPLE_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Indicate which dynamic state is taken from dynamic state commands"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDescriptorUpdateTemplateType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET",
        "documentation": {
          "macros": [],
          "description": " specifies that the descriptor update template will be used for descriptor set updates only."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Indicates the valid usage of the descriptor update template"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkObjectType",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_OBJECT_TYPE_UNKNOWN"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_OBJECT_TYPE_INSTANCE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_OBJECT_TYPE_PHYSICAL_DEVICE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_OBJECT_TYPE_DEVICE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_OBJECT_TYPE_QUEUE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_OBJECT_TYPE_SEMAPHORE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_OBJECT_TYPE_COMMAND_BUFFER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_OBJECT_TYPE_FENCE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_OBJECT_TYPE_DEVICE_MEMORY"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_OBJECT_TYPE_BUFFER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_OBJECT_TYPE_IMAGE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_OBJECT_TYPE_EVENT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "12",
        "name": "VK_OBJECT_TYPE_QUERY_POOL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "13",
        "name": "VK_OBJECT_TYPE_BUFFER_VIEW"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "14",
        "name": "VK_OBJECT_TYPE_IMAGE_VIEW"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "15",
        "name": "VK_OBJECT_TYPE_SHADER_MODULE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "16",
        "name": "VK_OBJECT_TYPE_PIPELINE_CACHE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "17",
        "name": "VK_OBJECT_TYPE_PIPELINE_LAYOUT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "18",
        "name": "VK_OBJECT_TYPE_RENDER_PASS"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "19",
        "name": "VK_OBJECT_TYPE_PIPELINE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "20",
        "name": "VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "21",
        "name": "VK_OBJECT_TYPE_SAMPLER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "22",
        "name": "VK_OBJECT_TYPE_DESCRIPTOR_POOL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "23",
        "name": "VK_OBJECT_TYPE_DESCRIPTOR_SET"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "24",
        "name": "VK_OBJECT_TYPE_FRAMEBUFFER"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "25",
        "name": "VK_OBJECT_TYPE_COMMAND_POOL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156000",
        "name": "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000085000",
        "name": "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_SURFACE_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_SWAPCHAIN_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_DISPLAY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_OBJECT_TYPE_DISPLAY_MODE_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_OBJECT_TABLE_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_VALIDATION_CACHE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Debugging",
      "description": "Specify an enumeration to track object handle types"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSemaphoreTypeKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SEMAPHORE_TYPE_BINARY_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies a _binary semaphore_ type that has a boolean payload indicating whether the semaphore is currently signaled or unsignaled. When created, the semaphore is in the unsignaled state."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SEMAPHORE_TYPE_TIMELINE_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSemaphoreTypeCreateInfoKHR"
            },
            {
              "kind": "pname",
              "value": "initialValue"
            }
          ],
          "description": " specifies a _timeline semaphore_ type that has a monotonically increasing 64-bit unsigned integer payload indicating whether the semaphore is signaled with respect to a particular reference value. When created, the semaphore payload has the value given by the {#1#} field of {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Sepcifies the type of a semaphore object"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPresentModeKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PRESENT_MODE_IMMEDIATE_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that the presentation engine does not wait for a vertical blanking period to update the current image, meaning this mode {#0#} result in visible tearing. No internal queuing of presentation requests is needed, as the requests are applied immediately."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PRESENT_MODE_MAILBOX_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "cannot",
              "value": ""
            }
          ],
          "description": " specifies that the presentation engine waits for the next vertical blanking period to update the current image. Tearing {#0#} be observed. An internal single-entry queue is used to hold pending presentation requests. If the queue is full when a new presentation request is received, the new request replaces the existing entry, and any images associated with the prior entry become available for re-use by the application. One request is removed from the queue and processed during each vertical blanking period in which the queue is non-empty."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_PRESENT_MODE_FIFO_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "cannot",
              "value": ""
            },
            {
              "kind": "required",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "presentMode"
            }
          ],
          "description": " specifies that the presentation engine waits for the next vertical blanking period to update the current image. Tearing {#0#} be observed. An internal queue is used to hold pending presentation requests. New requests are appended to the end of the queue, and one request is removed from the beginning of the queue and processed during each vertical blanking period in which the queue is non-empty. This is the only value of {#2#} that is {#1#} to be supported."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_PRESENT_MODE_FIFO_RELAXED_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that the presentation engine generally waits for the next vertical blanking period to update the current image. If a vertical blanking period has already passed since the last update of the current image then the presentation engine does not wait for another vertical blanking period for the update, meaning this mode {#0#} result in visible tearing in this case. This mode is useful for reducing visual stutter with an application that will mostly present a new image before the next vertical blanking period, but may occasionally be late, and present a new image just after the next vertical blanking period. An internal queue is used to hold pending presentation requests. New requests are appended to the end of the queue, and one request is removed from the beginning of the queue and processed during or after each vertical blanking period in which the queue is non-empty."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that the presentation engine and application have concurrent access to a single image, which is referred to as a _shared presentable image_. The presentation engine is only required to update the current image after a new presentation request is received. Therefore the application {#2#} make a presentation request whenever an update is required. However, the presentation engine {#0#} update the current image at any point, meaning this mode {#1#} result in visible tearing."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that the presentation engine and application have concurrent access to a single image, which is referred to as a _shared presentable image_. The presentation engine periodically updates the current image on its regular refresh cycle. The application is only required to make one initial presentation request, after which the presentation engine {#2#} update the current image without any need for further presentation requests. The application {#0#} indicate the image contents have been updated by making a presentation request, but this does not guarantee the timing of when it will be updated. This mode {#1#} result in visible tearing if rendering to the image is not timed correctly."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "presentation mode supported for a surface"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkColorSpaceKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COLOR_SPACE_SRGB_NONLINEAR_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies support for the sRGB color space."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "ALIAS",
        "value": "(int32_t)VK_COLOR_SPACE_SRGB_NONLINEAR_KHR",
        "name": "VK_COLORSPACE_SRGB_NONLINEAR_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999001",
        "name": "VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the Display-P3 color space to be displayed using an sRGB-like EOTF (defined below)."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999002",
        "name": "VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the extended sRGB color space to be displayed using a linear EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the Display-P3 color space to be displayed using a linear EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999004",
        "name": "VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the DCI-P3 color space to be displayed using the DCI-P3 EOTF. Note that values in such an image are interpreted as XYZ encoded color data by the presentation engine."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999005",
        "name": "VK_COLOR_SPACE_BT709_LINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the BT709 color space to be displayed using a linear EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999006",
        "name": "VK_COLOR_SPACE_BT709_NONLINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the BT709 color space to be displayed using the SMPTE 170M EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999007",
        "name": "VK_COLOR_SPACE_BT2020_LINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the BT2020 color space to be displayed using a linear EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999008",
        "name": "VK_COLOR_SPACE_HDR10_ST2084_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the HDR10 (BT2020 color) space to be displayed using the SMPTE ST2084 Perceptual Quantizer (PQ) EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999009",
        "name": "VK_COLOR_SPACE_DOLBYVISION_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the Dolby Vision (BT2020 color space), proprietary encoding, to be displayed using the SMPTE ST2084 EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999010",
        "name": "VK_COLOR_SPACE_HDR10_HLG_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the HDR10 (BT2020 color space) to be displayed using the Hybrid Log Gamma (HLG) EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999011",
        "name": "VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the AdobeRGB color space to be displayed using a linear EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999012",
        "name": "VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the AdobeRGB color space to be displayed using the Gamma 2.2 EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999013",
        "name": "VK_COLOR_SPACE_PASS_THROUGH_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that color components are used \"`as is`\". This is intended to allow applications to supply data for color spaces not described here.ifdef::VK_AMD_display_native_hdr[]"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999014",
        "name": "VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies support for the extended sRGB color space to be displayed using an sRGB EOTF."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999003",
        "name": "VK_COLOR_SPACE_DCI_P3_LINEAR_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_COLOR_SPACE_DISPLAY_NATIVE_AMD",
        "documentation": {
          "macros": [],
          "description": " specifies support for the display's native color space. This matches the color space expectations of AMD's FreeSync2 standard, for displays supporting it."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "supported color space of the presentation engine"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkTimeDomainEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_TIME_DOMAIN_DEVICE_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdWriteTimestamp"
            }
          ],
          "description": " specifies the device time domain. Timestamp values in this time domain use the same units and are comparable with device timestamp values captured using {#0#} and are defined to be incrementing according to the <<limits-timestampPeriod,timestampPeriod>> of the device."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Supported time domains"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDebugReportObjectTypeEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "12",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "13",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "14",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "15",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "16",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "17",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "18",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "19",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "20",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "21",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "22",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "23",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "24",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "25",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "26",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "27",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "28",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "ALIAS",
        "value": "(int32_t)VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "29",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "30",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "31",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "32",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "33",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "ALIAS",
        "value": "(int32_t)VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000156000",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1000085000",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "999999000",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_report",
      "description": "Specify the type of an object handle"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkRasterizationOrderAMD",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_RASTERIZATION_ORDER_STRICT_AMD",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that operations for each primitive in a subpass {#0#} occur in <<drawing-primitive-order, primitive order>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_RASTERIZATION_ORDER_RELAXED_AMD",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that operations for each primitive in a subpass {#0#} not occur in <<drawing-primitive-order, primitive order>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Specify rasterization order for a graphics pipeline"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkValidationCheckEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_VALIDATION_CHECK_ALL_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that all validation checks are disabled."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_VALIDATION_CHECK_SHADERS_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that shader validation is disabled."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_validation_flags",
      "description": "Specify validation checks to disable"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkValidationFeatureEnableEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that GPU-assisted validation is enabled. Activating this feature instruments shader programs to generate additional diagnostic data. This feature is disabled by default."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceLimits"
            },
            {
              "kind": "pname",
              "value": "maxBoundDescriptorSets"
            }
          ],
          "description": " specifies that the validation layers reserve a descriptor set binding slot for their own use. The layer reports a value for {#0#}::{#1#} that is one less than the value reported by the device. If the device supports the binding of only one descriptor set, the validation layer does not perform GPU-assisted validation. This feature is disabled by default. The GPU-assisted validation feature must be enabled in order to use this feature."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that Vulkan best-practices validation is enabled. Activating this feature enables the output of warnings related to common misuse of the API, but which are not explicitly prohibited by the specification. This feature is disabled by default."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_validation_features",
      "description": "Specify validation features to enable"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkValidationFeatureDisableEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_VALIDATION_FEATURE_DISABLE_ALL_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that all validation checks are disabled."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that shader validation is disabled. This feature is enabled by default."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that thread safety validation is disabled. This feature is enabled by default."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that stateless parameter validation is disabled. This feature is enabled by default."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that object lifetime validation is disabled. This feature is enabled by default."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that core validation checks are disabled. This feature is enabled by default. If this feature is disabled, the shader validation and GPU-assisted validation features are also disabled."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that protection against duplicate non-dispatchable object handles is disabled. This feature is enabled by default."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_validation_features",
      "description": "Specify validation features to disable"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkIndirectCommandsTokenTypeNVX",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DESCRIPTOR_SET_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NVX"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Enum specifying"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkObjectEntryTypeNVX",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_OBJECT_ENTRY_TYPE_DESCRIPTOR_SET_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "sname",
              "value": "VkObjectTableDescriptorSetEntryNVX"
            }
          ],
          "description": " specifies a {#0#} resource entry that is registered via {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_OBJECT_ENTRY_TYPE_PIPELINE_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPipeline"
            },
            {
              "kind": "sname",
              "value": "VkObjectTablePipelineEntryNVX"
            }
          ],
          "description": " specifies a {#0#} resource entry that is registered via {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_OBJECT_ENTRY_TYPE_INDEX_BUFFER_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkBuffer"
            },
            {
              "kind": "sname",
              "value": "VkObjectTableIndexBufferEntryNVX"
            }
          ],
          "description": " specifies a {#0#} resource entry that is registered via {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_OBJECT_ENTRY_TYPE_VERTEX_BUFFER_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkBuffer"
            },
            {
              "kind": "sname",
              "value": "VkObjectTableVertexBufferEntryNVX"
            }
          ],
          "description": " specifies a {#0#} resource entry that is registered via {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_OBJECT_ENTRY_TYPE_PUSH_CONSTANT_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkObjectTablePushConstantEntryNVX"
            }
          ],
          "description": " specifies the resource entry is registered via {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Enum specifying object table entry type"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDisplayPowerStateEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DISPLAY_POWER_STATE_OFF_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that the display is powered down."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_DISPLAY_POWER_STATE_SUSPEND_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DISPLAY_POWER_STATE_ON_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_DISPLAY_POWER_STATE_OFF_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_DISPLAY_POWER_STATE_OFF_EXT"
            }
          ],
          "description": " specifies that the display is put into a low power mode, from which it {#0#} be able to transition back to {#2#} more quickly than if it were in {#3#}. This state {#1#} be the same as {#4#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_DISPLAY_POWER_STATE_ON_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that the display is powered on."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Possible power states for a display"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDeviceEventTypeEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that the fence is signaled when a display is plugged into or unplugged from the specified device. Applications {#0#} use this notification to determine when they need to re-enumerate the available displays on a device."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Events that can occur on a device object"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDisplayEventTypeEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that the fence is signaled when the first pixel of the next display refresh cycle leaves the display engine for the display."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Events that can occur on a display object"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkViewportCoordinateSwizzleNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Specify how a viewport coordinate is swizzled"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDiscardRectangleModeEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that a fragment within any discard rectangle satisfies the test."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that a fragment not within any of the discard rectangles satisfies the test."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Specify the discard rectangle mode"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPointClippingBehavior",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES",
        "documentation": {
          "macros": [],
          "description": " specifies that the primitive is discarded if the vertex lies outside any clip plane, including the planes bounding the view volume."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY",
        "documentation": {
          "macros": [],
          "description": " specifies that the primitive is discarded only if the vertex lies outside any user clip plane."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Enum specifying the point clipping behavior"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSamplerReductionModeEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SAMPLER_REDUCTION_MODE_MIN_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SAMPLER_REDUCTION_MODE_MAX_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Specify reduction mode for texture filtering"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkTessellationDomainOrigin",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT",
        "documentation": {
          "macros": [],
          "description": " specifies that the origin of the domain space is in the upper left corner, as shown in figure <<img-tessellation-topology-ul>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT",
        "documentation": {
          "macros": [],
          "description": " specifies that the origin of the domain space is in the lower left corner, as shown in figure <<img-tessellation-topology-ll>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Tessellation",
      "description": "Enum describing tessellation domain origin"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSamplerYcbcrModelConversion",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY",
        "documentation": {
          "macros": [],
          "description": " specifies that the input values to the conversion are unmodified."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY",
        "documentation": {
          "macros": [],
          "description": " specifies no model conversion but the inputs are range expanded as for Y'C~B~C~R~."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709",
        "documentation": {
          "macros": [],
          "description": " specifies the color model conversion from Y'C~B~C~R~ to R'G'B' defined in BT.709 and described in the \"`BT.709 Y’C~B~C~R~ conversion`\" section of the <<data-format,Khronos Data Format Specification>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601",
        "documentation": {
          "macros": [],
          "description": " specifies the color model conversion from Y'C~B~C~R~ to R'G'B' defined in BT.601 and described in the \"`BT.601 Y’C~B~C~R~ conversion`\" section of the <<data-format,Khronos Data Format Specification>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020",
        "documentation": {
          "macros": [],
          "description": " specifies the color model conversion from Y'C~B~C~R~ to R'G'B' defined in BT.2020 and described in the \"`BT.2020 Y’C~B~C~R~ conversion`\" section of the <<data-format,Khronos Data Format Specification>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Color model component of a color space"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkSamplerYcbcrRange",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SAMPLER_YCBCR_RANGE_ITU_FULL",
        "documentation": {
          "macros": [],
          "description": " specifies that the full range of the encoded values are valid and interpreted according to the ITU \"`full range`\" quantization rules."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW",
        "documentation": {
          "macros": [],
          "description": " specifies that headroom and foot room are reserved in the numerical range of encoded values, and the remaining values are expanded according to the ITU \"`narrow range`\" quantization rules."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Range of encoded values in a color space"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkChromaLocation",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_CHROMA_LOCATION_COSITED_EVEN",
        "documentation": {
          "macros": [],
          "description": " specifies that downsampled chroma samples are aligned with luma samples with even coordinates."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_CHROMA_LOCATION_MIDPOINT",
        "documentation": {
          "macros": [],
          "description": " specifies that downsampled chroma samples are located half way between each even luma sample and the nearest higher odd luma sample."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Position of downsampled chroma samples"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkBlendOverlapEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_BLEND_OVERLAP_UNCORRELATED_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that there is no correlation between the source and destination coverage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_BLEND_OVERLAP_DISJOINT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that the source and destination coverage are considered to have minimal overlap."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_BLEND_OVERLAP_CONJOINT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that the source and destination coverage are considered to have maximal overlap."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_blend_operation_advanced",
      "description": "Enumerant specifying the blend overlap parameter"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkCoverageModulationModeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COVERAGE_MODULATION_MODE_NONE_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COVERAGE_MODULATION_MODE_RGB_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_COVERAGE_MODULATION_MODE_ALPHA_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_COVERAGE_MODULATION_MODE_RGBA_NV"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Specify the coverage modulation mode"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkCoverageReductionModeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COVERAGE_REDUCTION_MODE_MERGE_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Specify the coverage reduction mode"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkValidationCacheHeaderVersionEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Encode validation cache version"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkShaderInfoTypeAMD",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SHADER_INFO_TYPE_STATISTICS_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SHADER_INFO_TYPE_BINARY_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_AMD_shader_info",
      "description": "Enum specifying which type of shader info to query"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkQueueGlobalPriorityEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "128",
        "name": "VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "256",
        "name": "VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "512",
        "name": "VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1024",
        "name": "VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Values specifying a system-wide queue priority"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkConservativeRasterizationModeEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that conservative rasterization is disabled and rasterization proceeds as normal."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that conservative rasterization is enabled in overestimation mode."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that conservative rasterization is enabled in underestimation mode."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Specify the conservative rasterization mode"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkVendorId",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10001",
        "name": "VK_VENDOR_ID_VIV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10002",
        "name": "VK_VENDOR_ID_VSI"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10003",
        "name": "VK_VENDOR_ID_KAZAN"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Khronos vendor IDs"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkDriverIdKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_DRIVER_ID_AMD_PROPRIETARY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_DRIVER_ID_MESA_RADV_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_DRIVER_ID_ARM_PROPRIETARY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_DRIVER_ID_GGP_PROPRIETARY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "12",
        "name": "VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Khronos driver IDs"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkShadingRatePaletteEntryNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "11",
        "name": "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Shading rate image palette entry types"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkCoarseSampleOrderTypeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV",
        "documentation": {
          "macros": [],
          "description": " specifies that coverage samples will be ordered in an implementation-dependent manner."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdSetCoarseSampleOrderNV"
            },
            {
              "kind": "sname",
              "value": "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV"
            },
            {
              "kind": "pname",
              "value": "pCustomSampleOrders"
            },
            {
              "kind": "pname",
              "value": "pCustomSampleOrders"
            }
          ],
          "description": " specifies that coverage samples will be ordered according to the array of custom orderings provided in either the {#2#} member of {#1#} or the {#3#} member of {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV",
        "documentation": {
          "macros": [],
          "description": " specifies that coverage samples will be ordered sequentially, sorted first by pixel coordinate (in row-major order) and then by coverage sample number."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV",
        "documentation": {
          "macros": [],
          "description": " specifies that coverage samples will be ordered sequentially, sorted first by coverage sample number and then by pixel coordinate (in row-major order)."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Shading rate image sample ordering types"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkCopyAccelerationStructureModeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "src"
            },
            {
              "kind": "pname",
              "value": "dst"
            },
            {
              "kind": "pname",
              "value": "dst"
            },
            {
              "kind": "pname",
              "value": "src"
            }
          ],
          "description": " creates a direct copy of the acceleration structure specified in {#1#} into the one specified by {#2#}. The {#3#} acceleration structure {#0#} have been created with the same parameters as {#4#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdWriteAccelerationStructuresPropertiesNV"
            },
            {
              "kind": "pname",
              "value": "src"
            },
            {
              "kind": "pname",
              "value": "dst"
            },
            {
              "kind": "pname",
              "value": "dst"
            },
            {
              "kind": "pname",
              "value": "compactedSize"
            },
            {
              "kind": "pname",
              "value": "src"
            }
          ],
          "description": " creates a more compact version of an acceleration structure {#2#} into {#3#}. The acceleration structure {#4#} {#0#} have been created with a {#5#} corresponding to the one returned by {#1#} after the build of the acceleration structure specified by {#6#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Acceleration structure copy mode"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkAccelerationStructureTypeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV",
        "documentation": {
          "macros": [],
          "description": " is a top-level acceleration structure containing instance data referring to bottom-level level acceleration structures."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV",
        "documentation": {
          "macros": [],
          "description": " is a bottom-level acceleration structure containing the AABBs or geometry to be intersected."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Type of acceleration structure"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkGeometryTypeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_GEOMETRY_TYPE_TRIANGLES_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_GEOMETRY_TYPE_AABBS_NV"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Enum specifying which type of geometry is provided"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkAccelerationStructureMemoryRequirementsTypeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkAccelerationStructureNV"
            }
          ],
          "description": " requests the memory requirement for the {#0#} backing store."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV",
        "documentation": {
          "macros": [],
          "description": " requests the memory requirement for scratch space during the initial build."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV",
        "documentation": {
          "macros": [],
          "description": " requests the memory requirement for scratch space during an update."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Acceleration structure memory requirement type"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkRayTracingShaderGroupTypeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SHADER_STAGE_RAYGEN_BIT_NV"
            },
            {
              "kind": "ename",
              "value": "VK_SHADER_STAGE_MISS_BIT_NV"
            },
            {
              "kind": "ename",
              "value": "VK_SHADER_STAGE_CALLABLE_BIT_NV"
            }
          ],
          "description": " indicates a shader group with a single {#0#}, {#1#}, or {#2#} shader in it."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies a shader group that only hits triangles and {#0#} not contain an intersection shader, only closest hit and any-hit."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies a shader group that only intersects with custom geometry and {#1#} contain an intersection shader and {#0#} contain closest hit and any-hit shaders."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Shader group types"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkMemoryOverallocationBehaviorAMD",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD",
        "documentation": {
          "macros": [],
          "description": " lets the implementation decide if overallocation should be allowed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD",
        "documentation": {
          "macros": [],
          "description": " specifies overallocation is allowed if platform permits."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceMemoryProperties"
            }
          ],
          "description": " specifies the application is not allowed to allocate device memory beyond the heap sizes reported by {#0#}. Allocations that are not explicitly made by the application within the scope of the Vulkan instance are not accounted for."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Specify memory overallocation behavior"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkScopeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SCOPE_DEVICE_NV",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "Device"
            }
          ],
          "description": " corresponds to SPIR-V {#0#} scope."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SCOPE_WORKGROUP_NV",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "Workgroup"
            }
          ],
          "description": " corresponds to SPIR-V {#0#} scope."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_SCOPE_SUBGROUP_NV",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "Subgroup"
            }
          ],
          "description": " corresponds to SPIR-V {#0#} scope."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_SCOPE_QUEUE_FAMILY_NV",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "QueueFamilyKHR"
            }
          ],
          "description": " corresponds to SPIR-V {#0#} scope."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Specify SPIR-V scope"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkComponentTypeNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_COMPONENT_TYPE_FLOAT16_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_COMPONENT_TYPE_FLOAT32_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_COMPONENT_TYPE_FLOAT64_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_COMPONENT_TYPE_SINT8_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_COMPONENT_TYPE_SINT16_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "5",
        "name": "VK_COMPONENT_TYPE_SINT32_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "6",
        "name": "VK_COMPONENT_TYPE_SINT64_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "7",
        "name": "VK_COMPONENT_TYPE_UINT8_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "8",
        "name": "VK_COMPONENT_TYPE_UINT16_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "9",
        "name": "VK_COMPONENT_TYPE_UINT32_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "10",
        "name": "VK_COMPONENT_TYPE_UINT64_NV"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Specify SPIR-V cooperative matrix component type"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkFullScreenExclusiveEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            }
          ],
          "description": " indicates the implementation {#0#} determine the appropriate full-screen method by whatever means it deems appropriate."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " indicates the implementation {#0#} use full-screen exclusive mechanisms when available. Such mechanisms {#1#} result in better performance and/or the availability of different presentation capabilities, but {#2#} require a more disruptive transition during swapchain initialization, first presentation and/or destruction."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            }
          ],
          "description": " indicates the implementation {#0#} avoid using full-screen mechanisms which rely on disruptive transitions."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkAcquireFullScreenExclusiveModeEXT"
            },
            {
              "kind": "flink",
              "value": "vkReleaseFullScreenExclusiveModeEXT"
            }
          ],
          "description": " indicates the application will manage full-screen exclusive mode by using the {#0#} and {#1#} commands."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Hint values an application can specify affecting full-screen transition behavior"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPerformanceConfigurationTypeINTEL",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Type of performance configuration"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkQueryPoolSamplingModeINTEL",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Enum specifying how performance queries should be captured"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPerformanceOverrideTypeINTEL",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Performance override type"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPerformanceParameterTypeINTEL",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Parameters that can be queried"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPerformanceValueTypeINTEL",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "data.value32"
            }
          ],
          "description": " specifies that unsigned 32-bit integer data is returned in {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "data.value64"
            }
          ],
          "description": " specifies that unsigned 64-bit integer data is returned in {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "data.valueFloat"
            }
          ],
          "description": " specifies that floating-point data is returned in {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "data.valueBool"
            },
            {
              "kind": "basetype",
              "value": "Bool32"
            }
          ],
          "description": " specifies that {#1#} data is returned in {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "4",
        "name": "VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkGetPerformanceParameterINTEL"
            },
            {
              "kind": "pname",
              "value": "data.valueString"
            },
            {
              "kind": "pname",
              "value": "device"
            }
          ],
          "description": " specifies that a reference to a string is returned in {#1#}. The reference is valid for the lifetime of the {#2#} parameter passed to {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Type of the parameters that can be queried"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkPipelineExecutableStatisticFormatKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "b32"
            },
            {
              "kind": "sname",
              "value": "VkPipelineExecutableStatisticValueKHR"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " specifies that the statistic is returned as a 32-bit boolean value which {#0#} be either {#4#} or {#5#} and {#1#} be read from the {#2#} field of {#3#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "i64"
            },
            {
              "kind": "sname",
              "value": "VkPipelineExecutableStatisticValueKHR"
            }
          ],
          "description": " specifies that the statistic is returned as a signed 64-bit integer and {#0#} be read from the {#1#} field of {#2#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "u64"
            },
            {
              "kind": "sname",
              "value": "VkPipelineExecutableStatisticValueKHR"
            }
          ],
          "description": " specifies that the statistic is returned as an unsigned 64-bit integer and {#0#} be read from the {#1#} field of {#2#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "f64"
            },
            {
              "kind": "sname",
              "value": "VkPipelineExecutableStatisticValueKHR"
            }
          ],
          "description": " specifies that the statistic is returned as a 64-bit floating-point value and {#0#} be read from the {#1#} field of {#2#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Enum describing a pipeline executable statistic"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkShaderFloatControlsIndependenceKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Enum specifying whether, and how, shader float controls can be set separately"
    }
  },
  {
    "kind": "ENUM",
    "type": "ENUM",
    "name": "VkLineRasterizationModeEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceLimits"
            },
            {
              "kind": "ename",
              "value": "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "strictLines"
            },
            {
              "kind": "pname",
              "value": "strictLines"
            }
          ],
          "description": " is equivalent to {#1#} if {#0#}::{#3#} is {#2#}, otherwise lines are drawn as non-{#4#} parallelograms. Both of these modes are defined in <<primsrast-lines-basic,Basic Line Segment Rasterization>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "1",
        "name": "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies lines drawn as if they were rectangles extruded from the line"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "2",
        "name": "VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies lines drawn by determining which pixel diamonds the line intersects and exits, as defined in <<primsrast-lines-bresenham,Bresenham Line Segment Rasterization>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "3",
        "name": "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies lines drawn if they were rectangles extruded from the line, with alpha falloff, as defined in <<primsrast-lines-smooth,Smooth Lines>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Line rasterization modes"
    }
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_surface",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SURFACE_SPEC_VERSION",
        "value": "25",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SURFACE_EXTENSION_NAME",
        "value": "VK_KHR_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_SURFACE_LOST_KHR",
        "extends": "VkResult",
        "value": -1000000000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
        "extends": "VkResult",
        "value": -1000000001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_SURFACE_KHR",
        "extends": "VkObjectType",
        "value": 1000000000
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroySurfaceKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfaceSupportKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfaceCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfaceFormatsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfacePresentModesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_swapchain",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SWAPCHAIN_SPEC_VERSION",
        "value": "70",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SWAPCHAIN_EXTENSION_NAME",
        "value": "VK_KHR_swapchain",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000001000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PRESENT_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000001001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_LAYOUT_PRESENT_SRC_KHR",
        "extends": "VkImageLayout",
        "value": 1000001002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SUBOPTIMAL_KHR",
        "extends": "VkResult",
        "value": 1000001003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_OUT_OF_DATE_KHR",
        "extends": "VkResult",
        "value": -1000001004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_SWAPCHAIN_KHR",
        "extends": "VkObjectType",
        "value": 1000001000
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateSwapchainKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroySwapchainKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSwapchainImagesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkAcquireNextImageKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkQueuePresentKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR",
        "extends": "VkStructureType",
        "value": 1000060007
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060008
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060009
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060010
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060011
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060012
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
        "extends": "VkSwapchainCreateFlagBitsKHR",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageSwapchainCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindImageMemorySwapchainInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAcquireNextImageInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentModeFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentModeFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupSwapchainCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDeviceGroupPresentCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDeviceGroupSurfacePresentModesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDevicePresentRectanglesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkAcquireNextImage2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR",
        "extends": "VkSwapchainCreateFlagBitsKHR",
        "value": "0x2"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_display",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DISPLAY_SPEC_VERSION",
        "value": "23",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DISPLAY_EXTENSION_NAME",
        "value": "VK_KHR_display",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000002000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000002001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_DISPLAY_KHR",
        "extends": "VkObjectType",
        "value": 1000002000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_DISPLAY_MODE_KHR",
        "extends": "VkObjectType",
        "value": 1000002001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPlaneAlphaFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPlaneAlphaFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayModeParametersKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayModePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayModeCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPlaneCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPlanePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplaySurfaceCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceDisplayPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceDisplayPlanePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDisplayPlaneSupportedDisplaysKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDisplayModePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateDisplayModeKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDisplayPlaneCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateDisplayPlaneSurfaceKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_display_swapchain",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION",
        "value": "10",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME",
        "value": "VK_KHR_display_swapchain",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000003000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR",
        "extends": "VkResult",
        "value": -1000003001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPresentInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateSharedSwapchainsKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_xlib_surface",
    "type": "instance",
    "author": "KHR",
    "platform": "xlib",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_XLIB_SURFACE_SPEC_VERSION",
        "value": "6",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_XLIB_SURFACE_EXTENSION_NAME",
        "value": "VK_KHR_xlib_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000004000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkXlibSurfaceCreateFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkXlibSurfaceCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateXlibSurfaceKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceXlibPresentationSupportKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_xcb_surface",
    "type": "instance",
    "author": "KHR",
    "platform": "xcb",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_XCB_SURFACE_SPEC_VERSION",
        "value": "6",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_XCB_SURFACE_EXTENSION_NAME",
        "value": "VK_KHR_xcb_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000005000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkXcbSurfaceCreateFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkXcbSurfaceCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateXcbSurfaceKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceXcbPresentationSupportKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_wayland_surface",
    "type": "instance",
    "author": "KHR",
    "platform": "wayland",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_WAYLAND_SURFACE_SPEC_VERSION",
        "value": "6",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_WAYLAND_SURFACE_EXTENSION_NAME",
        "value": "VK_KHR_wayland_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000006000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWaylandSurfaceCreateFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWaylandSurfaceCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateWaylandSurfaceKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceWaylandPresentationSupportKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_mir_surface",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MIR_SURFACE_SPEC_VERSION",
        "value": "4",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MIR_SURFACE_EXTENSION_NAME",
        "value": "VK_KHR_mir_surface",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_android_surface",
    "type": "instance",
    "author": "KHR",
    "platform": "android",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_ANDROID_SURFACE_SPEC_VERSION",
        "value": "6",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_ANDROID_SURFACE_EXTENSION_NAME",
        "value": "VK_KHR_android_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "ANativeWindow"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000008000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAndroidSurfaceCreateFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAndroidSurfaceCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateAndroidSurfaceKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_win32_surface",
    "type": "instance",
    "author": "KHR",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_WIN32_SURFACE_SPEC_VERSION",
        "value": "6",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_WIN32_SURFACE_EXTENSION_NAME",
        "value": "VK_KHR_win32_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000009000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWin32SurfaceCreateFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWin32SurfaceCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateWin32SurfaceKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceWin32PresentationSupportKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_ANDROID_native_buffer",
    "type": "device",
    "author": "ANDROID",
    "platform": "android",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ANDROID_NATIVE_BUFFER_SPEC_VERSION",
        "value": "8",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ANDROID_NATIVE_BUFFER_NUMBER",
        "value": "11",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ANDROID_NATIVE_BUFFER_NAME",
        "value": "VK_ANDROID_native_buffer",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID",
        "extends": "VkStructureType",
        "value": 1000010000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID",
        "extends": "VkStructureType",
        "value": 1000010001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID",
        "extends": "VkStructureType",
        "value": 1000010002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkNativeBufferANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSwapchainImageCreateInfoANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDevicePresentationPropertiesANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkNativeBufferUsage2ANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSwapchainImageUsageFlagBitsANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSwapchainImageUsageFlagsANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSwapchainGrallocUsageANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkAcquireImageANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkQueueSignalReleaseImageANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSwapchainGrallocUsage2ANDROID"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_debug_report",
    "type": "instance",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEBUG_REPORT_SPEC_VERSION",
        "value": "9",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEBUG_REPORT_EXTENSION_NAME",
        "value": "VK_EXT_debug_report",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000011000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000011000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_VALIDATION_FAILED_EXT",
        "extends": "VkResult",
        "value": -1000011001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT",
        "extends": "VkObjectType",
        "value": 1000011000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugReportObjectTypeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugReportCallbackCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateDebugReportCallbackEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroyDebugReportCallbackEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDebugReportMessageEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT",
        "extends": "VkDebugReportObjectTypeEXT",
        "value": 1000156000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT",
        "extends": "VkDebugReportObjectTypeEXT",
        "value": 1000085000
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_glsl_shader",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_GLSL_SHADER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_GLSL_SHADER_EXTENSION_NAME",
        "value": "VK_NV_glsl_shader",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_INVALID_SHADER_NV",
        "extends": "VkResult",
        "value": -1000012000
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_depth_range_unrestricted",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME",
        "value": "VK_EXT_depth_range_unrestricted",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_sampler_mirror_clamp_to_edge",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME",
        "value": "VK_KHR_sampler_mirror_clamp_to_edge",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE",
        "value": "4",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR",
        "extends": "VkSamplerAddressMode",
        "alias": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR",
        "extends": "VkSamplerAddressMode",
        "value": "4"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_IMG_filter_cubic",
    "type": "device",
    "author": "IMG",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_FILTER_CUBIC_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_FILTER_CUBIC_EXTENSION_NAME",
        "value": "VK_IMG_filter_cubic",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FILTER_CUBIC_IMG",
        "extends": "VkFilter",
        "value": 1000015000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG",
        "extends": "VkFormatFeatureFlagBits",
        "value": "0x2000"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_17",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_17_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_17_EXTENSION_NAME",
        "value": "VK_AMD_extension_17",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_18",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_18_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_18_EXTENSION_NAME",
        "value": "VK_AMD_extension_18",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_rasterization_order",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME",
        "value": "VK_AMD_rasterization_order",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD",
        "extends": "VkStructureType",
        "value": 1000018000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRasterizationOrderAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationStateRasterizationOrderAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_20",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_20_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_20_EXTENSION_NAME",
        "value": "VK_AMD_extension_20",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_trinary_minmax",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME",
        "value": "VK_AMD_shader_trinary_minmax",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_explicit_vertex_parameter",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME",
        "value": "VK_AMD_shader_explicit_vertex_parameter",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_debug_marker",
    "type": "device",
    "author": "Baldur Karlsson",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEBUG_MARKER_SPEC_VERSION",
        "value": "4",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEBUG_MARKER_EXTENSION_NAME",
        "value": "VK_EXT_debug_marker",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000022000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000022001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000022002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugReportObjectTypeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugMarkerObjectNameInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugMarkerObjectTagInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugMarkerMarkerInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDebugMarkerSetObjectTagEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDebugMarkerSetObjectNameEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDebugMarkerBeginEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDebugMarkerEndEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDebugMarkerInsertEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_24",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_24_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_24_EXTENSION_NAME",
        "value": "VK_AMD_extension_24",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QUEUE_RESERVED_6_BIT_KHR",
        "extends": "VkQueueFlagBits",
        "value": "0x40"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_RESERVED_27_BIT_KHR",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x8000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_RESERVED_30_BIT_KHR",
        "extends": "VkAccessFlagBits",
        "value": "0x40000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_RESERVED_31_BIT_KHR",
        "extends": "VkAccessFlagBits",
        "value": "-0x80000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_RESERVED_15_BIT_KHR",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x8000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_RESERVED_16_BIT_KHR",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x10000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_RESERVED_13_BIT_KHR",
        "extends": "VkImageUsageFlagBits",
        "value": "0x2000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_RESERVED_14_BIT_KHR",
        "extends": "VkImageUsageFlagBits",
        "value": "0x4000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_RESERVED_15_BIT_KHR",
        "extends": "VkImageUsageFlagBits",
        "value": "0x8000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_RESERVED_27_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "value": "0x8000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_RESERVED_28_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "value": "0x10000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QUERY_TYPE_RESERVED_8",
        "extends": "VkQueryType",
        "value": 1000023008
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_25",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_25_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_25_EXTENSION_NAME",
        "value": "VK_AMD_extension_25",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QUEUE_RESERVED_5_BIT_KHR",
        "extends": "VkQueueFlagBits",
        "value": "0x20"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_RESERVED_26_BIT_KHR",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x4000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_RESERVED_28_BIT_KHR",
        "extends": "VkAccessFlagBits",
        "value": "0x10000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_RESERVED_29_BIT_KHR",
        "extends": "VkAccessFlagBits",
        "value": "0x20000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_RESERVED_13_BIT_KHR",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x2000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_RESERVED_14_BIT_KHR",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x4000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_RESERVED_10_BIT_KHR",
        "extends": "VkImageUsageFlagBits",
        "value": "0x400"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_RESERVED_11_BIT_KHR",
        "extends": "VkImageUsageFlagBits",
        "value": "0x800"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_RESERVED_12_BIT_KHR",
        "extends": "VkImageUsageFlagBits",
        "value": "0x1000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_RESERVED_25_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "value": "0x2000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_RESERVED_26_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "value": "0x4000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QUERY_TYPE_RESERVED_4",
        "extends": "VkQueryType",
        "value": 1000024004
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_gcn_shader",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_GCN_SHADER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_GCN_SHADER_EXTENSION_NAME",
        "value": "VK_AMD_gcn_shader",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_dedicated_allocation",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME",
        "value": "VK_NV_dedicated_allocation",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000026000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000026001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000026002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDedicatedAllocationImageCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDedicatedAllocationBufferCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDedicatedAllocationMemoryAllocateInfoNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_28",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_28_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_28_EXTENSION_NAME",
        "value": "VK_NV_extension_28",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_transform_feedback",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_TRANSFORM_FEEDBACK_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME",
        "value": "VK_EXT_transform_feedback",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBindTransformFeedbackBuffersEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBeginTransformFeedbackEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdEndTransformFeedbackEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBeginQueryIndexedEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdEndQueryIndexedEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawIndirectByteCountEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000028000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000028001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000028002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT",
        "extends": "VkQueryType",
        "value": 1000028004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x800"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x1000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT",
        "extends": "VkAccessFlagBits",
        "value": "0x2000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT",
        "extends": "VkAccessFlagBits",
        "value": "0x4000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT",
        "extends": "VkAccessFlagBits",
        "value": "0x8000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x1000000"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceTransformFeedbackFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceTransformFeedbackPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationStateStreamCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationStateStreamCreateFlagsEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NVX_extension_30",
    "author": "NVX",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_30_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_30_EXTENSION_NAME",
        "value": "VK_NVX_extension_30",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NVX_image_view_handle",
    "type": "device",
    "author": "NVX",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME",
        "value": "VK_NVX_image_view_handle",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX",
        "extends": "VkStructureType",
        "value": 1000030000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageViewHandleInfoNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetImageViewHandleNVX"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_32",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_32_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_32_EXTENSION_NAME",
        "value": "VK_AMD_extension_32",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_33",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_33_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_33_EXTENSION_NAME",
        "value": "VK_AMD_extension_33",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_draw_indirect_count",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME",
        "value": "VK_AMD_draw_indirect_count",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawIndirectCountAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawIndexedIndirectCountAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_35",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_35_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_35_EXTENSION_NAME",
        "value": "VK_AMD_extension_35",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_negative_viewport_height",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME",
        "value": "VK_AMD_negative_viewport_height",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_gpu_shader_half_float",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME",
        "value": "VK_AMD_gpu_shader_half_float",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_ballot",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_BALLOT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_BALLOT_EXTENSION_NAME",
        "value": "VK_AMD_shader_ballot",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_39",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_39_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_39_EXTENSION_NAME",
        "value": "VK_AMD_extension_39",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_40",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_40_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_40_EXTENSION_NAME",
        "value": "VK_AMD_extension_40",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_41",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_41_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_41_EXTENSION_NAME",
        "value": "VK_AMD_extension_41",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_texture_gather_bias_lod",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME",
        "value": "VK_AMD_texture_gather_bias_lod",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD",
        "extends": "VkStructureType",
        "value": 1000041000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkTextureLODGatherFormatPropertiesAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_info",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_INFO_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_INFO_EXTENSION_NAME",
        "value": "VK_AMD_shader_info",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShaderInfoTypeAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShaderResourceUsageAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShaderStatisticsInfoAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetShaderInfoAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_44",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_44_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_44_EXTENSION_NAME",
        "value": "VK_AMD_extension_44",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_45",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_45_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_45_EXTENSION_NAME",
        "value": "VK_AMD_extension_45",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_46",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_46_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_46_EXTENSION_NAME",
        "value": "VK_AMD_extension_46",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_image_load_store_lod",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME",
        "value": "VK_AMD_shader_image_load_store_lod",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NVX_extension_48",
    "author": "NVX",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_48_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_48_EXTENSION_NAME",
        "value": "VK_NVX_extension_48",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_extension_49",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_49_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_49_EXTENSION_NAME",
        "value": "VK_GOOGLE_extension_49",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GGP_stream_descriptor_surface",
    "type": "instance",
    "author": "GGP",
    "platform": "ggp",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GGP_STREAM_DESCRIPTOR_SURFACE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GGP_STREAM_DESCRIPTOR_SURFACE_EXTENSION_NAME",
        "value": "VK_GGP_stream_descriptor_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP",
        "extends": "VkStructureType",
        "value": 1000049000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkStreamDescriptorSurfaceCreateFlagsGGP"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkStreamDescriptorSurfaceCreateInfoGGP"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateStreamDescriptorSurfaceGGP"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_corner_sampled_image",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME",
        "value": "VK_NV_corner_sampled_image",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV",
        "extends": "VkImageCreateFlagBits",
        "value": "0x2000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000050000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceCornerSampledImageFeaturesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_52",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_52_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_52_EXTENSION_NAME",
        "value": "VK_NV_extension_52",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_MODULE_CREATE_RESERVED_0_BIT_NV",
        "extends": "VkShaderModuleCreateFlagBits",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_SHADER_STAGE_CREATE_RESERVED_2_BIT_NV",
        "extends": "VkPipelineShaderStageCreateFlagBits",
        "value": "0x4"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_53",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_53_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_53_EXTENSION_NAME",
        "value": "VK_NV_extension_53",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_multiview",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MULTIVIEW_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MULTIVIEW_EXTENSION_NAME",
        "value": "VK_KHR_multiview",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR",
        "extends": "VkDependencyFlagBits",
        "alias": "VK_DEPENDENCY_VIEW_LOCAL_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRenderPassMultiviewCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMultiviewFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMultiviewPropertiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_IMG_format_pvrtc",
    "type": "device",
    "author": "IMG",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_FORMAT_PVRTC_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_FORMAT_PVRTC_EXTENSION_NAME",
        "value": "VK_IMG_format_pvrtc",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054006
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG",
        "extends": "VkFormat",
        "value": 1000054007
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_external_memory_capabilities",
    "type": "instance",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME",
        "value": "VK_NV_external_memory_capabilities",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryHandleTypeFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryHandleTypeFlagBitsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryFeatureFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryFeatureFlagBitsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalImageFormatPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_external_memory",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTERNAL_MEMORY_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME",
        "value": "VK_NV_external_memory",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000056000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000056001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryImageCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportMemoryAllocateInfoNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_external_memory_win32",
    "type": "device",
    "author": "NV",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTERNAL_MEMORY_WIN32_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME",
        "value": "VK_NV_external_memory_win32",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000057000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000057001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportMemoryWin32HandleInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportMemoryWin32HandleInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetMemoryWin32HandleNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_win32_keyed_mutex",
    "type": "device",
    "author": "NV",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_WIN32_KEYED_MUTEX_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_WIN32_KEYED_MUTEX_EXTENSION_NAME",
        "value": "VK_NV_win32_keyed_mutex",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000058000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWin32KeyedMutexAcquireReleaseInfoNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_get_physical_device_properties2",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME",
        "value": "VK_KHR_get_physical_device_properties2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceFeatures2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFormatProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageFormatProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceImageFormatInfo2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkQueueFamilyProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMemoryProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSparseImageFormatProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceSparseImageFormatInfo2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceFeatures2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceFormatProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceImageFormatProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceQueueFamilyProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceMemoryProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSparseImageFormatProperties2KHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_device_group",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEVICE_GROUP_SPEC_VERSION",
        "value": "4",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEVICE_GROUP_EXTENSION_NAME",
        "value": "VK_KHR_device_group",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPeerMemoryFeatureFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPeerMemoryFeatureFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR",
        "extends": "VkPeerMemoryFeatureFlagBits",
        "alias": "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR",
        "extends": "VkPeerMemoryFeatureFlagBits",
        "alias": "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR",
        "extends": "VkPeerMemoryFeatureFlagBits",
        "alias": "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR",
        "extends": "VkPeerMemoryFeatureFlagBits",
        "alias": "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryAllocateFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryAllocateFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR",
        "extends": "VkMemoryAllocateFlagBits",
        "alias": "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryAllocateFlagsInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupRenderPassBeginInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupCommandBufferBeginInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupSubmitInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupBindSparseInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDeviceGroupPeerMemoryFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetDeviceMaskKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDispatchBaseKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR",
        "extends": "VkPipelineCreateFlagBits",
        "alias": "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_CREATE_DISPATCH_BASE_KHR",
        "extends": "VkPipelineCreateFlagBits",
        "alias": "VK_PIPELINE_CREATE_DISPATCH_BASE",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR",
        "extends": "VkDependencyFlagBits",
        "alias": "VK_DEPENDENCY_DEVICE_GROUP_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindBufferMemoryDeviceGroupInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindImageMemoryDeviceGroupInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
        "extends": "VkImageCreateFlagBits",
        "alias": "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR",
        "extends": "VkStructureType",
        "value": 1000060007
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentModeFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentModeFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDeviceGroupPresentCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDeviceGroupSurfacePresentModesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDevicePresentRectanglesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060008
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060009
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060010
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060011
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000060012
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
        "extends": "VkSwapchainCreateFlagBitsKHR",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageSwapchainCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindImageMemorySwapchainInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAcquireNextImageInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupPresentInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupSwapchainCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkAcquireNextImage2KHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_validation_flags",
    "type": "instance",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VALIDATION_FLAGS_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME",
        "value": "VK_EXT_validation_flags",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT",
        "extends": "VkStructureType",
        "value": 1000061000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkValidationFlagsEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NN_vi_surface",
    "type": "instance",
    "author": "NN",
    "platform": "vi",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NN_VI_SURFACE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NN_VI_SURFACE_EXTENSION_NAME",
        "value": "VK_NN_vi_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN",
        "extends": "VkStructureType",
        "value": 1000062000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkViSurfaceCreateFlagsNN"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkViSurfaceCreateInfoNN"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateViSurfaceNN"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_shader_draw_parameters",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME",
        "value": "VK_KHR_shader_draw_parameters",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_shader_subgroup_ballot",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME",
        "value": "VK_EXT_shader_subgroup_ballot",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_shader_subgroup_vote",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME",
        "value": "VK_EXT_shader_subgroup_vote",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_texture_compression_astc_hdr",
    "type": "device",
    "author": "ARM",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME",
        "value": "VK_EXT_texture_compression_astc_hdr",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000066000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066006
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066007
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066008
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066009
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066010
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066011
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066012
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT",
        "extends": "VkFormat",
        "value": 1000066013
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_astc_decode_mode",
    "type": "device",
    "author": "ARM",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_ASTC_DECODE_MODE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME",
        "value": "VK_EXT_astc_decode_mode",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT",
        "extends": "VkStructureType",
        "value": 1000067000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000067001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageViewASTCDecodeModeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceASTCDecodeFeaturesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_IMG_extension_69",
    "type": "device",
    "author": "IMG",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_69_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_69_EXTENSION_NAME",
        "value": "VK_IMG_extension_69",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_maintenance1",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MAINTENANCE1_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MAINTENANCE1_EXTENSION_NAME",
        "value": "VK_KHR_maintenance1",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ERROR_OUT_OF_POOL_MEMORY_KHR",
        "extends": "VkResult",
        "alias": "VK_ERROR_OUT_OF_POOL_MEMORY",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_TRANSFER_DST_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR",
        "extends": "VkImageCreateFlagBits",
        "alias": "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCommandPoolTrimFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkTrimCommandPoolKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_device_group_creation",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEVICE_GROUP_CREATION_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME",
        "value": "VK_KHR_device_group_creation",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceGroupPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGroupDeviceCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkEnumeratePhysicalDeviceGroupsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR",
        "extends": "VkMemoryHeapFlagBits",
        "alias": "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT",
        "isAlias": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_memory_capabilities",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME",
        "value": "VK_KHR_external_memory_capabilities",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryHandleTypeFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryHandleTypeFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryFeatureFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryFeatureFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR",
        "extends": "VkExternalMemoryFeatureFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR",
        "extends": "VkExternalMemoryFeatureFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR",
        "extends": "VkExternalMemoryFeatureFlagBits",
        "alias": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceExternalImageFormatInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalImageFormatPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceExternalBufferInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalBufferPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceIDPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceExternalBufferPropertiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_memory",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME",
        "value": "VK_KHR_external_memory",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR",
        "extends": "VkResult",
        "alias": "VK_ERROR_INVALID_EXTERNAL_HANDLE",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryImageCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryBufferCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportMemoryAllocateInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_memory_win32",
    "type": "device",
    "author": "KHR",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_WIN32_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME",
        "value": "VK_KHR_external_memory_win32",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000073000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000073001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000073002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000073003
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportMemoryWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportMemoryWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryWin32HandlePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryGetWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetMemoryWin32HandleKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetMemoryWin32HandlePropertiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_memory_fd",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME",
        "value": "VK_KHR_external_memory_fd",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000074000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000074001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000074002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportMemoryFdInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryFdPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryGetFdInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetMemoryFdKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetMemoryFdPropertiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_win32_keyed_mutex",
    "type": "device",
    "author": "KHR",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_WIN32_KEYED_MUTEX_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_WIN32_KEYED_MUTEX_EXTENSION_NAME",
        "value": "VK_KHR_win32_keyed_mutex",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000075000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWin32KeyedMutexAcquireReleaseInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_semaphore_capabilities",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME",
        "value": "VK_KHR_external_semaphore_capabilities",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalSemaphoreHandleTypeFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalSemaphoreHandleTypeFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
        "extends": "VkExternalSemaphoreHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
        "extends": "VkExternalSemaphoreHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
        "extends": "VkExternalSemaphoreHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR",
        "extends": "VkExternalSemaphoreHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR",
        "extends": "VkExternalSemaphoreHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalSemaphoreFeatureFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalSemaphoreFeatureFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR",
        "extends": "VkExternalSemaphoreFeatureFlagBits",
        "alias": "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR",
        "extends": "VkExternalSemaphoreFeatureFlagBits",
        "alias": "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceExternalSemaphoreInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalSemaphorePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceIDPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_semaphore",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME",
        "value": "VK_KHR_external_semaphore",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreImportFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreImportFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR",
        "extends": "VkSemaphoreImportFlagBits",
        "alias": "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportSemaphoreCreateInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_semaphore_win32",
    "type": "device",
    "author": "KHR",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_WIN32_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_WIN32_EXTENSION_NAME",
        "value": "VK_KHR_external_semaphore_win32",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000078000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000078001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000078002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000078003
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportSemaphoreWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportSemaphoreWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkD3D12FenceSubmitInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreGetWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkImportSemaphoreWin32HandleKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSemaphoreWin32HandleKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_semaphore_fd",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME",
        "value": "VK_KHR_external_semaphore_fd",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000079000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000079001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportSemaphoreFdInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreGetFdInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkImportSemaphoreFdKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSemaphoreFdKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_push_descriptor",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_PUSH_DESCRIPTOR_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME",
        "value": "VK_KHR_push_descriptor",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000080000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR",
        "extends": "VkDescriptorSetLayoutCreateFlagBits",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdPushDescriptorSetKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDevicePushDescriptorPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdPushDescriptorSetWithTemplateKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR",
        "value": "1",
        "isNumericValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_conditional_rendering",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_CONDITIONAL_RENDERING_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_CONDITIONAL_RENDERING_EXTENSION_NAME",
        "value": "VK_EXT_conditional_rendering",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000081000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000081001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000081002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkConditionalRenderingFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkConditionalRenderingFlagBitsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT",
        "extends": "VkAccessFlagBits",
        "value": "0x100000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x200"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x40000"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBeginConditionalRenderingEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdEndConditionalRenderingEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkConditionalRenderingBeginInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceConditionalRenderingFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCommandBufferInheritanceConditionalRenderingInfoEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_shader_float16_int8",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_FLOAT16_INT8_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME",
        "value": "VK_KHR_shader_float16_int8",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000082000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000082000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceFloat16Int8FeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_16bit_storage",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_16BIT_STORAGE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_16BIT_STORAGE_EXTENSION_NAME",
        "value": "VK_KHR_16bit_storage",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDevice16BitStorageFeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_incremental_present",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_INCREMENTAL_PRESENT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME",
        "value": "VK_KHR_incremental_present",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR",
        "extends": "VkStructureType",
        "value": 1000084000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPresentRegionsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPresentRegionKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRectLayerKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_descriptor_update_template",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME",
        "value": "VK_KHR_descriptor_update_template",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR",
        "extends": "VkObjectType",
        "alias": "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateDescriptorUpdateTemplateKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroyDescriptorUpdateTemplateKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkUpdateDescriptorSetWithTemplateKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorUpdateTemplateKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorUpdateTemplateCreateFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorUpdateTemplateTypeKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorUpdateTemplateEntryKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorUpdateTemplateCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR",
        "extends": "VkDescriptorUpdateTemplateType",
        "alias": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdPushDescriptorSetWithTemplateKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT",
        "extends": "VkDebugReportObjectTypeEXT",
        "alias": "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT",
        "isAlias": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NVX_device_generated_commands",
    "type": "device",
    "author": "NVX",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_DEVICE_GENERATED_COMMANDS_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME",
        "value": "VK_NVX_device_generated_commands",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX",
        "extends": "VkStructureType",
        "value": 1000086000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX",
        "extends": "VkStructureType",
        "value": 1000086001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX",
        "extends": "VkStructureType",
        "value": 1000086002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX",
        "extends": "VkStructureType",
        "value": 1000086003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX",
        "extends": "VkStructureType",
        "value": 1000086004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX",
        "extends": "VkStructureType",
        "value": 1000086005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x20000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX",
        "extends": "VkAccessFlagBits",
        "value": "0x20000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX",
        "extends": "VkAccessFlagBits",
        "value": "0x40000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_OBJECT_TABLE_NVX",
        "extends": "VkObjectType",
        "value": 1000086000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX",
        "extends": "VkObjectType",
        "value": 1000086001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTableNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIndirectCommandsLayoutNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIndirectCommandsLayoutUsageFlagsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectEntryUsageFlagsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIndirectCommandsLayoutUsageFlagBitsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIndirectCommandsTokenTypeNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectEntryUsageFlagBitsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectEntryTypeNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGeneratedCommandsFeaturesNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceGeneratedCommandsLimitsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIndirectCommandsTokenNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIndirectCommandsLayoutTokenNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIndirectCommandsLayoutCreateInfoNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCmdProcessCommandsInfoNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCmdReserveSpaceForCommandsInfoNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTableCreateInfoNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTableEntryNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTablePipelineEntryNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTableDescriptorSetEntryNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTableVertexBufferEntryNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTableIndexBufferEntryNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkObjectTablePushConstantEntryNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdProcessCommandsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdReserveSpaceForCommandsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateIndirectCommandsLayoutNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroyIndirectCommandsLayoutNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateObjectTableNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroyObjectTableNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkRegisterObjectsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkUnregisterObjectsNVX"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_clip_space_w_scaling",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_CLIP_SPACE_W_SCALING_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME",
        "value": "VK_NV_clip_space_w_scaling",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000087000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV",
        "extends": "VkDynamicState",
        "value": 1000087000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkViewportWScalingNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineViewportWScalingStateCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetViewportWScalingNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_direct_mode_display",
    "type": "instance",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME",
        "value": "VK_EXT_direct_mode_display",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkReleaseDisplayEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_acquire_xlib_display",
    "type": "instance",
    "author": "NV",
    "platform": "xlib_xrandr",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_ACQUIRE_XLIB_DISPLAY_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_ACQUIRE_XLIB_DISPLAY_EXTENSION_NAME",
        "value": "VK_EXT_acquire_xlib_display",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkAcquireXlibDisplayEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetRandROutputDisplayEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_display_surface_counter",
    "type": "instance",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME",
        "value": "VK_EXT_display_surface_counter",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
        "extends": "VkStructureType",
        "value": 1000090000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT",
        "extends": "VkStructureType",
        "value": 1000090000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceCounterFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceCounterFlagBitsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceCapabilities2EXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfaceCapabilities2EXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_display_control",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DISPLAY_CONTROL_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME",
        "value": "VK_EXT_display_control",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000091000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000091001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000091002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000091003
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPowerStateEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceEventTypeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayEventTypeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPowerInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceEventInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayEventInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSwapchainCounterCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDisplayPowerControlEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkRegisterDeviceEventEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkRegisterDisplayEventEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSwapchainCounterEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_display_timing",
    "type": "device",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_DISPLAY_TIMING_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME",
        "value": "VK_GOOGLE_display_timing",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE",
        "extends": "VkStructureType",
        "value": 1000092000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRefreshCycleDurationGOOGLE"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPastPresentationTimingGOOGLE"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPresentTimesInfoGOOGLE"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPresentTimeGOOGLE"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetRefreshCycleDurationGOOGLE"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPastPresentationTimingGOOGLE"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "RESERVED_DO_NOT_USE_94",
    "platform": "default",
    "supported": "disabled",
    "members": []
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_sample_mask_override_coverage",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME",
        "value": "VK_NV_sample_mask_override_coverage",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_geometry_shader_passthrough",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME",
        "value": "VK_NV_geometry_shader_passthrough",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_viewport_array2",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_VIEWPORT_ARRAY2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_VIEWPORT_ARRAY2_EXTENSION_NAME",
        "value": "VK_NV_viewport_array2",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NVX_multiview_per_view_attributes",
    "type": "device",
    "author": "NVX",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME",
        "value": "VK_NVX_multiview_per_view_attributes",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX",
        "extends": "VkStructureType",
        "value": 1000097000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX",
        "extends": "VkSubpassDescriptionFlagBits",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX",
        "extends": "VkSubpassDescriptionFlagBits",
        "value": "0x2"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_viewport_swizzle",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_VIEWPORT_SWIZZLE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_VIEWPORT_SWIZZLE_EXTENSION_NAME",
        "value": "VK_NV_viewport_swizzle",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000098000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkViewportSwizzleNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkViewportCoordinateSwizzleNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineViewportSwizzleStateCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineViewportSwizzleStateCreateFlagsNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_discard_rectangles",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DISCARD_RECTANGLES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DISCARD_RECTANGLES_EXTENSION_NAME",
        "value": "VK_EXT_discard_rectangles",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000099000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000099001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT",
        "extends": "VkDynamicState",
        "value": 1000099000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceDiscardRectanglePropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineDiscardRectangleStateCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineDiscardRectangleStateCreateFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDiscardRectangleModeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetDiscardRectangleEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_101",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_101_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_101_EXTENSION_NAME",
        "value": "VK_NV_extension_101",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_conservative_rasterization",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME",
        "value": "VK_EXT_conservative_rasterization",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000101000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000101001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceConservativeRasterizationPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationConservativeStateCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationConservativeStateCreateFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkConservativeRasterizationModeEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_depth_clip_enable",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME",
        "value": "VK_EXT_depth_clip_enable",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000102000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000102001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceDepthClipEnableFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationDepthClipStateCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_104",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_104_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_104_EXTENSION_NAME",
        "value": "VK_NV_extension_104",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_swapchain_colorspace",
    "type": "instance",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION",
        "value": "4",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME",
        "value": "VK_EXT_swapchain_colorspace",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_BT709_LINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_BT709_NONLINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104006
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_BT2020_LINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104007
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_HDR10_ST2084_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104008
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_DOLBYVISION_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104009
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_HDR10_HLG_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104010
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104011
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104012
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_PASS_THROUGH_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104013
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104014
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_DCI_P3_LINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "alias": "VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_DCI_P3_LINEAR_EXT",
        "extends": "VkColorSpaceKHR",
        "value": 1000104003
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_hdr_metadata",
    "type": "device",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_HDR_METADATA_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_HDR_METADATA_EXTENSION_NAME",
        "value": "VK_EXT_hdr_metadata",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_HDR_METADATA_EXT",
        "extends": "VkStructureType",
        "value": 1000105000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkHdrMetadataEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkXYColorEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkSetHdrMetadataEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_IMG_extension_107",
    "author": "IMG",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_107_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_107_EXTENSION_NAME",
        "value": "VK_IMG_extension_107",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_IMG_extension_108",
    "author": "IMG",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_108_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_108_EXTENSION_NAME",
        "value": "VK_IMG_extension_108",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_imageless_framebuffer",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME",
        "value": "VK_KHR_imageless_framebuffer",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceImagelessFramebufferFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFramebufferAttachmentsCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRenderPassAttachmentBeginInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000108000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000108001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000108002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000108003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR",
        "extends": "VkFramebufferCreateFlagBits",
        "value": "0x1"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_create_renderpass2",
    "type": "device",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_CREATE_RENDERPASS_2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME",
        "value": "VK_KHR_create_renderpass2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR",
        "extends": "VkStructureType",
        "value": 1000109000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR",
        "extends": "VkStructureType",
        "value": 1000109001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR",
        "extends": "VkStructureType",
        "value": 1000109002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR",
        "extends": "VkStructureType",
        "value": 1000109003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR",
        "extends": "VkStructureType",
        "value": 1000109004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000109005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000109006
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateRenderPass2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBeginRenderPass2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdNextSubpass2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdEndRenderPass2KHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_IMG_extension_111",
    "author": "IMG",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_111_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMG_EXTENSION_111_EXTENSION_NAME",
        "value": "VK_IMG_extension_111",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_shared_presentable_image",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME",
        "value": "VK_KHR_shared_presentable_image",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR",
        "extends": "VkStructureType",
        "value": 1000111000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR",
        "extends": "VkPresentModeKHR",
        "value": 1000111000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR",
        "extends": "VkPresentModeKHR",
        "value": 1000111001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR",
        "extends": "VkImageLayout",
        "value": 1000111000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSharedPresentSurfaceCapabilitiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSwapchainStatusKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_fence_capabilities",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME",
        "value": "VK_KHR_external_fence_capabilities",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalFenceHandleTypeFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalFenceHandleTypeFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
        "extends": "VkExternalFenceHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
        "extends": "VkExternalFenceHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
        "extends": "VkExternalFenceHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR",
        "extends": "VkExternalFenceHandleTypeFlagBits",
        "alias": "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalFenceFeatureFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalFenceFeatureFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR",
        "extends": "VkExternalFenceFeatureFlagBits",
        "alias": "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR",
        "extends": "VkExternalFenceFeatureFlagBits",
        "alias": "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceExternalFenceInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalFencePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceIDPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceExternalFencePropertiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_fence",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME",
        "value": "VK_KHR_external_fence",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFenceImportFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFenceImportFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FENCE_IMPORT_TEMPORARY_BIT_KHR",
        "extends": "VkFenceImportFlagBits",
        "alias": "VK_FENCE_IMPORT_TEMPORARY_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportFenceCreateInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_fence_win32",
    "type": "device",
    "author": "KHR",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_WIN32_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_WIN32_EXTENSION_NAME",
        "value": "VK_KHR_external_fence_win32",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000114000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000114001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000114002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportFenceWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExportFenceWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFenceGetWin32HandleInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkImportFenceWin32HandleKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetFenceWin32HandleKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_external_fence_fd",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_FD_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME",
        "value": "VK_KHR_external_fence_fd",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000115000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000115001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportFenceFdInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFenceGetFdInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkImportFenceFdKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetFenceFdKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_117",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_117_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_117_EXTENSION_NAME",
        "value": "VK_KHR_extension_117",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_maintenance2",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MAINTENANCE2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MAINTENANCE2_EXTENSION_NAME",
        "value": "VK_KHR_maintenance2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR",
        "extends": "VkImageCreateFlagBits",
        "alias": "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR",
        "extends": "VkImageCreateFlagBits",
        "alias": "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR",
        "extends": "VkImageLayout",
        "alias": "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR",
        "extends": "VkImageLayout",
        "alias": "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDevicePointClippingPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPointClippingBehaviorKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR",
        "extends": "VkPointClippingBehavior",
        "alias": "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR",
        "extends": "VkPointClippingBehavior",
        "alias": "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRenderPassInputAttachmentAspectCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkInputAttachmentAspectReferenceKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageViewUsageCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkTessellationDomainOriginKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR",
        "extends": "VkTessellationDomainOrigin",
        "alias": "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR",
        "extends": "VkTessellationDomainOrigin",
        "alias": "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineTessellationDomainOriginStateCreateInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_119",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_119_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_119_EXTENSION_NAME",
        "value": "VK_KHR_extension_119",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_get_surface_capabilities2",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME",
        "value": "VK_KHR_get_surface_capabilities2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR",
        "extends": "VkStructureType",
        "value": 1000119000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR",
        "extends": "VkStructureType",
        "value": 1000119001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR",
        "extends": "VkStructureType",
        "value": 1000119002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceSurfaceInfo2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceCapabilities2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceFormat2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfaceCapabilities2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfaceFormats2KHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_variable_pointers",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_VARIABLE_POINTERS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME",
        "value": "VK_KHR_variable_pointers",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceVariablePointerFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceVariablePointersFeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_get_display_properties2",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME",
        "value": "VK_KHR_get_display_properties2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "value": 1000121000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "value": 1000121001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR",
        "extends": "VkStructureType",
        "value": 1000121002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR",
        "extends": "VkStructureType",
        "value": 1000121003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR",
        "extends": "VkStructureType",
        "value": 1000121004
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPlaneProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayModeProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPlaneInfo2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayPlaneCapabilities2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceDisplayProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceDisplayPlaneProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDisplayModeProperties2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDisplayPlaneCapabilities2KHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_MVK_ios_surface",
    "type": "instance",
    "author": "MVK",
    "platform": "ios",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MVK_IOS_SURFACE_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MVK_IOS_SURFACE_EXTENSION_NAME",
        "value": "VK_MVK_ios_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK",
        "extends": "VkStructureType",
        "value": 1000122000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIOSSurfaceCreateFlagsMVK"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkIOSSurfaceCreateInfoMVK"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateIOSSurfaceMVK"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_MVK_macos_surface",
    "type": "instance",
    "author": "MVK",
    "platform": "macos",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MVK_MACOS_SURFACE_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MVK_MACOS_SURFACE_EXTENSION_NAME",
        "value": "VK_MVK_macos_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK",
        "extends": "VkStructureType",
        "value": 1000123000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMacOSSurfaceCreateFlagsMVK"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMacOSSurfaceCreateInfoMVK"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateMacOSSurfaceMVK"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_MVK_moltenvk",
    "type": "instance",
    "author": "MVK",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MVK_MOLTENVK_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MVK_MOLTENVK_EXTENSION_NAME",
        "value": "VK_MVK_moltenvk",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_external_memory_dma_buf",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME",
        "value": "VK_EXT_external_memory_dma_buf",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "value": "0x200"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_queue_family_foreign",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME",
        "value": "VK_EXT_queue_family_foreign",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_dedicated_allocation",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEDICATED_ALLOCATION_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME",
        "value": "VK_KHR_dedicated_allocation",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryDedicatedRequirementsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryDedicatedAllocateInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_debug_utils",
    "type": "instance",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEBUG_UTILS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DEBUG_UTILS_EXTENSION_NAME",
        "value": "VK_EXT_debug_utils",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000128000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000128001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT",
        "extends": "VkStructureType",
        "value": 1000128002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT",
        "extends": "VkStructureType",
        "value": 1000128003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000128004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT",
        "extends": "VkObjectType",
        "value": 1000128000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugUtilsObjectNameInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugUtilsObjectTagInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugUtilsLabelEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugUtilsMessengerCallbackDataEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDebugUtilsMessengerCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkSetDebugUtilsObjectNameEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkSetDebugUtilsObjectTagEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkQueueBeginDebugUtilsLabelEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkQueueEndDebugUtilsLabelEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkQueueInsertDebugUtilsLabelEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBeginDebugUtilsLabelEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdEndDebugUtilsLabelEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdInsertDebugUtilsLabelEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateDebugUtilsMessengerEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroyDebugUtilsMessengerEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkSubmitDebugUtilsMessageEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_ANDROID_external_memory_android_hardware_buffer",
    "type": "device",
    "author": "ANDROID",
    "platform": "android",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_EXTENSION_NAME",
        "value": "VK_ANDROID_external_memory_android_hardware_buffer",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "value": "0x400"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID",
        "extends": "VkStructureType",
        "value": 1000129000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID",
        "extends": "VkStructureType",
        "value": 1000129001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID",
        "extends": "VkStructureType",
        "value": 1000129002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
        "extends": "VkStructureType",
        "value": 1000129003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
        "extends": "VkStructureType",
        "value": 1000129004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID",
        "extends": "VkStructureType",
        "value": 1000129005
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAndroidHardwareBufferUsageANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAndroidHardwareBufferPropertiesANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAndroidHardwareBufferFormatPropertiesANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportAndroidHardwareBufferInfoANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryGetAndroidHardwareBufferInfoANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalFormatANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetAndroidHardwareBufferPropertiesANDROID"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetMemoryAndroidHardwareBufferANDROID"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_sampler_filter_minmax",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME",
        "value": "VK_EXT_sampler_filter_minmax",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000130000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000130001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT",
        "extends": "VkFormatFeatureFlagBits",
        "value": "0x10000"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerReductionModeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerReductionModeCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_storage_buffer_storage_class",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME",
        "value": "VK_KHR_storage_buffer_storage_class",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_gpu_shader_int16",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_GPU_SHADER_INT16_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_GPU_SHADER_INT16_EXTENSION_NAME",
        "value": "VK_AMD_gpu_shader_int16",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_134",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_134_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_134_EXTENSION_NAME",
        "value": "VK_AMD_extension_134",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_135",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_135_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_135_EXTENSION_NAME",
        "value": "VK_AMD_extension_135",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_136",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_136_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_136_EXTENSION_NAME",
        "value": "VK_AMD_extension_136",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_mixed_attachment_samples",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME",
        "value": "VK_AMD_mixed_attachment_samples",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_fragment_mask",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME",
        "value": "VK_AMD_shader_fragment_mask",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_inline_uniform_block",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME",
        "value": "VK_EXT_inline_uniform_block",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT",
        "extends": "VkDescriptorType",
        "value": 1000138000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000138000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000138001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT",
        "extends": "VkStructureType",
        "value": 1000138002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000138003
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceInlineUniformBlockFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceInlineUniformBlockPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWriteDescriptorSetInlineUniformBlockEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorPoolInlineUniformBlockCreateInfoEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_140",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_140_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_140_EXTENSION_NAME",
        "value": "VK_AMD_extension_140",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_shader_stencil_export",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME",
        "value": "VK_EXT_shader_stencil_export",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_142",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_142_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_142_EXTENSION_NAME",
        "value": "VK_AMD_extension_142",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_143",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_143_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_143_EXTENSION_NAME",
        "value": "VK_AMD_extension_143",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_sample_locations",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SAMPLE_LOCATIONS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME",
        "value": "VK_EXT_sample_locations",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT",
        "extends": "VkImageCreateFlagBits",
        "value": "0x1000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000143000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000143001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000143002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000143003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000143004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT",
        "extends": "VkDynamicState",
        "value": 1000143000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSampleLocationEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSampleLocationsInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAttachmentSampleLocationsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSubpassSampleLocationsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRenderPassSampleLocationsBeginInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineSampleLocationsStateCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceSampleLocationsPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMultisamplePropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetSampleLocationsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceMultisamplePropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_relaxed_block_layout",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME",
        "value": "VK_KHR_relaxed_block_layout",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "RESERVED_DO_NOT_USE_146",
    "platform": "default",
    "supported": "disabled",
    "members": []
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_get_memory_requirements2",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME",
        "value": "VK_KHR_get_memory_requirements2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBufferMemoryRequirementsInfo2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageMemoryRequirementsInfo2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageSparseMemoryRequirementsInfo2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryRequirements2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSparseImageMemoryRequirements2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetImageMemoryRequirements2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetBufferMemoryRequirements2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetImageSparseMemoryRequirements2KHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_image_format_list",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_IMAGE_FORMAT_LIST_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME",
        "value": "VK_KHR_image_format_list",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000147000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageFormatListCreateInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_blend_operation_advanced",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME",
        "value": "VK_EXT_blend_operation_advanced",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000148000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000148001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000148002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineColorBlendAdvancedStateCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBlendOverlapEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_ZERO_EXT",
        "extends": "VkBlendOp",
        "value": 1000148000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_SRC_EXT",
        "extends": "VkBlendOp",
        "value": 1000148001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_DST_EXT",
        "extends": "VkBlendOp",
        "value": 1000148002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_SRC_OVER_EXT",
        "extends": "VkBlendOp",
        "value": 1000148003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_DST_OVER_EXT",
        "extends": "VkBlendOp",
        "value": 1000148004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_SRC_IN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_DST_IN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148006
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_SRC_OUT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148007
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_DST_OUT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148008
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_SRC_ATOP_EXT",
        "extends": "VkBlendOp",
        "value": 1000148009
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_DST_ATOP_EXT",
        "extends": "VkBlendOp",
        "value": 1000148010
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_XOR_EXT",
        "extends": "VkBlendOp",
        "value": 1000148011
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_MULTIPLY_EXT",
        "extends": "VkBlendOp",
        "value": 1000148012
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_SCREEN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148013
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_OVERLAY_EXT",
        "extends": "VkBlendOp",
        "value": 1000148014
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_DARKEN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148015
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_LIGHTEN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148016
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_COLORDODGE_EXT",
        "extends": "VkBlendOp",
        "value": 1000148017
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_COLORBURN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148018
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_HARDLIGHT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148019
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_SOFTLIGHT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148020
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_DIFFERENCE_EXT",
        "extends": "VkBlendOp",
        "value": 1000148021
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_EXCLUSION_EXT",
        "extends": "VkBlendOp",
        "value": 1000148022
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_INVERT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148023
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_INVERT_RGB_EXT",
        "extends": "VkBlendOp",
        "value": 1000148024
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_LINEARDODGE_EXT",
        "extends": "VkBlendOp",
        "value": 1000148025
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_LINEARBURN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148026
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_VIVIDLIGHT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148027
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_LINEARLIGHT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148028
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_PINLIGHT_EXT",
        "extends": "VkBlendOp",
        "value": 1000148029
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_HARDMIX_EXT",
        "extends": "VkBlendOp",
        "value": 1000148030
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_HSL_HUE_EXT",
        "extends": "VkBlendOp",
        "value": 1000148031
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_HSL_SATURATION_EXT",
        "extends": "VkBlendOp",
        "value": 1000148032
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_HSL_COLOR_EXT",
        "extends": "VkBlendOp",
        "value": 1000148033
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_HSL_LUMINOSITY_EXT",
        "extends": "VkBlendOp",
        "value": 1000148034
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_PLUS_EXT",
        "extends": "VkBlendOp",
        "value": 1000148035
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_PLUS_CLAMPED_EXT",
        "extends": "VkBlendOp",
        "value": 1000148036
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT",
        "extends": "VkBlendOp",
        "value": 1000148037
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_PLUS_DARKER_EXT",
        "extends": "VkBlendOp",
        "value": 1000148038
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_MINUS_EXT",
        "extends": "VkBlendOp",
        "value": 1000148039
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_MINUS_CLAMPED_EXT",
        "extends": "VkBlendOp",
        "value": 1000148040
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_CONTRAST_EXT",
        "extends": "VkBlendOp",
        "value": 1000148041
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_INVERT_OVG_EXT",
        "extends": "VkBlendOp",
        "value": 1000148042
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_RED_EXT",
        "extends": "VkBlendOp",
        "value": 1000148043
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_GREEN_EXT",
        "extends": "VkBlendOp",
        "value": 1000148044
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BLEND_OP_BLUE_EXT",
        "extends": "VkBlendOp",
        "value": 1000148045
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT",
        "extends": "VkAccessFlagBits",
        "value": "0x80000"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_fragment_coverage_to_color",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME",
        "value": "VK_NV_fragment_coverage_to_color",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000149000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCoverageToColorStateCreateFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCoverageToColorStateCreateInfoNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_151",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_151_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_151_EXTENSION_NAME",
        "value": "VK_NV_extension_151",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_152",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_152_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_152_EXTENSION_NAME",
        "value": "VK_NV_extension_152",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_framebuffer_mixed_samples",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME",
        "value": "VK_NV_framebuffer_mixed_samples",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000152000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCoverageModulationStateCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCoverageModulationStateCreateFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCoverageModulationModeNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_fill_rectangle",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FILL_RECTANGLE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FILL_RECTANGLE_EXTENSION_NAME",
        "value": "VK_NV_fill_rectangle",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_POLYGON_MODE_FILL_RECTANGLE_NV",
        "extends": "VkPolygonMode",
        "value": 1000153000
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_shader_sm_builtins",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADER_SM_BUILTINS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADER_SM_BUILTINS_EXTENSION_NAME",
        "value": "VK_NV_shader_sm_builtins",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000154000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV",
        "extends": "VkStructureType",
        "value": 1000154001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_post_depth_coverage",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_POST_DEPTH_COVERAGE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME",
        "value": "VK_EXT_post_depth_coverage",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_sampler_ycbcr_conversion",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION",
        "value": "14",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME",
        "value": "VK_KHR_sampler_ycbcr_conversion",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT",
        "extends": "VkDebugReportObjectTypeEXT",
        "alias": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR",
        "extends": "VkObjectType",
        "alias": "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G8B8G8R8_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G8B8G8R8_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_B8G8R8G8_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_B8G8R8G8_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_R10X6_UNORM_PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_R10X6_UNORM_PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_R10X6G10X6_UNORM_2PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_R12X4_UNORM_PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_R12X4_UNORM_PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_R12X4G12X4_UNORM_2PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G16B16G16R16_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G16B16G16R16_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_B16G16R16G16_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_B16G16R16G16_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR",
        "extends": "VkFormat",
        "alias": "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_ASPECT_PLANE_0_BIT_KHR",
        "extends": "VkImageAspectFlagBits",
        "alias": "VK_IMAGE_ASPECT_PLANE_0_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_ASPECT_PLANE_1_BIT_KHR",
        "extends": "VkImageAspectFlagBits",
        "alias": "VK_IMAGE_ASPECT_PLANE_1_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_ASPECT_PLANE_2_BIT_KHR",
        "extends": "VkImageAspectFlagBits",
        "alias": "VK_IMAGE_ASPECT_PLANE_2_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_DISJOINT_BIT_KHR",
        "extends": "VkImageCreateFlagBits",
        "alias": "VK_IMAGE_CREATE_DISJOINT_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_DISJOINT_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_DISJOINT_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerYcbcrConversionCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerYcbcrConversionInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindImagePlaneMemoryInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImagePlaneMemoryRequirementsInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerYcbcrConversionImageFormatPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateSamplerYcbcrConversionKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroySamplerYcbcrConversionKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerYcbcrConversionKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerYcbcrModelConversionKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR",
        "extends": "VkSamplerYcbcrModelConversion",
        "alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR",
        "extends": "VkSamplerYcbcrModelConversion",
        "alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR",
        "extends": "VkSamplerYcbcrModelConversion",
        "alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR",
        "extends": "VkSamplerYcbcrModelConversion",
        "alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR",
        "extends": "VkSamplerYcbcrModelConversion",
        "alias": "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSamplerYcbcrRangeKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR",
        "extends": "VkSamplerYcbcrRange",
        "alias": "VK_SAMPLER_YCBCR_RANGE_ITU_FULL",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR",
        "extends": "VkSamplerYcbcrRange",
        "alias": "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkChromaLocationKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_CHROMA_LOCATION_COSITED_EVEN_KHR",
        "extends": "VkChromaLocation",
        "alias": "VK_CHROMA_LOCATION_COSITED_EVEN",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_CHROMA_LOCATION_MIDPOINT_KHR",
        "extends": "VkChromaLocation",
        "alias": "VK_CHROMA_LOCATION_MIDPOINT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT",
        "extends": "VkDebugReportObjectTypeEXT",
        "value": 1000156000
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_bind_memory2",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_BIND_MEMORY_2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_BIND_MEMORY_2_EXTENSION_NAME",
        "value": "VK_KHR_bind_memory2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkBindBufferMemory2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkBindImageMemory2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_ALIAS_BIT_KHR",
        "extends": "VkImageCreateFlagBits",
        "alias": "VK_IMAGE_CREATE_ALIAS_BIT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindBufferMemoryInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindImageMemoryInfoKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_image_drm_format_modifier",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME",
        "value": "VK_EXT_image_drm_format_modifier",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT",
        "extends": "VkResult",
        "value": -1000158000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT",
        "extends": "VkStructureType",
        "value": 1000158000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000158001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000158002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000158003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000158004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000158005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT",
        "extends": "VkImageTiling",
        "value": 1000158000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT",
        "extends": "VkImageAspectFlagBits",
        "value": "0x80"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT",
        "extends": "VkImageAspectFlagBits",
        "value": "0x100"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT",
        "extends": "VkImageAspectFlagBits",
        "value": "0x200"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT",
        "extends": "VkImageAspectFlagBits",
        "value": "0x400"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDrmFormatModifierPropertiesListEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDrmFormatModifierPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceImageDrmFormatModifierInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageDrmFormatModifierListCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageDrmFormatModifierExplicitCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageDrmFormatModifierPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetImageDrmFormatModifierPropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_160",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_160_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_160_EXTENSION_NAME",
        "value": "VK_EXT_extension_160",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_validation_cache",
    "type": "device",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VALIDATION_CACHE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VALIDATION_CACHE_EXTENSION_NAME",
        "value": "VK_EXT_validation_cache",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000160000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000160001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_VALIDATION_CACHE_EXT",
        "extends": "VkObjectType",
        "value": 1000160000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkValidationCacheEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkValidationCacheCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShaderModuleValidationCacheCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkValidationCacheHeaderVersionEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkValidationCacheCreateFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateValidationCacheEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroyValidationCacheEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkMergeValidationCachesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetValidationCacheDataEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_descriptor_indexing",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DESCRIPTOR_INDEXING_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME",
        "value": "VK_EXT_descriptor_indexing",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000161000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000161001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000161002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000161003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT",
        "extends": "VkStructureType",
        "value": 1000161004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT",
        "extends": "VkDescriptorPoolCreateFlagBits",
        "value": "0x2"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT",
        "extends": "VkDescriptorSetLayoutCreateFlagBits",
        "value": "0x2"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_FRAGMENTATION_EXT",
        "extends": "VkResult",
        "value": -1000161000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceDescriptorIndexingFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceDescriptorIndexingPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_shader_viewport_index_layer",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME",
        "value": "VK_EXT_shader_viewport_index_layer",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_164",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_164_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_164_EXTENSION_NAME",
        "value": "VK_NV_extension_164",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_shading_rate_image",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADING_RATE_IMAGE_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADING_RATE_IMAGE_EXTENSION_NAME",
        "value": "VK_NV_shading_rate_image",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000164000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000164001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV",
        "extends": "VkStructureType",
        "value": 1000164002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV",
        "extends": "VkImageLayout",
        "value": 1000164003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV",
        "extends": "VkDynamicState",
        "value": 1000164004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV",
        "extends": "VkAccessFlagBits",
        "value": "0x800000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV",
        "extends": "VkImageUsageFlagBits",
        "value": "0x100"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x400000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000164005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV",
        "extends": "VkDynamicState",
        "value": 1000164006
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShadingRatePaletteEntryNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShadingRatePaletteNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineViewportShadingRateImageStateCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShadingRateImageFeaturesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShadingRateImagePropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCoarseSampleLocationNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCoarseSampleOrderCustomNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCoarseSampleOrderTypeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBindShadingRateImageNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetViewportShadingRatePaletteNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetCoarseSampleOrderNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_ray_tracing",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_RAY_TRACING_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_RAY_TRACING_EXTENSION_NAME",
        "value": "VK_NV_ray_tracing",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000165000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000165001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_GEOMETRY_NV",
        "extends": "VkStructureType",
        "value": 1000165003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV",
        "extends": "VkStructureType",
        "value": 1000165004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV",
        "extends": "VkStructureType",
        "value": 1000165005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000165006
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV",
        "extends": "VkStructureType",
        "value": 1000165007
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000165008
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV",
        "extends": "VkStructureType",
        "value": 1000165009
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000165011
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000165012
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_RAYGEN_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x100"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_ANY_HIT_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x200"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x400"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_MISS_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x800"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_INTERSECTION_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x1000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_CALLABLE_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x2000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x200000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x2000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_RAY_TRACING_BIT_NV",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x400"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_BIND_POINT_RAY_TRACING_NV",
        "extends": "VkPipelineBindPoint",
        "value": 1000165000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV",
        "extends": "VkDescriptorType",
        "value": 1000165000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV",
        "extends": "VkAccessFlagBits",
        "value": "0x200000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV",
        "extends": "VkAccessFlagBits",
        "value": "0x400000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV",
        "extends": "VkQueryType",
        "value": 1000165000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV",
        "extends": "VkPipelineCreateFlagBits",
        "value": "0x20"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV",
        "extends": "VkObjectType",
        "value": 1000165000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT",
        "extends": "VkDebugReportObjectTypeEXT",
        "value": 1000165000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INDEX_TYPE_NONE_NV",
        "extends": "VkIndexType",
        "value": 1000165000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAccelerationStructureTypeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRayTracingShaderGroupCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRayTracingShaderGroupTypeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRayTracingPipelineCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryTrianglesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryAABBNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryDataNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryInstanceFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryFlagBitsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryInstanceFlagBitsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAccelerationStructureInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAccelerationStructureCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAccelerationStructureNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBuildAccelerationStructureFlagBitsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBuildAccelerationStructureFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCopyAccelerationStructureModeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkGeometryTypeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBindAccelerationStructureMemoryInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkWriteDescriptorSetAccelerationStructureNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAccelerationStructureMemoryRequirementsInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceRayTracingPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryRequirements2KHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkAccelerationStructureMemoryRequirementsTypeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateAccelerationStructureNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkDestroyAccelerationStructureNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetAccelerationStructureMemoryRequirementsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkBindAccelerationStructureMemoryNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdBuildAccelerationStructureNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdCopyAccelerationStructureNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdTraceRaysNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateRayTracingPipelinesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetRayTracingShaderGroupHandlesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetAccelerationStructureHandleNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdWriteAccelerationStructuresPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCompileDeferredNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_representative_fragment_test",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME",
        "value": "VK_NV_representative_fragment_test",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000166000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000166001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRepresentativeFragmentTestStateCreateInfoNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_168",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_168_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_168_EXTENSION_NAME",
        "value": "VK_NV_extension_168",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_maintenance3",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MAINTENANCE3_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_MAINTENANCE3_EXTENSION_NAME",
        "value": "VK_KHR_maintenance3",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMaintenance3PropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDescriptorSetLayoutSupportKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDescriptorSetLayoutSupportKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_draw_indirect_count",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME",
        "value": "VK_KHR_draw_indirect_count",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawIndirectCountKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawIndexedIndirectCountKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_filter_cubic",
    "type": "device",
    "author": "QCOM",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FILTER_CUBIC_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FILTER_CUBIC_EXTENSION_NAME",
        "value": "VK_EXT_filter_cubic",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FILTER_CUBIC_EXT",
        "extends": "VkFilter",
        "alias": "VK_FILTER_CUBIC_IMG",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT",
        "extends": "VkFormatFeatureFlagBits",
        "alias": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000170000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000170001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceImageViewImageFormatInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFilterCubicImageViewImageFormatPropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_QCOM_extension_172",
    "author": "QCOM",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_extension_172_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_extension_172_EXTENSION_NAME",
        "value": "VK_QCOM_extension_172",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SUBPASS_DESCRIPTION_RESERVED_2_BIT_QCOM",
        "extends": "VkSubpassDescriptionFlagBits",
        "value": "0x4"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SUBPASS_DESCRIPTION_RESERVED_3_BIT_QCOM",
        "extends": "VkSubpassDescriptionFlagBits",
        "value": "0x8"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_QCOM_extension_173",
    "author": "QCOM",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_extension_173_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_extension_173_EXTENSION_NAME",
        "value": "VK_QCOM_extension_173",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_QCOM_extension_174",
    "author": "QCOM",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_extension_174_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_extension_174_EXTENSION_NAME",
        "value": "VK_QCOM_extension_174",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_global_priority",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_GLOBAL_PRIORITY_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME",
        "value": "VK_EXT_global_priority",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000174000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_NOT_PERMITTED_EXT",
        "extends": "VkResult",
        "value": -1000174001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceQueueGlobalPriorityCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkQueueGlobalPriorityEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_shader_subgroup_extended_types",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME",
        "value": "VK_KHR_shader_subgroup_extended_types",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000175000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_177",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_177_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_177_EXTENSION_NAME",
        "value": "VK_KHR_extension_177",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_8bit_storage",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_8BIT_STORAGE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_8BIT_STORAGE_EXTENSION_NAME",
        "value": "VK_KHR_8bit_storage",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000177000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDevice8BitStorageFeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_external_memory_host",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME",
        "value": "VK_EXT_external_memory_host",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000178000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000178001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000178002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "value": "0x80"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT",
        "extends": "VkExternalMemoryHandleTypeFlagBits",
        "value": "0x100"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryHandleTypeFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkExternalMemoryHandleTypeFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImportMemoryHostPointerInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryHostPointerPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceExternalMemoryHostPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetMemoryHostPointerPropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_buffer_marker",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_BUFFER_MARKER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_BUFFER_MARKER_EXTENSION_NAME",
        "value": "VK_AMD_buffer_marker",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdWriteBufferMarkerAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_shader_atomic_int64",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_ATOMIC_INT64_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME",
        "value": "VK_KHR_shader_atomic_int64",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000180000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_shader_clock",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_CLOCK_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_CLOCK_EXTENSION_NAME",
        "value": "VK_KHR_shader_clock",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000181000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderClockFeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_183",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_183_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_183_EXTENSION_NAME",
        "value": "VK_AMD_extension_183",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_pipeline_compiler_control",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME",
        "value": "VK_AMD_pipeline_compiler_control",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD",
        "extends": "VkStructureType",
        "value": 1000183000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCompilerControlFlagBitsAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCompilerControlFlagsAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCompilerControlCreateInfoAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_calibrated_timestamps",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME",
        "value": "VK_EXT_calibrated_timestamps",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000184000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkTimeDomainEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCalibratedTimestampInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetCalibratedTimestampsEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_core_properties",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME",
        "value": "VK_AMD_shader_core_properties",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD",
        "extends": "VkStructureType",
        "value": 1000185000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderCorePropertiesAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_187",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_187_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_187_EXTENSION_NAME",
        "value": "VK_AMD_extension_187",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_188",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_188_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_188_EXTENSION_NAME",
        "value": "VK_AMD_extension_188",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_189",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_189_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_189_EXTENSION_NAME",
        "value": "VK_AMD_extension_189",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_memory_overallocation_behavior",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME",
        "value": "VK_AMD_memory_overallocation_behavior",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD",
        "extends": "VkStructureType",
        "value": 1000189000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryOverallocationBehaviorAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDeviceMemoryOverallocationCreateInfoAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_vertex_attribute_divisor",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME",
        "value": "VK_EXT_vertex_attribute_divisor",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000190000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000190001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000190002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkVertexInputBindingDivisorDescriptionEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineVertexInputDivisorStateCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GGP_frame_token",
    "type": "device",
    "author": "GGP",
    "platform": "ggp",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GGP_FRAME_TOKEN_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GGP_FRAME_TOKEN_EXTENSION_NAME",
        "value": "VK_GGP_frame_token",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP",
        "extends": "VkStructureType",
        "value": 1000191000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPresentFrameTokenGGP"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_pipeline_creation_feedback",
    "type": "device",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME",
        "value": "VK_EXT_pipeline_creation_feedback",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000192000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCreationFeedbackFlagBitsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCreationFeedbackFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCreationFeedbackCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCreationFeedbackEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_extension_194",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_194_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_194_EXTENSION_NAME",
        "value": "VK_GOOGLE_extension_194",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_extension_195",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_195_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_195_EXTENSION_NAME",
        "value": "VK_GOOGLE_extension_195",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_extension_196",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_196_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_196_EXTENSION_NAME",
        "value": "VK_GOOGLE_extension_196",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_driver_properties",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DRIVER_PROPERTIES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME",
        "value": "VK_KHR_driver_properties",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000196000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDriverIdKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkConformanceVersionKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceDriverPropertiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_shader_float_controls",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION",
        "value": "4",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME",
        "value": "VK_KHR_shader_float_controls",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000197000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceFloatControlsPropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShaderFloatControlsIndependenceKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_shader_subgroup_partitioned",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME",
        "value": "VK_NV_shader_subgroup_partitioned",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV",
        "extends": "VkSubgroupFeatureFlagBits",
        "value": "0x100"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_depth_stencil_resolve",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME",
        "value": "VK_KHR_depth_stencil_resolve",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000199000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR",
        "extends": "VkStructureType",
        "value": 1000199001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSubpassDescriptionDepthStencilResolveKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceDepthStencilResolvePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkResolveModeFlagBitsKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_swapchain_mutable_format",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME",
        "value": "VK_KHR_swapchain_mutable_format",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR",
        "extends": "VkSwapchainCreateFlagBitsKHR",
        "value": "0x4"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_compute_shader_derivatives",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME",
        "value": "VK_NV_compute_shader_derivatives",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000201000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_mesh_shader",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_MESH_SHADER_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_MESH_SHADER_EXTENSION_NAME",
        "value": "VK_NV_mesh_shader",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000202000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV",
        "extends": "VkStructureType",
        "value": 1000202001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_TASK_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x40"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SHADER_STAGE_MESH_BIT_NV",
        "extends": "VkShaderStageFlagBits",
        "value": "0x80"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x80000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x100000"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawMeshTasksNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawMeshTasksIndirectNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdDrawMeshTasksIndirectCountNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMeshShaderFeaturesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMeshShaderPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDrawMeshTasksIndirectCommandNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_fragment_shader_barycentric",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME",
        "value": "VK_NV_fragment_shader_barycentric",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000203000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_shader_image_footprint",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME",
        "value": "VK_NV_shader_image_footprint",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000204000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderImageFootprintFeaturesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_scissor_exclusive",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SCISSOR_EXCLUSIVE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME",
        "value": "VK_NV_scissor_exclusive",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000205000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV",
        "extends": "VkDynamicState",
        "value": 1000205001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000205002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineViewportExclusiveScissorStateCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceExclusiveScissorFeaturesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetExclusiveScissorNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_device_diagnostic_checkpoints",
    "type": "device",
    "author": "NVIDIA",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME",
        "value": "VK_NV_device_diagnostic_checkpoints",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV",
        "extends": "VkStructureType",
        "value": 1000206000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV",
        "extends": "VkStructureType",
        "value": 1000206001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkQueueFamilyCheckpointPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCheckpointDataNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetCheckpointNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetQueueCheckpointDataNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_timeline_semaphore",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_TIMELINE_SEMAPHORE_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME",
        "value": "VK_KHR_timeline_semaphore",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000207000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000207001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000207002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000207003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000207004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000207005
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreTypeKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceTimelineSemaphorePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreTypeCreateInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkTimelineSemaphoreSubmitInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreWaitFlagBitsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreWaitFlagsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreWaitInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSemaphoreSignalInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetSemaphoreCounterValueKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkWaitSemaphoresKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkSignalSemaphoreKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_209",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_209_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_209_EXTENSION_NAME",
        "value": "VK_KHR_extension_209",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_INTEL_shader_integer_functions2",
    "type": "device",
    "author": "INTEL",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME",
        "value": "VK_INTEL_shader_integer_functions2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL",
        "extends": "VkStructureType",
        "value": 1000209000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_INTEL_performance_query",
    "type": "device",
    "author": "INTEL",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_PERFORMANCE_QUERY_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_PERFORMANCE_QUERY_EXTENSION_NAME",
        "value": "VK_INTEL_performance_query",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL",
        "extends": "VkStructureType",
        "value": 1000210000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL",
        "extends": "VkStructureType",
        "value": 1000210001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL",
        "extends": "VkStructureType",
        "value": 1000210002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL",
        "extends": "VkStructureType",
        "value": 1000210003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL",
        "extends": "VkStructureType",
        "value": 1000210004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL",
        "extends": "VkStructureType",
        "value": 1000210005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL",
        "extends": "VkQueryType",
        "value": 1000210000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL",
        "extends": "VkObjectType",
        "value": 1000210000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceConfigurationTypeINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkQueryPoolSamplingModeINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceOverrideTypeINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceParameterTypeINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceValueTypeINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceValueDataINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceValueINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkInitializePerformanceApiInfoINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkQueryPoolCreateInfoINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceMarkerInfoINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceStreamMarkerInfoINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceOverrideInfoINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceConfigurationAcquireInfoINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPerformanceConfigurationINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkInitializePerformanceApiINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkUninitializePerformanceApiINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetPerformanceMarkerINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetPerformanceStreamMarkerINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetPerformanceOverrideINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkAcquirePerformanceConfigurationINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkReleasePerformanceConfigurationINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkQueueSetPerformanceConfigurationINTEL"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPerformanceParameterINTEL"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_vulkan_memory_model",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION",
        "value": "3",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME",
        "value": "VK_KHR_vulkan_memory_model",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000211000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_pci_bus_info",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_PCI_BUS_INFO_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_PCI_BUS_INFO_EXTENSION_NAME",
        "value": "VK_EXT_pci_bus_info",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000212000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDevicePCIBusInfoPropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_display_native_hdr",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME",
        "value": "VK_AMD_display_native_hdr",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD",
        "extends": "VkStructureType",
        "value": 1000213000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD",
        "extends": "VkStructureType",
        "value": 1000213001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_COLOR_SPACE_DISPLAY_NATIVE_AMD",
        "extends": "VkColorSpaceKHR",
        "value": 1000213000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkDisplayNativeHdrSurfaceCapabilitiesAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSwapchainDisplayNativeHdrCreateInfoAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkSetLocalDimmingAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_FUCHSIA_imagepipe_surface",
    "type": "instance",
    "author": "FUCHSIA",
    "platform": "fuchsia",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FUCHSIA_IMAGEPIPE_SURFACE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FUCHSIA_IMAGEPIPE_SURFACE_EXTENSION_NAME",
        "value": "VK_FUCHSIA_imagepipe_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA",
        "extends": "VkStructureType",
        "value": 1000214000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImagePipeSurfaceCreateFlagsFUCHSIA"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImagePipeSurfaceCreateInfoFUCHSIA"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateImagePipeSurfaceFUCHSIA"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_extension_216",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_216_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_216_EXTENSION_NAME",
        "value": "VK_KHR_extension_216",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_extension_217",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_217_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_217_EXTENSION_NAME",
        "value": "VK_KHR_extension_217",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_metal_surface",
    "type": "instance",
    "author": "EXT",
    "platform": "metal",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_METAL_SURFACE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_METAL_SURFACE_EXTENSION_NAME",
        "value": "VK_EXT_metal_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000217000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMetalSurfaceCreateFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMetalSurfaceCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateMetalSurfaceEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_fragment_density_map",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME",
        "value": "VK_EXT_fragment_density_map",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000218000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000218001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000218002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT",
        "extends": "VkImageCreateFlagBits",
        "value": "0x4000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT",
        "extends": "VkImageLayout",
        "value": 1000218000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT",
        "extends": "VkAccessFlagBits",
        "value": "0x1000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT",
        "extends": "VkFormatFeatureFlagBits",
        "value": "0x1000000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT",
        "extends": "VkImageUsageFlagBits",
        "value": "0x200"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT",
        "extends": "VkImageViewCreateFlagBits",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT",
        "extends": "VkPipelineStageFlagBits",
        "value": "0x800000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT",
        "extends": "VkSamplerCreateFlagBits",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT",
        "extends": "VkSamplerCreateFlagBits",
        "value": "0x2"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceFragmentDensityMapFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceFragmentDensityMapPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkRenderPassFragmentDensityMapCreateInfoEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_220",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_220_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_220_EXTENSION_NAME",
        "value": "VK_EXT_extension_220",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_221",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_221_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_221_EXTENSION_NAME",
        "value": "VK_KHR_extension_221",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_RENDER_PASS_CREATE_RESERVED_0_BIT_KHR",
        "extends": "VkRenderPassCreateFlagBits",
        "value": "0x1"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_scalar_block_layout",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME",
        "value": "VK_EXT_scalar_block_layout",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000221000
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_223",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_223_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_223_EXTENSION_NAME",
        "value": "VK_EXT_extension_223",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_hlsl_functionality1",
    "type": "device",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME",
        "value": "VK_GOOGLE_hlsl_functionality1",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_decorate_string",
    "type": "device",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_DECORATE_STRING_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_DECORATE_STRING_EXTENSION_NAME",
        "value": "VK_GOOGLE_decorate_string",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_subgroup_size_control",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME",
        "value": "VK_EXT_subgroup_size_control",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000225000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000225001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000225002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT",
        "extends": "VkPipelineShaderStageCreateFlagBits",
        "value": "0x1"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT",
        "extends": "VkPipelineShaderStageCreateFlagBits",
        "value": "0x2"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_227",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_227_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_227_EXTENSION_NAME",
        "value": "VK_AMD_extension_227",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_shader_core_properties2",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME",
        "value": "VK_AMD_shader_core_properties2",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD",
        "extends": "VkStructureType",
        "value": 1000227000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderCoreProperties2AMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShaderCorePropertiesFlagBitsAMD"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkShaderCorePropertiesFlagsAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_229",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_229_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_229_EXTENSION_NAME",
        "value": "VK_AMD_extension_229",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_device_coherent_memory",
    "type": "device",
    "author": "AMD",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME",
        "value": "VK_AMD_device_coherent_memory",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD",
        "extends": "VkMemoryPropertyFlagBits",
        "value": "0x40"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD",
        "extends": "VkMemoryPropertyFlagBits",
        "value": "0x80"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD",
        "extends": "VkStructureType",
        "value": 1000229000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceCoherentMemoryFeaturesAMD"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_231",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_231_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_231_EXTENSION_NAME",
        "value": "VK_AMD_extension_231",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_232",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_232_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_232_EXTENSION_NAME",
        "value": "VK_AMD_extension_232",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_233",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_233_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_233_EXTENSION_NAME",
        "value": "VK_AMD_extension_233",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_234",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_234_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_234_EXTENSION_NAME",
        "value": "VK_AMD_extension_234",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_235",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_235_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_235_EXTENSION_NAME",
        "value": "VK_AMD_extension_235",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_AMD_extension_236",
    "author": "AMD",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_236_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_AMD_EXTENSION_236_EXTENSION_NAME",
        "value": "VK_AMD_extension_236",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_spirv_1_4",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SPIRV_1_4_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SPIRV_1_4_EXTENSION_NAME",
        "value": "VK_KHR_spirv_1_4",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_memory_budget",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_MEMORY_BUDGET_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_MEMORY_BUDGET_EXTENSION_NAME",
        "value": "VK_EXT_memory_budget",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000237000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMemoryBudgetPropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_memory_priority",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_MEMORY_PRIORITY_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_MEMORY_PRIORITY_EXTENSION_NAME",
        "value": "VK_EXT_memory_priority",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000238000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000238001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceMemoryPriorityFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkMemoryPriorityAllocateInfoEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_surface_protected_capabilities",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME",
        "value": "VK_KHR_surface_protected_capabilities",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR",
        "extends": "VkStructureType",
        "value": 1000239000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceProtectedCapabilitiesKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_dedicated_allocation_image_aliasing",
    "type": "device",
    "author": "NVIDIA",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME",
        "value": "VK_NV_dedicated_allocation_image_aliasing",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000240000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_242",
    "author": "NVIDIA",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_242_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_242_EXTENSION_NAME",
        "value": "VK_NV_extension_242",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_INTEL_extension_243",
    "author": "INTEL",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_EXTENSION_243_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_EXTENSION_243_EXTENSION_NAME",
        "value": "VK_INTEL_extension_243",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_MESA_extension_244",
    "author": "MESA",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MESA_EXTENSION_244_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_MESA_EXTENSION_244_EXTENSION_NAME",
        "value": "VK_MESA_extension_244",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_buffer_device_address",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME",
        "value": "VK_EXT_buffer_device_address",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000244000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT",
        "extends": "VkStructureType",
        "alias": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
        "isAlias": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000244000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000244001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000244002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT",
        "extends": "VkBufferUsageFlagBits",
        "value": "0x20000"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT",
        "extends": "VkBufferCreateFlagBits",
        "value": "0x10"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_INVALID_DEVICE_ADDRESS_EXT",
        "extends": "VkResult",
        "value": -1000244000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceBufferAddressFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBufferDeviceAddressInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkBufferDeviceAddressCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetBufferDeviceAddressEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_246",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_246_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_246_EXTENSION_NAME",
        "value": "VK_EXT_extension_246",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_separate_stencil_usage",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME",
        "value": "VK_EXT_separate_stencil_usage",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000246000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkImageStencilUsageCreateInfoEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_validation_features",
    "type": "instance",
    "author": "LUNARG",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VALIDATION_FEATURES_SPEC_VERSION",
        "value": "2",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME",
        "value": "VK_EXT_validation_features",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000247000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkValidationFeaturesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_249",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_249_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_249_EXTENSION_NAME",
        "value": "VK_KHR_extension_249",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_cooperative_matrix",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_COOPERATIVE_MATRIX_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_COOPERATIVE_MATRIX_EXTENSION_NAME",
        "value": "VK_NV_cooperative_matrix",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000249000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV",
        "extends": "VkStructureType",
        "value": 1000249001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV",
        "extends": "VkStructureType",
        "value": 1000249002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCooperativeMatrixPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkScopeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkComponentTypeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceCooperativeMatrixFeaturesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceCooperativeMatrixPropertiesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_coverage_reduction_mode",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME",
        "value": "VK_NV_coverage_reduction_mode",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV",
        "extends": "VkStructureType",
        "value": 1000250000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV",
        "extends": "VkStructureType",
        "value": 1000250001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV",
        "extends": "VkStructureType",
        "value": 1000250002
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceCoverageReductionModeFeaturesNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCoverageReductionStateCreateInfoNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineCoverageReductionStateCreateFlagsNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkCoverageReductionModeNV"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFramebufferMixedSamplesCombinationNV"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_fragment_shader_interlock",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME",
        "value": "VK_EXT_fragment_shader_interlock",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000251000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_ycbcr_image_arrays",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME",
        "value": "VK_EXT_ycbcr_image_arrays",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000252000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_uniform_buffer_standard_layout",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME",
        "value": "VK_KHR_uniform_buffer_standard_layout",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000253000
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_255",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_255_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_255_EXTENSION_NAME",
        "value": "VK_EXT_extension_255",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_full_screen_exclusive",
    "type": "device",
    "author": "EXT",
    "platform": "win32",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FULL_SCREEN_EXCLUSIVE_SPEC_VERSION",
        "value": "4",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_FULL_SCREEN_EXCLUSIVE_EXTENSION_NAME",
        "value": "VK_EXT_full_screen_exclusive",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000255000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT",
        "extends": "VkStructureType",
        "value": 1000255002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "isNegative": true,
        "name": "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
        "extends": "VkResult",
        "value": -1000255000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkFullScreenExclusiveEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceFullScreenExclusiveInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceCapabilitiesFullScreenExclusiveEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPhysicalDeviceSurfacePresentModes2EXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkAcquireFullScreenExclusiveModeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkReleaseFullScreenExclusiveModeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000255001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkSurfaceFullScreenExclusiveWin32InfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDeviceGroupSurfacePresentModes2EXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetDeviceGroupSurfacePresentModes2EXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_headless_surface",
    "type": "instance",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_HEADLESS_SURFACE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_HEADLESS_SURFACE_EXTENSION_NAME",
        "value": "VK_EXT_headless_surface",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000256000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkHeadlessSurfaceCreateFlagsEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkHeadlessSurfaceCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCreateHeadlessSurfaceEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_258",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_258_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_258_EXTENSION_NAME",
        "value": "VK_EXT_extension_258",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_259",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_259_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_259_EXTENSION_NAME",
        "value": "VK_EXT_extension_259",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_line_rasterization",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_LINE_RASTERIZATION_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME",
        "value": "VK_EXT_line_rasterization",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000259000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT",
        "extends": "VkStructureType",
        "value": 1000259001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000259002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_DYNAMIC_STATE_LINE_STIPPLE_EXT",
        "extends": "VkDynamicState",
        "value": 1000259000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceLineRasterizationFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceLineRasterizationPropertiesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineRasterizationLineStateCreateInfoEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkLineRasterizationModeEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkCmdSetLineStippleEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_261",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_261_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_261_EXTENSION_NAME",
        "value": "VK_NV_extension_261",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_host_query_reset",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_HOST_QUERY_RESET_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_HOST_QUERY_RESET_EXTENSION_NAME",
        "value": "VK_EXT_host_query_reset",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000261000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceHostQueryResetFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkResetQueryPoolEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GGP_extension_263",
    "author": "GGP",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_263_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_EXTENSION_263_EXTENSION_NAME",
        "value": "VK_GGP_extension_263",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_BRCM_extension_264",
    "author": "BRCM",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BRCM_EXTENSION_264_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BRCM_EXTENSION_264_EXTENSION_NAME",
        "value": "VK_BRCM_extension_264",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_BRCM_extension_265",
    "author": "BRCM",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BRCM_EXTENSION_265_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_BRCM_EXTENSION_265_EXTENSION_NAME",
        "value": "VK_BRCM_extension_265",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_index_type_uint8",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_INDEX_TYPE_UINT8_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_INDEX_TYPE_UINT8_EXTENSION_NAME",
        "value": "VK_EXT_index_type_uint8",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000265000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INDEX_TYPE_UINT8_EXT",
        "extends": "VkIndexType",
        "value": 1000265000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceIndexTypeUint8FeaturesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_267",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_267_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_extension_267",
        "value": "VK_EXT_extension_267",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_268",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_268_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_extension_268",
        "value": "VK_KHR_extension_268",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_269",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_269_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_extension_269",
        "value": "VK_KHR_extension_269",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_pipeline_executable_properties",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME",
        "value": "VK_KHR_pipeline_executable_properties",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR",
        "extends": "VkStructureType",
        "value": 1000269000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000269001
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR",
        "extends": "VkStructureType",
        "value": 1000269002
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR",
        "extends": "VkStructureType",
        "value": 1000269003
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR",
        "extends": "VkStructureType",
        "value": 1000269004
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR",
        "extends": "VkStructureType",
        "value": 1000269005
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR",
        "extends": "VkPipelineCreateFlagBits",
        "value": "0x40"
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR",
        "extends": "VkPipelineCreateFlagBits",
        "value": "0x80"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineExecutablePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineExecutableInfoKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineExecutableStatisticFormatKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineExecutableStatisticValueKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineExecutableStatisticKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPipelineExecutableInternalRepresentationKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPipelineExecutablePropertiesKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPipelineExecutableStatisticsKHR"
      },
      {
        "kind": "EXTENSION_MEMBER_COMMAND",
        "name": "vkGetPipelineExecutableInternalRepresentationsKHR"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_INTEL_extension_271",
    "type": "device",
    "author": "INTEL",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_EXTENSION_271_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_extension_271",
        "value": "VK_KHR_extension_271",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_INTEL_extension_272",
    "type": "device",
    "author": "INTEL",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_EXTENSION_272_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_extension_272",
        "value": "VK_KHR_extension_272",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_INTEL_extension_273",
    "type": "device",
    "author": "INTEL",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_EXTENSION_273_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_extension_273",
        "value": "VK_KHR_extension_273",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_INTEL_extension_274",
    "type": "device",
    "author": "INTEL",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_EXTENSION_274_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_INTEL_extension_274",
        "value": "VK_KHR_extension_274",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_275",
    "type": "instance",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_275_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_extension_275",
        "value": "VK_KHR_extension_275",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_276",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_276_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_extension_276",
        "value": "VK_KHR_extension_276",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_shader_demote_to_helper_invocation",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME",
        "value": "VK_EXT_shader_demote_to_helper_invocation",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000276000
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_278",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_278_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_extension_278",
        "value": "VK_NV_extension_278",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_279",
    "type": "device",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_279_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_extension_279",
        "value": "VK_NV_extension_279",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_280",
    "type": "device",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_280_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_extension_280",
        "value": "VK_KHR_extension_280",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_ARM_extension_281",
    "type": "device",
    "author": "ARM",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ARM_EXTENSION_281_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_ARM_extension_281",
        "value": "VK_ARM_extension_281",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_texel_buffer_alignment",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME",
        "value": "VK_EXT_texel_buffer_alignment",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT",
        "extends": "VkStructureType",
        "value": 1000281000
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT",
        "extends": "VkStructureType",
        "value": 1000281001
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT"
      },
      {
        "kind": "EXTENSION_MEMBER_STRUCT",
        "name": "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_QCOM_extension_283",
    "type": "device",
    "author": "QCOM",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_EXTENSION_283_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_QCOM_extension_283",
        "value": "VK_QCOM_extension_283",
        "isStringValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_RENDER_PASS_RESERVED_BIT_1_QCOM",
        "extends": "VkRenderPassCreateFlagBits",
        "value": "0x2"
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_284",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_284_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_extension_284",
        "value": "VK_EXT_extension_284",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_285",
    "type": "device",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_285_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_extension_285",
        "value": "VK_EXT_extension_285",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_286",
    "type": "instance",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_286_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_extension_286",
        "value": "VK_EXT_extension_286",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NVX_extension_287",
    "author": "NVX",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_287_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_287_EXTENSION_NAME",
        "value": "VK_NVX_extension_287",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NVX_extension_288",
    "author": "NVX",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_288_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NVX_EXTENSION_288_EXTENSION_NAME",
        "value": "VK_NVX_extension_288",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_EXT_extension_289",
    "author": "EXT",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_289_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_EXT_EXTENSION_289_EXTENSION_NAME",
        "value": "VK_EXT_extension_289",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_GOOGLE_user_type",
    "type": "device",
    "author": "GOOGLE",
    "platform": "default",
    "supported": "vulkan",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_USER_TYPE_SPEC_VERSION",
        "value": "1",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_GOOGLE_USER_TYPE_EXTENSION_NAME",
        "value": "VK_GOOGLE_user_type",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_291",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_291_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_291_EXTENSION_NAME",
        "value": "VK_NV_extension_291",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_292",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_292_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_292_EXTENSION_NAME",
        "value": "VK_NV_extension_292",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_NV_extension_293",
    "author": "NV",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_293_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_NV_EXTENSION_293_EXTENSION_NAME",
        "value": "VK_NV_extension_293",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "EXTENSION",
    "name": "VK_KHR_extension_294",
    "author": "KHR",
    "platform": "default",
    "supported": "disabled",
    "members": [
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_294_SPEC_VERSION",
        "value": "0",
        "isNumericValue": true
      },
      {
        "kind": "EXTENSION_MEMBER_ENUM",
        "name": "VK_KHR_EXTENSION_294_EXTENSION_NAME",
        "value": "VK_KHR_extension_294",
        "isStringValue": true
      }
    ]
  },
  {
    "kind": "STRUCT",
    "name": "VkBaseOutStructure",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the structure type of the structure being iterated through."
        }
      },
      {
        "text": "struct VkBaseOutStructure * pNext",
        "type": "VkBaseOutStructure",
        "rawType": "struct VkBaseOutStructure *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to the next structure in a structure chain."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Base structure for a read-only reference chain"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBaseInStructure",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the structure type of the structure being iterated through."
        }
      },
      {
        "text": "const struct VkBaseInStructure * pNext",
        "type": "VkBaseInStructure",
        "rawType": "const struct VkBaseInStructure *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to the next structure in a structure chain."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Base structure for a read-only reference chain"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkOffset2D",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "int32_t x",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "x",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the x offset."
        }
      },
      {
        "text": "int32_t y",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "y",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the y offset."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Structure specifying a two-dimensional offset"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkOffset3D",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "int32_t x",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "x",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the x offset."
        }
      },
      {
        "text": "int32_t y",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "y",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the y offset."
        }
      },
      {
        "text": "int32_t z",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "z",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the z offset."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Structure specifying a three-dimensional offset"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExtent2D",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t width",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "width",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the width of the extent."
        }
      },
      {
        "text": "uint32_t height",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "height",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the height of the extent."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Structure specifying a two-dimensional extent"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExtent3D",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t width",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "width",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the width of the extent."
        }
      },
      {
        "text": "uint32_t height",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "height",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the height of the extent."
        }
      },
      {
        "text": "uint32_t depth",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the depth of the extent."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Structure specifying a three-dimensional extent"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkViewport",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "float x",
        "type": "float",
        "rawType": "float",
        "name": "x",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float y",
        "type": "float",
        "rawType": "float",
        "name": "y",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " are the viewport's upper left corner [eq]#(x,y)#."
        }
      },
      {
        "text": "float width",
        "type": "float",
        "rawType": "float",
        "name": "width",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float height",
        "type": "float",
        "rawType": "float",
        "name": "height",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " are the viewport's width and height, respectively."
        }
      },
      {
        "text": "float minDepth",
        "type": "float",
        "rawType": "float",
        "name": "minDepth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float maxDepth",
        "type": "float",
        "rawType": "float",
        "name": "maxDepth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "minDepth"
            },
            {
              "kind": "pname",
              "value": "maxDepth"
            }
          ],
          "description": " are the depth range for the viewport. It is valid for {#0#} to be greater than or equal to {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Structure specifying a viewport"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRect2D",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkOffset2D offset",
        "type": "VkOffset2D",
        "rawType": "VkOffset2D",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkOffset2D"
            }
          ],
          "description": " is a {#0#} specifying the rectangle offset."
        }
      },
      {
        "text": "VkExtent2D extent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "extent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExtent2D"
            }
          ],
          "description": " is a {#0#} specifying the rectangle extent."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fundamentals",
      "description": "Structure specifying a two-dimensional subregion"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkClearRect",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkRect2D rect",
        "type": "VkRect2D",
        "rawType": "VkRect2D",
        "name": "rect",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the two-dimensional region to be cleared."
        }
      },
      {
        "text": "uint32_t baseArrayLayer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "baseArrayLayer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the first layer to be cleared."
        }
      },
      {
        "text": "uint32_t layerCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "layerCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of layers to clear."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Structure specifying a clear rectangle"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkComponentMapping",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkComponentSwizzle r",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "r",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentSwizzle",
        "enumRawType": "VkComponentSwizzle",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkComponentSwizzle"
            }
          ],
          "description": " is a {#0#} specifying the component value placed in the R component of the output vector."
        }
      },
      {
        "text": "VkComponentSwizzle g",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "g",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentSwizzle",
        "enumRawType": "VkComponentSwizzle",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkComponentSwizzle"
            }
          ],
          "description": " is a {#0#} specifying the component value placed in the G component of the output vector."
        }
      },
      {
        "text": "VkComponentSwizzle b",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "b",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentSwizzle",
        "enumRawType": "VkComponentSwizzle",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkComponentSwizzle"
            }
          ],
          "description": " is a {#0#} specifying the component value placed in the B component of the output vector."
        }
      },
      {
        "text": "VkComponentSwizzle a",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "a",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentSwizzle",
        "enumRawType": "VkComponentSwizzle",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkComponentSwizzle"
            }
          ],
          "description": " is a {#0#} specifying the component value placed in the A component of the output vector."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying a color component mapping"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint32_t apiVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "apiVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the version of Vulkan supported by the device, encoded as described in <<extendingvulkan-coreversions-versionnumbers>>."
        }
      },
      {
        "text": "uint32_t driverVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "driverVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the vendor-specified version of the driver."
        }
      },
      {
        "text": "uint32_t vendorID",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vendorID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a unique identifier for the _vendor_ (see below) of the physical device."
        }
      },
      {
        "text": "uint32_t deviceID",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a unique identifier for the physical device among devices available from the vendor."
        }
      },
      {
        "text": "VkPhysicalDeviceType deviceType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "deviceType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPhysicalDeviceType",
        "enumRawType": "VkPhysicalDeviceType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPhysicalDeviceType"
            }
          ],
          "description": " is a {#0#} specifying the type of device."
        }
      },
      {
        "text": "char deviceName [ VK_MAX_PHYSICAL_DEVICE_NAME_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_PHYSICAL_DEVICE_NAME_SIZE ]",
        "name": "deviceName",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint8_t pipelineCacheUUID [ VK_UUID_SIZE ]",
        "type": "uint8_t",
        "rawType": "uint8_t [ VK_UUID_SIZE ]",
        "name": "pipelineCacheUUID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkPhysicalDeviceLimits limits",
        "type": "VkPhysicalDeviceLimits",
        "rawType": "VkPhysicalDeviceLimits",
        "name": "limits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceLimits"
            }
          ],
          "description": " is the {#0#} structure specifying device-specific limits of the physical device. See <<limits,Limits>> for details."
        }
      },
      {
        "text": "VkPhysicalDeviceSparseProperties sparseProperties",
        "type": "VkPhysicalDeviceSparseProperties",
        "rawType": "VkPhysicalDeviceSparseProperties",
        "name": "sparseProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSparseProperties"
            }
          ],
          "description": " is the {#0#} structure specifying various sparse related properties of the physical device. See <<sparsememory-physicalprops,Sparse Properties>> for details."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure specifying physical device properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExtensionProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "char extensionName [ VK_MAX_EXTENSION_NAME_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_EXTENSION_NAME_SIZE ]",
        "name": "extensionName",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t specVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "specVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the version of this extension. It is a number, incremented with backward compatible changes."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Extending Vulkan",
      "description": "Structure specifying an extension properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkLayerProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "char layerName [ VK_MAX_EXTENSION_NAME_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_EXTENSION_NAME_SIZE ]",
        "name": "layerName",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t specVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "specVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the Vulkan version the layer was written to, encoded as described in <<extendingvulkan-coreversions-versionnumbers>>."
        }
      },
      {
        "text": "uint32_t implementationVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "implementationVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the version of this layer. It is a number, increasing with backward compatible changes."
        }
      },
      {
        "text": "char description [ VK_MAX_DESCRIPTION_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DESCRIPTION_SIZE ]",
        "name": "description",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Extending Vulkan",
      "description": "Structure specifying layer properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkApplicationInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "const char * pApplicationName",
        "type": "char",
        "rawType": "const char *",
        "name": "pApplicationName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or is a reference to a string containing the name of the application."
        }
      },
      {
        "text": "uint32_t applicationVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "applicationVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number variable containing the developer-supplied version number of the application."
        }
      },
      {
        "text": "const char * pEngineName",
        "type": "char",
        "rawType": "const char *",
        "name": "pEngineName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or is a reference to a string containing the name of the engine (if any) used to create the application."
        }
      },
      {
        "text": "uint32_t engineVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "engineVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number variable containing the developer-supplied version number of the engine used to create the application.ifndef::VK_VERSION_1_1[]"
        }
      },
      {
        "text": "uint32_t apiVersion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "apiVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " {#0#} be the highest version of Vulkan that the application is designed to use, encoded as described in <<extendingvulkan-coreversions-versionnumbers>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_APPLICATION_INFO",
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Structure specifying application info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAllocationCallbacks",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkAllocationCallbacks"
            }
          ],
          "description": " is a value to be interpreted by the implementation of the callbacks. When any of the callbacks in {#1#} are called, the Vulkan implementation will pass this value as the first parameter to the callback. This value {#0#} vary each time an allocator is passed into a command, even when the same object takes an allocator in multiple commands."
        }
      },
      {
        "text": "PFN_vkAllocationFunction pfnAllocation",
        "type": "PFN_vkAllocationFunction",
        "rawType": "PFN_vkAllocationFunction",
        "name": "pfnAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isFunction": true,
        "jsType": "Function",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "PFN_vkAllocationFunction"
            }
          ],
          "description": " is a {#0#} reference to an application-defined memory allocation function."
        }
      },
      {
        "text": "PFN_vkReallocationFunction pfnReallocation",
        "type": "PFN_vkReallocationFunction",
        "rawType": "PFN_vkReallocationFunction",
        "name": "pfnReallocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isFunction": true,
        "jsType": "Function",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "PFN_vkReallocationFunction"
            }
          ],
          "description": " is a {#0#} reference to an application-defined memory reallocation function."
        }
      },
      {
        "text": "PFN_vkFreeFunction pfnFree",
        "type": "PFN_vkFreeFunction",
        "rawType": "PFN_vkFreeFunction",
        "name": "pfnFree",
        "isConstant": false,
        "dereferenceCount": 0,
        "isFunction": true,
        "jsType": "Function",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "PFN_vkFreeFunction"
            }
          ],
          "description": " is a {#0#} reference to an application-defined memory free function."
        }
      },
      {
        "text": "PFN_vkInternalAllocationNotification pfnInternalAllocation",
        "type": "PFN_vkInternalAllocationNotification",
        "rawType": "PFN_vkInternalAllocationNotification",
        "name": "pfnInternalAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isFunction": true,
        "jsType": "Function",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "PFN_vkInternalAllocationNotification"
            }
          ],
          "description": " is a {#0#} reference to an application-defined function that is called by the implementation when the implementation makes internal allocations."
        }
      },
      {
        "text": "PFN_vkInternalFreeNotification pfnInternalFree",
        "type": "PFN_vkInternalFreeNotification",
        "rawType": "PFN_vkInternalFreeNotification",
        "name": "pfnInternalFree",
        "isConstant": false,
        "dereferenceCount": 0,
        "isFunction": true,
        "jsType": "Function",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "PFN_vkInternalFreeNotification"
            }
          ],
          "description": " is a {#0#} reference to an application-defined function that is called by the implementation when the implementation frees internal allocations."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure containing callback function references for memory allocation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceQueueCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure.ifndef::VK_VERSION_1_1[]"
        }
      },
      {
        "text": "VkDeviceQueueCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDeviceQueueCreateFlagBits",
        "bitmaskRawType": "VkDeviceQueueCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a bitmask indicating behavior of the queue."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t queueCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const float * pQueuePriorities",
        "type": "float",
        "rawType": "const float *",
        "name": "pQueuePriorities",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "queueCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Float32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO",
    "extensions": [
      "VkDeviceQueueGlobalPriorityCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure specifying parameters of a newly created device queue"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDeviceCreateFlags",
        "bitmaskRawType": "VkDeviceCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t queueCreateInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueCreateInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pQueueCreateInfos"
            }
          ],
          "description": " is the size of the {#0#} array. Refer to the <<devsandqueues-queue-creation,Queue Creation>> section below for further details."
        }
      },
      {
        "text": "const VkDeviceQueueCreateInfo * pQueueCreateInfos",
        "type": "VkDeviceQueueCreateInfo",
        "rawType": "const VkDeviceQueueCreateInfo *",
        "name": "pQueueCreateInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "queueCreateInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceQueueCreateInfo"
            }
          ],
          "description": " is an array of {#0#} structures describing the queues that are requested to be created along with the logical device. Refer to the <<devsandqueues-queue-creation,Queue Creation>> section below for further details."
        }
      },
      {
        "text": "uint32_t enabledLayerCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "enabledLayerCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is deprecated and ignored."
        }
      },
      {
        "text": "const char * const* ppEnabledLayerNames",
        "type": "char",
        "rawType": "const char * const*",
        "name": "ppEnabledLayerNames",
        "isConstant": true,
        "dereferenceCount": 2,
        "isArray": true,
        "length": "enabledLayerCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is deprecated and ignored. See <<extendingvulkan-layers-devicelayerdeprecation>>."
        }
      },
      {
        "text": "uint32_t enabledExtensionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "enabledExtensionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of device extensions to enable."
        }
      },
      {
        "text": "const char * const* ppEnabledExtensionNames",
        "type": "char",
        "rawType": "const char * const*",
        "name": "ppEnabledExtensionNames",
        "isConstant": true,
        "dereferenceCount": 2,
        "isArray": true,
        "length": "enabledExtensionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "enabledExtensionCount"
            }
          ],
          "description": " is an array of {#0#} strings containing the names of extensions to enable for the created device. See the <<extendingvulkan-extensions>> section for further details."
        }
      },
      {
        "text": "const VkPhysicalDeviceFeatures * pEnabledFeatures",
        "type": "VkPhysicalDeviceFeatures",
        "rawType": "const VkPhysicalDeviceFeatures *",
        "name": "pEnabledFeatures",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceFeatures"
            }
          ],
          "description": " is <i>null</i> or a reference to a {#0#} structure containing boolean indicators of all the features to be enabled. Refer to the <<features,Features>> section for further details."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO",
    "extensions": [
      "VkPhysicalDeviceFeatures2",
      "VkPhysicalDeviceVariablePointersFeatures",
      "VkPhysicalDeviceMultiviewFeatures",
      "VkDeviceGroupDeviceCreateInfo",
      "VkPhysicalDevice16BitStorageFeatures",
      "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",
      "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
      "VkPhysicalDeviceProtectedMemoryFeatures",
      "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
      "VkPhysicalDeviceInlineUniformBlockFeaturesEXT",
      "VkPhysicalDeviceShaderDrawParametersFeatures",
      "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR",
      "VkPhysicalDeviceHostQueryResetFeaturesEXT",
      "VkPhysicalDeviceDescriptorIndexingFeaturesEXT",
      "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR",
      "VkPhysicalDevice8BitStorageFeaturesKHR",
      "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
      "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR",
      "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR",
      "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
      "VkPhysicalDeviceASTCDecodeFeaturesEXT",
      "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
      "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
      "VkPhysicalDeviceExclusiveScissorFeaturesNV",
      "VkPhysicalDeviceCornerSampledImageFeaturesNV",
      "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
      "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
      "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
      "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
      "VkPhysicalDeviceShadingRateImageFeaturesNV",
      "VkPhysicalDeviceMeshShaderFeaturesNV",
      "VkDeviceMemoryOverallocationCreateInfoAMD",
      "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
      "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT",
      "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",
      "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
      "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
      "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
      "VkPhysicalDeviceImagelessFramebufferFeaturesKHR",
      "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT",
      "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
      "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
      "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
      "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
      "VkPhysicalDeviceShaderClockFeaturesKHR",
      "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
      "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
      "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
      "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
      "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
      "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
      "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT",
      "VkPhysicalDeviceLineRasterizationFeaturesEXT",
      "VkPhysicalDeviceCoherentMemoryFeaturesAMD"
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure specifying parameters of a newly created device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkInstanceCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkInstanceCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkInstanceCreateFlags",
        "bitmaskRawType": "VkInstanceCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "const VkApplicationInfo * pApplicationInfo",
        "type": "VkApplicationInfo",
        "rawType": "const VkApplicationInfo *",
        "name": "pApplicationInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkApplicationInfo"
            },
            {
              "kind": "slink",
              "value": "VkApplicationInfo"
            }
          ],
          "description": " is <i>null</i> or a reference to a {#0#} structure. If not <i>null</i>, this information helps implementations recognize behavior inherent to classes of applications. {#1#} is defined in detail below."
        }
      },
      {
        "text": "uint32_t enabledLayerCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "enabledLayerCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of global layers to enable."
        }
      },
      {
        "text": "const char * const* ppEnabledLayerNames",
        "type": "char",
        "rawType": "const char * const*",
        "name": "ppEnabledLayerNames",
        "isConstant": true,
        "dereferenceCount": 2,
        "isArray": true,
        "length": "enabledLayerCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "enabledLayerCount"
            }
          ],
          "description": " is an array of {#0#} strings containing the names of layers to enable for the created instance. See the <<extendingvulkan-layers>> section for further details."
        }
      },
      {
        "text": "uint32_t enabledExtensionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "enabledExtensionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of global extensions to enable."
        }
      },
      {
        "text": "const char * const* ppEnabledExtensionNames",
        "type": "char",
        "rawType": "const char * const*",
        "name": "ppEnabledExtensionNames",
        "isConstant": true,
        "dereferenceCount": 2,
        "isArray": true,
        "length": "enabledExtensionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "enabledExtensionCount"
            }
          ],
          "description": " is an array of {#0#} strings containing the names of extensions to enable."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO",
    "extensions": [
      "VkDebugReportCallbackCreateInfoEXT",
      "VkValidationFlagsEXT",
      "VkValidationFeaturesEXT",
      "VkDebugUtilsMessengerCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Structure specifying parameters of a newly created instance"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkQueueFamilyProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkQueueFlags queueFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "queueFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueueFlagBits",
        "bitmaskRawType": "VkQueueFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkQueueFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} indicating capabilities of the queues in this queue family."
        }
      },
      {
        "text": "uint32_t queueCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is the unsigned integer count of queues in this queue family. Each queue family {#0#} support at least one queue."
        }
      },
      {
        "text": "uint32_t timestampValidBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "timestampValidBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdWriteTimestamp"
            }
          ],
          "description": " is the unsigned integer count of meaningful bits in the timestamps written via {#0#}. The valid range for the count is 36..64 bits, or a value of 0, indicating no support for timestamps. Bits outside the valid range are guaranteed to be zeros."
        }
      },
      {
        "text": "VkExtent3D minImageTransferGranularity",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "minImageTransferGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the minimum granularity supported for image transfer operations on the queues in this queue family."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure providing information about a queue family"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMemoryProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint32_t memoryTypeCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryTypeCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "memoryTypes"
            }
          ],
          "description": " is the number of valid elements in the {#0#} array."
        }
      },
      {
        "text": "VkMemoryType memoryTypes [ VK_MAX_MEMORY_TYPES ]",
        "type": "VkMemoryType",
        "rawType": "VkMemoryType [ VK_MAX_MEMORY_TYPES ]",
        "name": "memoryTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "isArray": true,
        "length": "32",
        "isStaticArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "dynamicLength": "memoryTypeCount"
      },
      {
        "text": "uint32_t memoryHeapCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryHeapCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "memoryHeaps"
            }
          ],
          "description": " is the number of valid elements in the {#0#} array."
        }
      },
      {
        "text": "VkMemoryHeap memoryHeaps [ VK_MAX_MEMORY_HEAPS ]",
        "type": "VkMemoryHeap",
        "rawType": "VkMemoryHeap [ VK_MAX_MEMORY_HEAPS ]",
        "name": "memoryHeaps",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "dynamicLength": "memoryHeapCount"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure specifying physical device memory properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryAllocateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceSize allocationSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "allocationSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the size of the allocation in bytes"
        }
      },
      {
        "text": "uint32_t memoryTypeIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryTypeIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceMemoryProperties"
            },
            {
              "kind": "pname",
              "value": "memoryTypes"
            }
          ],
          "description": " is an index identifying a memory type from the {#1#} array of the {#0#} structure"
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO",
    "extensions": [
      "VkDedicatedAllocationMemoryAllocateInfoNV",
      "VkExportMemoryAllocateInfoNV",
      "VkImportMemoryWin32HandleInfoNV",
      "VkExportMemoryWin32HandleInfoNV",
      "VkExportMemoryAllocateInfo",
      "VkImportMemoryWin32HandleInfoKHR",
      "VkImportMemoryFdInfoKHR",
      "VkMemoryAllocateFlagsInfo",
      "VkMemoryDedicatedAllocateInfo",
      "VkImportMemoryHostPointerInfoEXT",
      "VkImportAndroidHardwareBufferInfoANDROID",
      "VkMemoryPriorityAllocateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure containing parameters of a memory allocation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryRequirements",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "required",
              "value": ""
            }
          ],
          "description": " is the size, in bytes, of the memory allocation {#0#} for the resource."
        }
      },
      {
        "text": "VkDeviceSize alignment",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "alignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "required",
              "value": ""
            }
          ],
          "description": " is the alignment, in bytes, of the offset within the allocation {#0#} for the resource."
        }
      },
      {
        "text": "uint32_t memoryTypeBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryTypeBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPhysicalDeviceMemoryProperties"
            }
          ],
          "description": " is a bitmask and contains one bit set for every supported memory type for the resource. Bit `i` is set if and only if the memory type `i` in the {#0#} structure for the physical device is supported for the resource."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying memory requirements"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageFormatProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageAspectFlagBits"
            }
          ],
          "description": " is a bitmask {#0#} specifying which aspects of the image the properties apply to."
        }
      },
      {
        "text": "VkExtent3D imageGranularity",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "imageGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the width, height, and depth of the sparse image block in texels or compressed texel blocks."
        }
      },
      {
        "text": "VkSparseImageFormatFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSparseImageFormatFlagBits",
        "bitmaskRawType": "VkSparseImageFormatFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSparseImageFormatFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional information about the sparse resource."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying sparse image format properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageMemoryRequirements",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkSparseImageFormatProperties formatProperties",
        "type": "VkSparseImageFormatProperties",
        "rawType": "VkSparseImageFormatProperties",
        "name": "formatProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t imageMipTailFirstLod",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageMipTailFirstLod",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the first mip level at which image subresources are included in the mip tail region."
        }
      },
      {
        "text": "VkDeviceSize imageMipTailSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "imageMipTailSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT"
            },
            {
              "kind": "pname",
              "value": "formatProperties.flags"
            }
          ],
          "description": " is the memory size (in bytes) of the mip tail region. If {#1#} contains {#0#}, this is the size of the whole mip tail, otherwise this is the size of the mip tail of a single array layer. This value is guaranteed to be a multiple of the sparse block size in bytes."
        }
      },
      {
        "text": "VkDeviceSize imageMipTailOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "imageMipTailOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseImageOpaqueMemoryBindInfo"
            }
          ],
          "description": " is the opaque memory offset used with {#0#} to bind the mip tail region(s)."
        }
      },
      {
        "text": "VkDeviceSize imageMipTailStride",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "imageMipTailStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT"
            },
            {
              "kind": "pname",
              "value": "formatProperties.flags"
            },
            {
              "kind": "undefined",
              "value": ""
            }
          ],
          "description": " is the offset stride between each array-layer's mip tail, if {#1#} does not contain {#0#} (otherwise the value is {#2#})."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying sparse image memory requirements"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryType",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkMemoryPropertyFlags propertyFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "propertyFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkMemoryPropertyFlagBits",
        "bitmaskRawType": "VkMemoryPropertyFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkMemoryPropertyFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} of properties for this memory type."
        }
      },
      {
        "text": "uint32_t heapIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "heapIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceMemoryProperties"
            },
            {
              "kind": "pname",
              "value": "memoryHeapCount"
            }
          ],
          "description": " describes which memory heap this memory type corresponds to, and {#0#} be less than {#2#} from the {#1#} structure."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure specifying memory type"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryHeap",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the total memory size in bytes in the heap."
        }
      },
      {
        "text": "VkMemoryHeapFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkMemoryHeapFlagBits",
        "bitmaskRawType": "VkMemoryHeapFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkMemoryHeapFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying attribute flags for the heap."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure specifying a memory heap"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMappedMemoryRange",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the memory object to which this range belongs."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the zero-based byte offset from the beginning of the memory object."
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure specifying a mapped memory range"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFormatProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkFormatFeatureFlags linearTilingFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "linearTilingFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFormatFeatureFlagBits",
        "bitmaskRawType": "VkFormatFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_IMAGE_TILING_LINEAR"
            },
            {
              "kind": "elink",
              "value": "VkFormatFeatureFlagBits"
            },
            {
              "kind": "pname",
              "value": "tiling"
            }
          ],
          "description": " is a bitmask of {#1#} specifying features supported by images created with a {#2#} parameter of {#0#}."
        }
      },
      {
        "text": "VkFormatFeatureFlags optimalTilingFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "optimalTilingFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFormatFeatureFlagBits",
        "bitmaskRawType": "VkFormatFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_IMAGE_TILING_OPTIMAL"
            },
            {
              "kind": "elink",
              "value": "VkFormatFeatureFlagBits"
            },
            {
              "kind": "pname",
              "value": "tiling"
            }
          ],
          "description": " is a bitmask of {#1#} specifying features supported by images created with a {#2#} parameter of {#0#}."
        }
      },
      {
        "text": "VkFormatFeatureFlags bufferFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "bufferFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFormatFeatureFlagBits",
        "bitmaskRawType": "VkFormatFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormatFeatureFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying features supported by buffers."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Structure specifying image format properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageFormatProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkExtent3D maxExtent",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "maxExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "type"
            }
          ],
          "description": " are the maximum image dimensions. See the <<features-extentperimagetype,Allowed Extent Values>> section below for how these values are constrained by {#0#}."
        }
      },
      {
        "text": "uint32_t maxMipLevels",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMipLevels",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "maxMipLevels"
            },
            {
              "kind": "pname",
              "value": "maxExtent.width"
            },
            {
              "kind": "pname",
              "value": "maxExtent.height"
            },
            {
              "kind": "pname",
              "value": "maxExtent.depth"
            }
          ],
          "description": " is the maximum number of mipmap levels. {#2#} {#1#} be equal to the number of levels in the complete mipmap chain based on the [eq]#{#3#}#, [eq]#{#4#}#, and [eq]#{#5#}#, except when one of the following conditions is true, in which case it {#0#} instead be `1`:"
        }
      },
      {
        "text": "uint32_t maxArrayLayers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxArrayLayers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags sampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize maxResourceSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxResourceSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying an image format properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorBufferInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the buffer resource."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize range",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "range",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "pname",
              "value": "offset"
            }
          ],
          "description": " is the size in bytes that is used for this descriptor update, or {#0#} to use the range from {#1#} to the end of the buffer."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying descriptor buffer info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorImageInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkSampler sampler",
        "type": "VkSampler",
        "rawType": "VkSampler",
        "name": "sampler",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_SAMPLER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"
            }
          ],
          "description": " is a sampler handle, and is used in descriptor updates for types {#0#} and {#1#} if the binding being updated does not use immutable samplers."
        }
      },
      {
        "text": "VkImageView imageView",
        "type": "VkImageView",
        "rawType": "VkImageView",
        "name": "imageView",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT"
            }
          ],
          "description": " is an image view handle, and is used in descriptor updates for types {#0#}, {#1#}, {#2#}, and {#3#}."
        }
      },
      {
        "text": "VkImageLayout imageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT"
            },
            {
              "kind": "pname",
              "value": "imageView"
            },
            {
              "kind": "pname",
              "value": "imageLayout"
            }
          ],
          "description": " is the layout that the image subresources accessible from {#4#} will be in at the time this descriptor is accessed. {#5#} is used in descriptor updates for types {#0#}, {#1#}, {#2#}, and {#3#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying descriptor image info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkWriteDescriptorSet",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDescriptorSet dstSet",
        "type": "VkDescriptorSet",
        "rawType": "VkDescriptorSet",
        "name": "dstSet",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the destination descriptor set to update."
        }
      },
      {
        "text": "uint32_t dstBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the descriptor binding within that set."
        }
      },
      {
        "text": "uint32_t dstArrayElement",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstArrayElement",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
            },
            {
              "kind": "pname",
              "value": "dstSet"
            },
            {
              "kind": "pname",
              "value": "dstBinding"
            },
            {
              "kind": "pname",
              "value": "dstArrayElement"
            }
          ],
          "description": " is the starting element in that array. If the descriptor binding identified by {#1#} and {#2#} has a descriptor type of {#0#} then {#3#} specifies the starting byte offset within the binding."
        }
      },
      {
        "text": "uint32_t descriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDescriptorType descriptorType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "descriptorType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorType",
        "enumRawType": "VkDescriptorType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDescriptorImageInfo * pImageInfo",
        "type": "VkDescriptorImageInfo",
        "rawType": "const VkDescriptorImageInfo *",
        "name": "pImageInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "descriptorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDescriptorBufferInfo * pBufferInfo",
        "type": "VkDescriptorBufferInfo",
        "rawType": "const VkDescriptorBufferInfo *",
        "name": "pBufferInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "descriptorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkBufferView * pTexelBufferView",
        "type": "VkBufferView",
        "rawType": "const VkBufferView *",
        "name": "pTexelBufferView",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "descriptorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET",
    "extensions": [
      "VkWriteDescriptorSetInlineUniformBlockEXT",
      "VkWriteDescriptorSetAccelerationStructureNV"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying the parameters of a descriptor set write operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCopyDescriptorSet",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDescriptorSet srcSet",
        "type": "VkDescriptorSet",
        "rawType": "VkDescriptorSet",
        "name": "srcSet",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t srcBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t srcArrayElement",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcArrayElement",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
            },
            {
              "kind": "pname",
              "value": "srcSet"
            },
            {
              "kind": "pname",
              "value": "srcBinding"
            },
            {
              "kind": "pname",
              "value": "srcArrayElement"
            }
          ],
          "description": " are the source set, binding, and array element, respectively. If the descriptor binding identified by {#1#} and {#2#} has a descriptor type of {#0#} then {#3#} specifies the starting byte offset within the binding to copy from."
        }
      },
      {
        "text": "VkDescriptorSet dstSet",
        "type": "VkDescriptorSet",
        "rawType": "VkDescriptorSet",
        "name": "dstSet",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t dstBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t dstArrayElement",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstArrayElement",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t descriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying a copy descriptor set operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBufferCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBufferCreateFlagBits",
        "bitmaskRawType": "VkBufferCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkBufferCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional parameters of the buffer."
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the size in bytes of the buffer to be created."
        }
      },
      {
        "text": "VkBufferUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBufferUsageFlagBits",
        "bitmaskRawType": "VkBufferUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkBufferUsageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying allowed usages of the buffer."
        }
      },
      {
        "text": "VkSharingMode sharingMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sharingMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSharingMode",
        "enumRawType": "VkSharingMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSharingMode"
            }
          ],
          "description": " is a {#0#} value specifying the sharing mode of the buffer when it will be accessed by multiple queue families."
        }
      },
      {
        "text": "uint32_t queueFamilyIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pQueueFamilyIndices"
            }
          ],
          "description": " is the number of entries in the {#0#} array."
        }
      },
      {
        "text": "const uint32_t * pQueueFamilyIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pQueueFamilyIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "queueFamilyIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SHARING_MODE_CONCURRENT"
            },
            {
              "kind": "pname",
              "value": "sharingMode"
            }
          ],
          "description": " is a list of queue families that will access this buffer (ignored if {#1#} is not {#0#})."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO",
    "extensions": [
      "VkDedicatedAllocationBufferCreateInfoNV",
      "VkExternalBufferProperties",
      "VkExternalMemoryBufferCreateInfo",
      "VkBufferDeviceAddressCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying the parameters of a newly created buffer object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferViewCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBufferViewCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBufferViewCreateFlags",
        "bitmaskRawType": "VkBufferViewCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBuffer"
            }
          ],
          "description": " is a {#0#} on which the view will be created."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " is a {#0#} describing the format of the data elements in the buffer."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an offset in bytes from the base address of the buffer. Accesses to the buffer view from shaders use addressing that is relative to this starting offset."
        }
      },
      {
        "text": "VkDeviceSize range",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "range",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "pname",
              "value": "range"
            },
            {
              "kind": "pname",
              "value": "offset"
            },
            {
              "kind": "pname",
              "value": "format"
            }
          ],
          "description": " is a size in bytes of the buffer view. If {#2#} is equal to {#0#}, the range from {#3#} to the end of the buffer is used. If {#1#} is used and the remaining size of the buffer is not a multiple of the <<texel-block-size, texel block size>> of {#4#}, the nearest smaller multiple is used."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying parameters of a newly created buffer view"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageSubresource",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkImageAspectFlags"
            }
          ],
          "description": " is a {#0#} selecting the image _aspect_."
        }
      },
      {
        "text": "uint32_t mipLevel",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "mipLevel",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects the mipmap level."
        }
      },
      {
        "text": "uint32_t arrayLayer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "arrayLayer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects the array layer."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying an image subresource"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageSubresourceLayers",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageAspectFlagBits"
            }
          ],
          "description": " is a combination of {#0#}, selecting the color, depth and/or stencil aspects to be copied."
        }
      },
      {
        "text": "uint32_t mipLevel",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "mipLevel",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the mipmap level to copy from."
        }
      },
      {
        "text": "uint32_t baseArrayLayer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "baseArrayLayer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t layerCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "layerCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " are the starting layer and number of layers to copy."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Structure specifying an image subresource layers"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageSubresourceRange",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageAspectFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying which aspect(s) of the image are included in the view."
        }
      },
      {
        "text": "uint32_t baseMipLevel",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "baseMipLevel",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the first mipmap level accessible to the view."
        }
      },
      {
        "text": "uint32_t levelCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "levelCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "baseMipLevel"
            }
          ],
          "description": " is the number of mipmap levels (starting from {#0#}) accessible to the view."
        }
      },
      {
        "text": "uint32_t baseArrayLayer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "baseArrayLayer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the first array layer accessible to the view."
        }
      },
      {
        "text": "uint32_t layerCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "layerCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "baseArrayLayer"
            }
          ],
          "description": " is the number of array layers (starting from {#0#}) accessible to the view."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying an image subresource range"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryBarrier",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAccessFlags srcAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, source access mask>>."
        }
      },
      {
        "text": "VkAccessFlags dstAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, destination access mask>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_BARRIER",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying a global memory barrier"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferMemoryBarrier",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAccessFlags srcAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, source access mask>>."
        }
      },
      {
        "text": "VkAccessFlags dstAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, destination access mask>>."
        }
      },
      {
        "text": "uint32_t srcQueueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcQueueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the source queue family for a <<synchronization-queue-transfers, queue family ownership transfer>>."
        }
      },
      {
        "text": "uint32_t dstQueueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstQueueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the destination queue family for a <<synchronization-queue-transfers, queue family ownership transfer>>."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a handle to the buffer whose backing memory is affected by the barrier."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkBindBufferMemory"
            },
            {
              "kind": "pname",
              "value": "buffer"
            }
          ],
          "description": " is an offset in bytes into the backing memory for {#1#}; this is relative to the base offset as bound to the buffer (see {#0#})."
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "pname",
              "value": "buffer"
            },
            {
              "kind": "pname",
              "value": "offset"
            }
          ],
          "description": " is a size in bytes of the affected area of backing memory for {#1#}, or {#0#} to use the range from {#2#} to the end of the buffer."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying a buffer memory barrier"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageMemoryBarrier",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAccessFlags srcAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, source access mask>>."
        }
      },
      {
        "text": "VkAccessFlags dstAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, destination access mask>>."
        }
      },
      {
        "text": "VkImageLayout oldLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "oldLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the old layout in an <<synchronization-image-layout-transitions, image layout transition>>."
        }
      },
      {
        "text": "VkImageLayout newLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "newLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the new layout in an <<synchronization-image-layout-transitions, image layout transition>>."
        }
      },
      {
        "text": "uint32_t srcQueueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcQueueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the source queue family for a <<synchronization-queue-transfers, queue family ownership transfer>>."
        }
      },
      {
        "text": "uint32_t dstQueueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstQueueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the destination queue family for a <<synchronization-queue-transfers, queue family ownership transfer>>."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a handle to the image affected by this barrier."
        }
      },
      {
        "text": "VkImageSubresourceRange subresourceRange",
        "type": "VkImageSubresourceRange",
        "rawType": "VkImageSubresourceRange",
        "name": "subresourceRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "image"
            }
          ],
          "description": " describes the <<resources-image-views, image subresource range>> within {#0#} that is affected by this barrier."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER",
    "extensions": [
      "VkSampleLocationsInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying the parameters of an image memory barrier"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImageCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageCreateFlagBits",
        "bitmaskRawType": "VkImageCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} describing additional parameters of the image."
        }
      },
      {
        "text": "VkImageType imageType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageType"
            }
          ],
          "description": " is a {#0#} value specifying the basic dimensionality of the image. Layers in array textures do not count as a dimension for the purposes of the image type."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " is a {#0#} describing the format and type of the texel blocks that will be contained in the image."
        }
      },
      {
        "text": "VkExtent3D extent",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "extent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExtent3D"
            }
          ],
          "description": " is a {#0#} describing the number of data elements in each dimension of the base level."
        }
      },
      {
        "text": "uint32_t mipLevels",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "mipLevels",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " describes the number of levels of detail available for minified sampling of the image."
        }
      },
      {
        "text": "uint32_t arrayLayers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "arrayLayers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of layers in the image."
        }
      },
      {
        "text": "VkSampleCountFlagBits samples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSampleCountFlagBits"
            }
          ],
          "description": " is a {#0#} specifying the number of <<primsrast-multisampling,samples per texel>>."
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageTiling"
            }
          ],
          "description": " is a {#0#} value specifying the tiling arrangement of the texel blocks in memory."
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageUsageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} describing the intended usage of the image."
        }
      },
      {
        "text": "VkSharingMode sharingMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sharingMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSharingMode",
        "enumRawType": "VkSharingMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSharingMode"
            }
          ],
          "description": " is a {#0#} value specifying the sharing mode of the image when it will be accessed by multiple queue families."
        }
      },
      {
        "text": "uint32_t queueFamilyIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pQueueFamilyIndices"
            }
          ],
          "description": " is the number of entries in the {#0#} array."
        }
      },
      {
        "text": "const uint32_t * pQueueFamilyIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pQueueFamilyIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "queueFamilyIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SHARING_MODE_CONCURRENT"
            },
            {
              "kind": "pname",
              "value": "sharingMode"
            }
          ],
          "description": " is a list of queue families that will access this image (ignored if {#1#} is not {#0#})."
        }
      },
      {
        "text": "VkImageLayout initialLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "initialLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageLayout"
            },
            {
              "kind": "elink",
              "value": "VkImageLayout"
            }
          ],
          "description": " is a {#0#} value specifying the initial {#1#} of all image subresources of the image. See <<resources-image-layouts,Image Layouts>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO",
    "extensions": [
      "VkDedicatedAllocationImageCreateInfoNV",
      "VkExternalMemoryImageCreateInfoNV",
      "VkExternalMemoryImageCreateInfo",
      "VkImageSwapchainCreateInfoKHR",
      "VkImageFormatListCreateInfoKHR",
      "VkExternalFormatANDROID",
      "VkImageDrmFormatModifierListCreateInfoEXT",
      "VkImageDrmFormatModifierExplicitCreateInfoEXT",
      "VkImageStencilUsageCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying the parameters of a newly created image object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubresourceLayout",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the byte offset from the start of the image or the plane"
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize rowPitch",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "rowPitch",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize arrayPitch",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "arrayPitch",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize depthPitch",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "depthPitch",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying subresource layout"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageViewCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImageViewCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageViewCreateFlagBits",
        "bitmaskRawType": "VkImageViewCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageViewCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} describing additional parameters of the image view."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImage"
            }
          ],
          "description": " is a {#0#} on which the view will be created."
        }
      },
      {
        "text": "VkImageViewType viewType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "viewType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageViewType",
        "enumRawType": "VkImageViewType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageViewType"
            }
          ],
          "description": " is a {#0#} value specifying the type of the image view."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " is a {#0#} describing the format and type used to interpret texel blocks in the image."
        }
      },
      {
        "text": "VkComponentMapping components",
        "type": "VkComponentMapping",
        "rawType": "VkComponentMapping",
        "name": "components",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkComponentMapping"
            }
          ],
          "description": " is a {#0#} specifies a remapping of color components (or of depth or stencil components after they have been converted into color components)."
        }
      },
      {
        "text": "VkImageSubresourceRange subresourceRange",
        "type": "VkImageSubresourceRange",
        "rawType": "VkImageSubresourceRange",
        "name": "subresourceRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageSubresourceRange"
            }
          ],
          "description": " is a {#0#} selecting the set of mipmap levels and array layers to be accessible to the view."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO",
    "extensions": [
      "VkImageViewUsageCreateInfo",
      "VkSamplerYcbcrConversionInfo",
      "VkImageViewASTCDecodeModeEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying parameters of a newly created image view"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferCopy",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkDeviceSize srcOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "srcOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "srcBuffer"
            }
          ],
          "description": " is the starting offset in bytes from the start of {#0#}."
        }
      },
      {
        "text": "VkDeviceSize dstOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "dstOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "dstBuffer"
            }
          ],
          "description": " is the starting offset in bytes from the start of {#0#}."
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of bytes to copy."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Structure specifying a buffer copy operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseMemoryBind",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkDeviceSize resourceOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "resourceOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the offset into the resource."
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the size of the memory region to be bound."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            },
            {
              "kind": "pname",
              "value": "memory"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is the {#0#} object that the range of the resource is bound to. If {#1#} is {#2#}, the range is unbound."
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            },
            {
              "kind": "pname",
              "value": "memory"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is the offset into the {#0#} object to bind the resource range to. If {#1#} is {#2#}, this value is ignored."
        }
      },
      {
        "text": "VkSparseMemoryBindFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSparseMemoryBindFlagBits",
        "bitmaskRawType": "VkSparseMemoryBindFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSparseMemoryBindFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying usage of the binding operation."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying a sparse memory bind operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageMemoryBind",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageSubresource subresource",
        "type": "VkImageSubresource",
        "rawType": "VkImageSubresource",
        "name": "subresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkOffset3D offset",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent3D extent",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "extent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            },
            {
              "kind": "pname",
              "value": "memory"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is the {#0#} object that the sparse image blocks of the image are bound to. If {#1#} is {#2#}, the sparse image blocks are unbound."
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            },
            {
              "kind": "pname",
              "value": "memory"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is an offset into {#0#} object. If {#1#} is {#2#}, this value is ignored."
        }
      },
      {
        "text": "VkSparseMemoryBindFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSparseMemoryBindFlagBits",
        "bitmaskRawType": "VkSparseMemoryBindFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " are sparse memory binding flags."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying sparse image memory bind"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseBufferMemoryBindInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBuffer"
            }
          ],
          "description": " is the {#0#} object to be bound."
        }
      },
      {
        "text": "uint32_t bindCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseMemoryBind"
            },
            {
              "kind": "pname",
              "value": "pBinds"
            }
          ],
          "description": " is the number of {#0#} structures in the {#1#} array."
        }
      },
      {
        "text": "const VkSparseMemoryBind * pBinds",
        "type": "VkSparseMemoryBind",
        "rawType": "const VkSparseMemoryBind *",
        "name": "pBinds",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseMemoryBind"
            }
          ],
          "description": " is a reference to array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying a sparse buffer memory bind operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageOpaqueMemoryBindInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImage"
            }
          ],
          "description": " is the {#0#} object to be bound."
        }
      },
      {
        "text": "uint32_t bindCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseMemoryBind"
            },
            {
              "kind": "pname",
              "value": "pBinds"
            }
          ],
          "description": " is the number of {#0#} structures in the {#1#} array."
        }
      },
      {
        "text": "const VkSparseMemoryBind * pBinds",
        "type": "VkSparseMemoryBind",
        "rawType": "const VkSparseMemoryBind *",
        "name": "pBinds",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseMemoryBind"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying sparse image opaque memory bind info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageMemoryBindInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImage"
            }
          ],
          "description": " is the {#0#} object to be bound"
        }
      },
      {
        "text": "uint32_t bindCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseImageMemoryBind"
            },
            {
              "kind": "pname",
              "value": "pBinds"
            }
          ],
          "description": " is the number of {#0#} structures in {#1#} array"
        }
      },
      {
        "text": "const VkSparseImageMemoryBind * pBinds",
        "type": "VkSparseImageMemoryBind",
        "rawType": "const VkSparseImageMemoryBind *",
        "name": "pBinds",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseImageMemoryBind"
            }
          ],
          "description": " is an array of {#0#} structures"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying sparse image memory bind info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindSparseInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t waitSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of semaphores upon which to wait before executing the sparse binding operations for the batch."
        }
      },
      {
        "text": "const VkSemaphore * pWaitSemaphores",
        "type": "VkSemaphore",
        "rawType": "const VkSemaphore *",
        "name": "pWaitSemaphores",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "waitSemaphoreCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of semaphores upon which to wait on before the sparse binding operations for this batch begin execution. If semaphores to wait on are provided, they define a <<synchronization-semaphores-waiting, semaphore wait operation>>."
        }
      },
      {
        "text": "uint32_t bufferBindCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferBindCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of sparse buffer bindings to perform in the batch."
        }
      },
      {
        "text": "const VkSparseBufferMemoryBindInfo * pBufferBinds",
        "type": "VkSparseBufferMemoryBindInfo",
        "rawType": "const VkSparseBufferMemoryBindInfo *",
        "name": "pBufferBinds",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bufferBindCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseBufferMemoryBindInfo"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "uint32_t imageOpaqueBindCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageOpaqueBindCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of opaque sparse image bindings to perform."
        }
      },
      {
        "text": "const VkSparseImageOpaqueMemoryBindInfo * pImageOpaqueBinds",
        "type": "VkSparseImageOpaqueMemoryBindInfo",
        "rawType": "const VkSparseImageOpaqueMemoryBindInfo *",
        "name": "pImageOpaqueBinds",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "imageOpaqueBindCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseImageOpaqueMemoryBindInfo"
            }
          ],
          "description": " is an array of {#0#} structures, indicating opaque sparse image bindings to perform."
        }
      },
      {
        "text": "uint32_t imageBindCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageBindCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of sparse image bindings to perform."
        }
      },
      {
        "text": "const VkSparseImageMemoryBindInfo * pImageBinds",
        "type": "VkSparseImageMemoryBindInfo",
        "rawType": "const VkSparseImageMemoryBindInfo *",
        "name": "pImageBinds",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "imageBindCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseImageMemoryBindInfo"
            }
          ],
          "description": " is an array of {#0#} structures, indicating sparse image bindings to perform."
        }
      },
      {
        "text": "uint32_t signalSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "signalSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of semaphores to be signaled once the sparse binding operations specified by the structure have completed execution."
        }
      },
      {
        "text": "const VkSemaphore * pSignalSemaphores",
        "type": "VkSemaphore",
        "rawType": "const VkSemaphore *",
        "name": "pSignalSemaphores",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "signalSemaphoreCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of semaphores which will be signaled when the sparse binding operations for this batch have completed execution. If semaphores to be signaled are provided, they define a <<synchronization-semaphores-signaling, semaphore signal operation>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_SPARSE_INFO",
    "extensions": [
      "VkDeviceGroupBindSparseInfo",
      "VkTimelineSemaphoreSubmitInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying a sparse binding operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageCopy",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageSubresourceLayers srcSubresource",
        "type": "VkImageSubresourceLayers",
        "rawType": "VkImageSubresourceLayers",
        "name": "srcSubresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkOffset3D srcOffset",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D",
        "name": "srcOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkImageSubresourceLayers dstSubresource",
        "type": "VkImageSubresourceLayers",
        "rawType": "VkImageSubresourceLayers",
        "name": "dstSubresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageSubresourceLayers"
            }
          ],
          "description": " are {#0#} structures specifying the image subresources of the images used for the source and destination image data, respectively."
        }
      },
      {
        "text": "VkOffset3D dstOffset",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D",
        "name": "dstOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent3D extent",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "extent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Structure specifying an image copy operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageBlit",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageSubresourceLayers srcSubresource",
        "type": "VkImageSubresourceLayers",
        "rawType": "VkImageSubresourceLayers",
        "name": "srcSubresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the subresource to blit from."
        }
      },
      {
        "text": "VkOffset3D srcOffsets [2]",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D [2]",
        "name": "srcOffsets",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "isArray": true,
        "length": "2",
        "isStaticArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkOffset3D"
            },
            {
              "kind": "pname",
              "value": "srcSubresource"
            }
          ],
          "description": " is an array of two {#0#} structures specifying the bounds of the source region within {#1#}."
        }
      },
      {
        "text": "VkImageSubresourceLayers dstSubresource",
        "type": "VkImageSubresourceLayers",
        "rawType": "VkImageSubresourceLayers",
        "name": "dstSubresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the subresource to blit into."
        }
      },
      {
        "text": "VkOffset3D dstOffsets [2]",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D [2]",
        "name": "dstOffsets",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "isArray": true,
        "length": "2",
        "isStaticArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkOffset3D"
            },
            {
              "kind": "pname",
              "value": "dstSubresource"
            }
          ],
          "description": " is an array of two {#0#} structures specifying the bounds of the destination region within {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Structure specifying an image blit operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferImageCopy",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkDeviceSize bufferOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "bufferOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the offset in bytes from the start of the buffer object where the image data is copied from or to."
        }
      },
      {
        "text": "uint32_t bufferRowLength",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferRowLength",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t bufferImageHeight",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferImageHeight",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "imageExtent"
            }
          ],
          "description": " specify in texels a subregion of a larger two- or three-dimensional image in buffer memory, and control the addressing calculations. If either of these values is zero, that aspect of the buffer memory is considered to be tightly packed according to the {#0#}."
        }
      },
      {
        "text": "VkImageSubresourceLayers imageSubresource",
        "type": "VkImageSubresourceLayers",
        "rawType": "VkImageSubresourceLayers",
        "name": "imageSubresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageSubresourceLayers"
            }
          ],
          "description": " is a {#0#} used to specify the specific image subresources of the image used for the source or destination image data."
        }
      },
      {
        "text": "VkOffset3D imageOffset",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D",
        "name": "imageOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent3D imageExtent",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "imageExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "depth"
            }
          ],
          "description": " is the size in texels of the image to copy in {#0#}, {#1#} and {#2#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Structure specifying a buffer image copy operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageResolve",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageSubresourceLayers srcSubresource",
        "type": "VkImageSubresourceLayers",
        "rawType": "VkImageSubresourceLayers",
        "name": "srcSubresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkOffset3D srcOffset",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D",
        "name": "srcOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkImageSubresourceLayers dstSubresource",
        "type": "VkImageSubresourceLayers",
        "rawType": "VkImageSubresourceLayers",
        "name": "dstSubresource",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageSubresourceLayers"
            }
          ],
          "description": " are {#0#} structures specifying the image subresources of the images used for the source and destination image data, respectively. Resolve of depth/stencil images is not supported."
        }
      },
      {
        "text": "VkOffset3D dstOffset",
        "type": "VkOffset3D",
        "rawType": "VkOffset3D",
        "name": "dstOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent3D extent",
        "type": "VkExtent3D",
        "rawType": "VkExtent3D",
        "name": "extent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "depth"
            }
          ],
          "description": " is the size in texels of the source image to resolve in {#0#}, {#1#} and {#2#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Structure specifying an image resolve operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkShaderModuleCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkShaderModuleCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderModuleCreateFlagBits",
        "bitmaskRawType": "VkShaderModuleCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "size_t codeSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "codeSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCode"
            }
          ],
          "description": " is the size, in bytes, of the code pointed to by {#0#}."
        }
      },
      {
        "text": "const uint32_t * pCode",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pCode",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "latexmath:[\\textrm{codeSize} \\over 4]",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint8Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCode"
            }
          ],
          "description": " is a reference to code that is used to create the shader module. The type and format of the code is determined from the content of the memory addressed by {#0#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO",
    "extensions": [
      "VkShaderModuleValidationCacheCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Structure specifying parameters of a newly created shader module"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetLayoutBinding",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t binding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "binding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the binding number of this entry and corresponds to a resource of the same binding number in the shader stages."
        }
      },
      {
        "text": "VkDescriptorType descriptorType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "descriptorType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorType",
        "enumRawType": "VkDescriptorType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDescriptorType"
            }
          ],
          "description": " is a {#0#} specifying which type of resource descriptors are used for this binding."
        }
      },
      {
        "text": "uint32_t descriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
            },
            {
              "kind": "pname",
              "value": "descriptorType"
            },
            {
              "kind": "pname",
              "value": "descriptorCount"
            }
          ],
          "description": " is the number of descriptors contained in the binding, accessed in a shader as an array , except if {#1#} is {#0#} in which case {#2#} is the size in bytes of the inline uniform block"
        }
      },
      {
        "text": "VkShaderStageFlags stageFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stageFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkSampler * pImmutableSamplers",
        "type": "VkSampler",
        "rawType": "const VkSampler *",
        "name": "pImmutableSamplers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "descriptorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying a descriptor set layout binding"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetLayoutCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDescriptorSetLayoutCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDescriptorSetLayoutCreateFlagBits",
        "bitmaskRawType": "VkDescriptorSetLayoutCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDescriptorSetLayoutCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#}"
        }
      },
      {
        "text": "uint32_t bindingCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindingCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDescriptorSetLayoutBinding * pBindings",
        "type": "VkDescriptorSetLayoutBinding",
        "rawType": "const VkDescriptorSetLayoutBinding *",
        "name": "pBindings",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindingCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO",
    "extensions": [
      "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying parameters of a newly created descriptor set layout"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorPoolSize",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkDescriptorType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorType",
        "enumRawType": "VkDescriptorType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of descriptor."
        }
      },
      {
        "text": "uint32_t descriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
            },
            {
              "kind": "pname",
              "value": "type"
            },
            {
              "kind": "pname",
              "value": "descriptorCount"
            }
          ],
          "description": " is the number of descriptors of that type to allocate. If {#1#} is {#0#} then {#2#} is the number of bytes to allocate for descriptors of this type."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying descriptor pool size"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorPoolCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDescriptorPoolCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDescriptorPoolCreateFlagBits",
        "bitmaskRawType": "VkDescriptorPoolCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDescriptorPoolCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying certain supported operations on the pool."
        }
      },
      {
        "text": "uint32_t maxSets",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSets",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the maximum number of descriptor sets that {#0#} be allocated from the pool."
        }
      },
      {
        "text": "uint32_t poolSizeCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "poolSizeCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDescriptorPoolSize * pPoolSizes",
        "type": "VkDescriptorPoolSize",
        "rawType": "const VkDescriptorPoolSize *",
        "name": "pPoolSizes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "poolSizeCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorPoolSize"
            }
          ],
          "description": " is an array of {#0#} structures, each containing a descriptor type and number of descriptors of that type to be allocated in the pool."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO",
    "extensions": [
      "VkDescriptorPoolInlineUniformBlockCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying parameters of a newly created descriptor pool"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetAllocateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDescriptorPool descriptorPool",
        "type": "VkDescriptorPool",
        "rawType": "VkDescriptorPool",
        "name": "descriptorPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the pool which the sets will be allocated from."
        }
      },
      {
        "text": "uint32_t descriptorSetCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorSetCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " determines the number of descriptor sets to be allocated from the pool."
        }
      },
      {
        "text": "const VkDescriptorSetLayout * pSetLayouts",
        "type": "VkDescriptorSetLayout",
        "rawType": "const VkDescriptorSetLayout *",
        "name": "pSetLayouts",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "descriptorSetCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of descriptor set layouts, with each member specifying how the corresponding descriptor set is allocated."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO",
    "extensions": [
      "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying the allocation parameters for descriptor sets"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSpecializationMapEntry",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t constantID",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "constantID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the ID of the specialization constant in SPIR-V."
        }
      },
      {
        "text": "uint32_t offset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the byte offset of the specialization constant value within the supplied data buffer."
        }
      },
      {
        "text": "size_t size",
        "type": "size_t",
        "rawType": "size_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the byte size of the specialization constant value within the supplied data buffer."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying a specialization map entry"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSpecializationInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t mapEntryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "mapEntryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkSpecializationMapEntry * pMapEntries",
        "type": "VkSpecializationMapEntry",
        "rawType": "const VkSpecializationMapEntry *",
        "name": "pMapEntries",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "mapEntryCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSpecializationMapEntry"
            },
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " is an array of {#0#} structures which map constant IDs to offsets in {#1#}."
        }
      },
      {
        "text": "size_t dataSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "dataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pData",
        "type": "void",
        "rawType": "const void *",
        "name": "pData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " contains the actual constant values to specialize with."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying specialization info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineShaderStageCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineShaderStageCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineShaderStageCreateFlagBits",
        "bitmaskRawType": "VkPipelineShaderStageCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineShaderStageCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying how the pipeline shader stage will be generated."
        }
      },
      {
        "text": "VkShaderStageFlagBits stage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkShaderStageFlagBits"
            }
          ],
          "description": " is a {#0#} value specifying a single pipeline stage."
        }
      },
      {
        "text": "VkShaderModule module",
        "type": "VkShaderModule",
        "rawType": "VkShaderModule",
        "name": "module",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkShaderModule"
            }
          ],
          "description": " is a {#0#} object containing the shader for this stage."
        }
      },
      {
        "text": "const char * pName",
        "type": "char",
        "rawType": "const char *",
        "name": "pName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a reference to a string specifying the entry point name of the shader for this stage."
        }
      },
      {
        "text": "const VkSpecializationInfo * pSpecializationInfo",
        "type": "VkSpecializationInfo",
        "rawType": "const VkSpecializationInfo *",
        "name": "pSpecializationInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSpecializationInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure, as described in <<pipelines-specialization-constants,Specialization Constants>>, or <i>null</i>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO",
    "extensions": [
      "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying parameters of a newly created pipeline shader stage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkComputePipelineCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCreateFlagBits",
        "bitmaskRawType": "VkPipelineCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying how the pipeline will be generated."
        }
      },
      {
        "text": "VkPipelineShaderStageCreateInfo stage",
        "type": "VkPipelineShaderStageCreateInfo",
        "rawType": "VkPipelineShaderStageCreateInfo",
        "name": "stage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineShaderStageCreateInfo"
            }
          ],
          "description": " is a {#0#} structure describing the compute shader."
        }
      },
      {
        "text": "VkPipelineLayout layout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the description of binding locations used by both the pipeline and descriptor sets used with the pipeline."
        }
      },
      {
        "text": "VkPipeline basePipelineHandle",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "basePipelineHandle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a pipeline to derive from"
        }
      },
      {
        "text": "int32_t basePipelineIndex",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "basePipelineIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO",
    "extensions": [
      "VkPipelineCreationFeedbackCreateInfoEXT",
      "VkPipelineCompilerControlCreateInfoAMD"
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying parameters of a newly created compute pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkVertexInputBindingDescription",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t binding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "binding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the binding number that this structure describes."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the distance in bytes between two consecutive elements within the buffer."
        }
      },
      {
        "text": "VkVertexInputRate inputRate",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "inputRate",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkVertexInputRate",
        "enumRawType": "VkVertexInputRate",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkVertexInputRate"
            }
          ],
          "description": " is a {#0#} value specifying whether vertex attribute addressing is a function of the vertex index or of the instance index."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Processing",
      "description": "Structure specifying vertex input binding description"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkVertexInputAttributeDescription",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t location",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "location",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the shader binding location number for this attribute."
        }
      },
      {
        "text": "uint32_t binding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "binding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the binding number which this attribute takes its data from."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the size and type of the vertex attribute data."
        }
      },
      {
        "text": "uint32_t offset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a byte offset of this attribute relative to the start of an element in the vertex input binding."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Processing",
      "description": "Structure specifying vertex input attribute description"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineVertexInputStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineVertexInputStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineVertexInputStateCreateFlags",
        "bitmaskRawType": "VkPipelineVertexInputStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t vertexBindingDescriptionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexBindingDescriptionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pVertexBindingDescriptions"
            }
          ],
          "description": " is the number of vertex binding descriptions provided in {#0#}."
        }
      },
      {
        "text": "const VkVertexInputBindingDescription * pVertexBindingDescriptions",
        "type": "VkVertexInputBindingDescription",
        "rawType": "const VkVertexInputBindingDescription *",
        "name": "pVertexBindingDescriptions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "vertexBindingDescriptionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkVertexInputBindingDescription"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "uint32_t vertexAttributeDescriptionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexAttributeDescriptionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pVertexAttributeDescriptions"
            }
          ],
          "description": " is the number of vertex attribute descriptions provided in {#0#}."
        }
      },
      {
        "text": "const VkVertexInputAttributeDescription * pVertexAttributeDescriptions",
        "type": "VkVertexInputAttributeDescription",
        "rawType": "const VkVertexInputAttributeDescription *",
        "name": "pVertexAttributeDescriptions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "vertexAttributeDescriptionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkVertexInputAttributeDescription"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO",
    "extensions": [
      "VkPipelineVertexInputDivisorStateCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Processing",
      "description": "Structure specifying parameters of a newly created pipeline vertex input state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineInputAssemblyStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineInputAssemblyStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineInputAssemblyStateCreateFlags",
        "bitmaskRawType": "VkPipelineInputAssemblyStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkPrimitiveTopology topology",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "topology",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPrimitiveTopology",
        "enumRawType": "VkPrimitiveTopology",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPrimitiveTopology"
            }
          ],
          "description": " is a {#0#} defining the primitive topology, as described below."
        }
      },
      {
        "text": "VkBool32 primitiveRestartEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "primitiveRestartEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdDrawIndexed"
            },
            {
              "kind": "flink",
              "value": "vkCmdDrawIndexedIndirect"
            },
            {
              "kind": "fname",
              "value": "vkCmdBindIndexBuffer"
            },
            {
              "kind": "ename",
              "value": "VK_INDEX_TYPE_UINT32"
            },
            {
              "kind": "ename",
              "value": "VK_INDEX_TYPE_UINT8_EXT"
            },
            {
              "kind": "pname",
              "value": "indexType"
            },
            {
              "kind": "pname",
              "value": "indexType"
            }
          ],
          "description": " controls whether a special vertex index value is treated as restarting the assembly of primitives. This enable only applies to indexed draws ({#0#} and {#1#}), and the special index value is either 0xFFFFFFFF when the {#5#} parameter of {#2#} is equal to {#3#}, 0xFF when {#6#} is equal to {#4#},"
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Structure specifying parameters of a newly created pipeline input assembly state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineTessellationStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineTessellationStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineTessellationStateCreateFlags",
        "bitmaskRawType": "VkPipelineTessellationStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t patchControlPoints",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "patchControlPoints",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " number of control reference per patch."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO",
    "extensions": [
      "VkPipelineTessellationDomainOriginStateCreateInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "Tessellation",
      "description": "Structure specifying parameters of a newly created pipeline tessellation state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineViewportStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineViewportStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineViewportStateCreateFlags",
        "bitmaskRawType": "VkPipelineViewportStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t viewportCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of viewports used by the pipeline."
        }
      },
      {
        "text": "const VkViewport * pViewports",
        "type": "VkViewport",
        "rawType": "const VkViewport *",
        "name": "pViewports",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "viewportCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkViewport"
            }
          ],
          "description": " is an array of {#0#} structures, defining the viewport transforms. If the viewport state is dynamic, this member is ignored."
        }
      },
      {
        "text": "uint32_t scissorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "scissorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is the number of <<fragops-scissor,scissors>> and {#0#} match the number of viewports."
        }
      },
      {
        "text": "const VkRect2D * pScissors",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pScissors",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "scissorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRect2D"
            }
          ],
          "description": " is an array of {#0#} structures defining the rectangular bounds of the scissor for the corresponding viewport. If the scissor state is dynamic, this member is ignored."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO",
    "extensions": [
      "VkPipelineViewportWScalingStateCreateInfoNV",
      "VkPipelineViewportSwizzleStateCreateInfoNV",
      "VkPipelineViewportExclusiveScissorStateCreateInfoNV",
      "VkPipelineViewportShadingRateImageStateCreateInfoNV",
      "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV"
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Structure specifying parameters of a newly created pipeline viewport state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineRasterizationStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineRasterizationStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineRasterizationStateCreateFlags",
        "bitmaskRawType": "VkPipelineRasterizationStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkBool32 depthClampEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthClampEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPipelineRasterizationDepthClipStateCreateInfoEXT"
            },
            {
              "kind": "slink",
              "value": "VkPipelineRasterizationDepthClipStateCreateInfoEXT"
            }
          ],
          "description": " controls whether to clamp the fragment's depth values as described in <<fragops-depth,Depth Test>>. If the pipeline is not created with {#1#} present then enabling depth clamp will also disable clipping primitives to the z planes of the frustrum as described in <<vertexpostproc-clipping, Primitive Clipping>>. Otherwise depth clipping is controlled by the state set in {#0#}."
        }
      },
      {
        "text": "VkBool32 rasterizerDiscardEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "rasterizerDiscardEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPolygonMode polygonMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "polygonMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPolygonMode",
        "enumRawType": "VkPolygonMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkCullModeFlags cullMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "cullMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCullModeFlagBits",
        "bitmaskRawType": "VkCullModeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkFrontFace frontFace",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "frontFace",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFrontFace",
        "enumRawType": "VkFrontFace",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 depthBiasEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthBiasEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float depthBiasConstantFactor",
        "type": "float",
        "rawType": "float",
        "name": "depthBiasConstantFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float depthBiasClamp",
        "type": "float",
        "rawType": "float",
        "name": "depthBiasClamp",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float depthBiasSlopeFactor",
        "type": "float",
        "rawType": "float",
        "name": "depthBiasSlopeFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float lineWidth",
        "type": "float",
        "rawType": "float",
        "name": "lineWidth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO",
    "extensions": [
      "VkPipelineRasterizationStateRasterizationOrderAMD",
      "VkPipelineRasterizationConservativeStateCreateInfoEXT",
      "VkPipelineRasterizationStateStreamCreateInfoEXT",
      "VkPipelineRasterizationDepthClipStateCreateInfoEXT",
      "VkPipelineRasterizationLineStateCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying parameters of a newly created pipeline rasterization state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineMultisampleStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineMultisampleStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineMultisampleStateCreateFlags",
        "bitmaskRawType": "VkPipelineMultisampleStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkSampleCountFlagBits rasterizationSamples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "rasterizationSamples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSampleCountFlagBits"
            }
          ],
          "description": " is a {#0#} specifying the number of samples used in rasterization."
        }
      },
      {
        "text": "VkBool32 sampleShadingEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sampleShadingEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " {#0#} be used to enable <<primsrast-sampleshading,Sample Shading>>."
        }
      },
      {
        "text": "float minSampleShading",
        "type": "float",
        "rawType": "float",
        "name": "minSampleShading",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "sampleShadingEnable"
            }
          ],
          "description": " specifies a minimum fraction of sample shading if {#1#} is set to {#0#}."
        }
      },
      {
        "text": "const VkSampleMask * pSampleMask",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pSampleMask",
        "isConstant": true,
        "dereferenceCount": 1,
        "baseType": "VkSampleMask",
        "isArray": true,
        "length": "latexmath:[\\lceil{\\mathit{rasterizationSamples} \\over 32}\\rceil]",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a bitmask of static coverage information that is ANDed with the coverage information generated during rasterization, as described in <<fragops-samplemask,Sample Mask>>."
        }
      },
      {
        "text": "VkBool32 alphaToCoverageEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "alphaToCoverageEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether a temporary coverage value is generated based on the alpha component of the fragment's first color output as specified in the <<fragops-covg,Multisample Coverage>> section."
        }
      },
      {
        "text": "VkBool32 alphaToOneEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "alphaToOneEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether the alpha component of the fragment's first color output is replaced with one as described in <<fragops-covg,Multisample Coverage>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO",
    "extensions": [
      "VkPipelineCoverageToColorStateCreateInfoNV",
      "VkPipelineSampleLocationsStateCreateInfoEXT",
      "VkPipelineCoverageModulationStateCreateInfoNV",
      "VkPipelineCoverageReductionStateCreateInfoNV"
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying parameters of a newly created pipeline multisample state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineColorBlendAttachmentState",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkBool32 blendEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "blendEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether blending is enabled for the corresponding color attachment. If blending is not enabled, the source fragment's color for that attachment is passed through unmodified."
        }
      },
      {
        "text": "VkBlendFactor srcColorBlendFactor",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcColorBlendFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBlendFactor",
        "enumRawType": "VkBlendFactor",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects which blend factor is used to determine the source factors [eq]#(S~r~,S~g~,S~b~)#."
        }
      },
      {
        "text": "VkBlendFactor dstColorBlendFactor",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstColorBlendFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBlendFactor",
        "enumRawType": "VkBlendFactor",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects which blend factor is used to determine the destination factors [eq]#(D~r~,D~g~,D~b~)#."
        }
      },
      {
        "text": "VkBlendOp colorBlendOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "colorBlendOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBlendOp",
        "enumRawType": "VkBlendOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects which blend operation is used to calculate the RGB values to write to the color attachment."
        }
      },
      {
        "text": "VkBlendFactor srcAlphaBlendFactor",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcAlphaBlendFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBlendFactor",
        "enumRawType": "VkBlendFactor",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects which blend factor is used to determine the source factor [eq]#S~a~#."
        }
      },
      {
        "text": "VkBlendFactor dstAlphaBlendFactor",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstAlphaBlendFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBlendFactor",
        "enumRawType": "VkBlendFactor",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects which blend factor is used to determine the destination factor [eq]#D~a~#."
        }
      },
      {
        "text": "VkBlendOp alphaBlendOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "alphaBlendOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBlendOp",
        "enumRawType": "VkBlendOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects which blend operation is use to calculate the alpha values to write to the color attachment."
        }
      },
      {
        "text": "VkColorComponentFlags colorWriteMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "colorWriteMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkColorComponentFlagBits",
        "bitmaskRawType": "VkColorComponentFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkColorComponentFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying which of the R, G, B, and/or A components are enabled for writing, as described for the <<framebuffer-color-write-mask,Color Write Mask>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "The Framebuffer",
      "description": "Structure specifying a pipeline color blend attachment state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineColorBlendStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineColorBlendStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineColorBlendStateCreateFlags",
        "bitmaskRawType": "VkPipelineColorBlendStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkBool32 logicOpEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "logicOpEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether to apply <<framebuffer-logicop, Logical Operations>>."
        }
      },
      {
        "text": "VkLogicOp logicOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "logicOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkLogicOp",
        "enumRawType": "VkLogicOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects which logical operation to apply."
        }
      },
      {
        "text": "uint32_t attachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkPipelineColorBlendAttachmentState"
            },
            {
              "kind": "pname",
              "value": "pAttachments"
            },
            {
              "kind": "pname",
              "value": "colorAttachmentCount"
            }
          ],
          "description": " is the number of {#1#} elements in {#2#}. This value {#0#} equal the {#3#} for the subpass in which this pipeline is used."
        }
      },
      {
        "text": "const VkPipelineColorBlendAttachmentState * pAttachments",
        "type": "VkPipelineColorBlendAttachmentState",
        "rawType": "const VkPipelineColorBlendAttachmentState *",
        "name": "pAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "attachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float blendConstants [4]",
        "type": "float",
        "rawType": "float [4]",
        "name": "blendConstants",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "4",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is an array of four values used as the R, G, B, and A components of the blend constant that are used in blending, depending on the <<framebuffer-blendfactors,blend factor>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO",
    "extensions": [
      "VkPipelineColorBlendAdvancedStateCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "The Framebuffer",
      "description": "Structure specifying parameters of a newly created pipeline color blend state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineDynamicStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineDynamicStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineDynamicStateCreateFlags",
        "bitmaskRawType": "VkPipelineDynamicStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t dynamicStateCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dynamicStateCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDynamicStates"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkDynamicState * pDynamicStates",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pDynamicStates",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkDynamicState",
        "enumRawType": "const VkDynamicState *",
        "isArray": true,
        "length": "dynamicStateCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDynamicState"
            }
          ],
          "description": " is an array of {#0#} values specifying which pieces of pipeline state will use the values from dynamic state commands rather than from pipeline state creation info."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying parameters of a newly created pipeline dynamic state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkStencilOpState",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStencilOp failOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "failOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStencilOp",
        "enumRawType": "VkStencilOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkStencilOp"
            }
          ],
          "description": " is a {#0#} value specifying the action performed on samples that fail the stencil test."
        }
      },
      {
        "text": "VkStencilOp passOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "passOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStencilOp",
        "enumRawType": "VkStencilOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkStencilOp"
            }
          ],
          "description": " is a {#0#} value specifying the action performed on samples that pass both the depth and stencil tests."
        }
      },
      {
        "text": "VkStencilOp depthFailOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "depthFailOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStencilOp",
        "enumRawType": "VkStencilOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkStencilOp"
            }
          ],
          "description": " is a {#0#} value specifying the action performed on samples that pass the stencil test and fail the depth test."
        }
      },
      {
        "text": "VkCompareOp compareOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compareOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCompareOp",
        "enumRawType": "VkCompareOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCompareOp"
            }
          ],
          "description": " is a {#0#} value specifying the comparison operator used in the stencil test."
        }
      },
      {
        "text": "uint32_t compareMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "compareMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects the bits of the unsigned integer stencil values participating in the stencil test."
        }
      },
      {
        "text": "uint32_t writeMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "writeMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " selects the bits of the unsigned integer stencil values updated by the stencil test in the stencil framebuffer attachment."
        }
      },
      {
        "text": "uint32_t reference",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "reference",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number reference value that is used in the unsigned stencil comparison."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying stencil operation state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineDepthStencilStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineDepthStencilStateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineDepthStencilStateCreateFlags",
        "bitmaskRawType": "VkPipelineDepthStencilStateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkBool32 depthTestEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthTestEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether <<fragops-depth,depth testing>> is enabled."
        }
      },
      {
        "text": "VkBool32 depthWriteEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthWriteEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "pname",
              "value": "depthTestEnable"
            },
            {
              "kind": "pname",
              "value": "depthTestEnable"
            }
          ],
          "description": " controls whether <<fragops-depth-write,depth writes>> are enabled when {#2#} is {#0#}. Depth writes are always disabled when {#3#} is {#1#}."
        }
      },
      {
        "text": "VkCompareOp depthCompareOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "depthCompareOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCompareOp",
        "enumRawType": "VkCompareOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the comparison operator used in the <<fragops-depth,depth test>>."
        }
      },
      {
        "text": "VkBool32 depthBoundsTestEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthBoundsTestEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether <<fragops-dbt,depth bounds testing>> is enabled."
        }
      },
      {
        "text": "VkBool32 stencilTestEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stencilTestEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether <<fragops-stencil,stencil testing>> is enabled."
        }
      },
      {
        "text": "VkStencilOpState front",
        "type": "VkStencilOpState",
        "rawType": "VkStencilOpState",
        "name": "front",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkStencilOpState back",
        "type": "VkStencilOpState",
        "rawType": "VkStencilOpState",
        "name": "back",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " control the parameters of the <<fragops-stencil,stencil test>>."
        }
      },
      {
        "text": "float minDepthBounds",
        "type": "float",
        "rawType": "float",
        "name": "minDepthBounds",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float maxDepthBounds",
        "type": "float",
        "rawType": "float",
        "name": "maxDepthBounds",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " define the range of values used in the <<fragops-dbt,depth bounds test>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying parameters of a newly created pipeline depth stencil state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkGraphicsPipelineCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCreateFlagBits",
        "bitmaskRawType": "VkPipelineCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying how the pipeline will be generated."
        }
      },
      {
        "text": "uint32_t stageCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stageCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineShaderStageCreateInfo"
            }
          ],
          "description": " {#0#} structures describing the set of the shader stages to be included in the graphics pipeline."
        }
      },
      {
        "text": "const VkPipelineShaderStageCreateInfo * pStages",
        "type": "VkPipelineShaderStageCreateInfo",
        "rawType": "const VkPipelineShaderStageCreateInfo *",
        "name": "pStages",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "stageCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " array."
        }
      },
      {
        "text": "const VkPipelineVertexInputStateCreateInfo * pVertexInputState",
        "type": "VkPipelineVertexInputStateCreateInfo",
        "rawType": "const VkPipelineVertexInputStateCreateInfo *",
        "name": "pVertexInputState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineVertexInputStateCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure. It is ignored if the pipeline includes a mesh shader stage."
        }
      },
      {
        "text": "const VkPipelineInputAssemblyStateCreateInfo * pInputAssemblyState",
        "type": "VkPipelineInputAssemblyStateCreateInfo",
        "rawType": "const VkPipelineInputAssemblyStateCreateInfo *",
        "name": "pInputAssemblyState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkPipelineTessellationStateCreateInfo * pTessellationState",
        "type": "VkPipelineTessellationStateCreateInfo",
        "rawType": "const VkPipelineTessellationStateCreateInfo *",
        "name": "pTessellationState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkPipelineViewportStateCreateInfo * pViewportState",
        "type": "VkPipelineViewportStateCreateInfo",
        "rawType": "const VkPipelineViewportStateCreateInfo *",
        "name": "pViewportState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkPipelineRasterizationStateCreateInfo * pRasterizationState",
        "type": "VkPipelineRasterizationStateCreateInfo",
        "rawType": "const VkPipelineRasterizationStateCreateInfo *",
        "name": "pRasterizationState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkPipelineMultisampleStateCreateInfo * pMultisampleState",
        "type": "VkPipelineMultisampleStateCreateInfo",
        "rawType": "const VkPipelineMultisampleStateCreateInfo *",
        "name": "pMultisampleState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkPipelineDepthStencilStateCreateInfo * pDepthStencilState",
        "type": "VkPipelineDepthStencilStateCreateInfo",
        "rawType": "const VkPipelineDepthStencilStateCreateInfo *",
        "name": "pDepthStencilState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkPipelineColorBlendStateCreateInfo * pColorBlendState",
        "type": "VkPipelineColorBlendStateCreateInfo",
        "rawType": "const VkPipelineColorBlendStateCreateInfo *",
        "name": "pColorBlendState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkPipelineDynamicStateCreateInfo * pDynamicState",
        "type": "VkPipelineDynamicStateCreateInfo",
        "rawType": "const VkPipelineDynamicStateCreateInfo *",
        "name": "pDynamicState",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPipelineLayout layout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkRenderPass renderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass",
        "name": "renderPass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t subpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPipeline basePipelineHandle",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "basePipelineHandle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "int32_t basePipelineIndex",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "basePipelineIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO",
    "extensions": [
      "VkPipelineDiscardRectangleStateCreateInfoEXT",
      "VkPipelineRepresentativeFragmentTestStateCreateInfoNV",
      "VkPipelineCreationFeedbackCreateInfoEXT",
      "VkPipelineCompilerControlCreateInfoAMD"
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying parameters of a newly created graphics pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineCacheCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCacheCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCacheCreateFlags",
        "bitmaskRawType": "VkPipelineCacheCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "size_t initialDataSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "initialDataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pInitialData",
        "type": "void",
        "rawType": "const void *",
        "name": "pInitialData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "initialDataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "initialDataSize"
            },
            {
              "kind": "pname",
              "value": "pInitialData"
            }
          ],
          "description": " is a reference to previously retrieved pipeline cache data. If the pipeline cache data is incompatible (as defined below) with the device, the pipeline cache will be initially empty. If {#0#} is zero, {#1#} is ignored."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying parameters of a newly created pipeline cache"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPushConstantRange",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkShaderStageFlags stageFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stageFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "undefined",
              "value": ""
            }
          ],
          "description": " is a set of stage flags describing the shader stages that will access a range of push constants. If a particular stage is not included in the range, then accessing members of that range of push constants from the corresponding shader stage will return {#0#} values."
        }
      },
      {
        "text": "uint32_t offset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t size",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "offset"
            },
            {
              "kind": "pname",
              "value": "size"
            }
          ],
          "description": " are the start offset and size, respectively, consumed by the range. Both {#1#} and {#2#} are in units of bytes and {#0#} be a multiple of 4. The layout of the push constant variables is specified in the shader."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying a push constant range"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineLayoutCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineLayoutCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineLayoutCreateFlags",
        "bitmaskRawType": "VkPipelineLayoutCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t setLayoutCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "setLayoutCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of descriptor sets included in the pipeline layout."
        }
      },
      {
        "text": "const VkDescriptorSetLayout * pSetLayouts",
        "type": "VkDescriptorSetLayout",
        "rawType": "const VkDescriptorSetLayout *",
        "name": "pSetLayouts",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "setLayoutCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDescriptorSetLayout"
            }
          ],
          "description": " is an array of {#0#} objects."
        }
      },
      {
        "text": "uint32_t pushConstantRangeCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pushConstantRangeCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of push constant ranges included in the pipeline layout."
        }
      },
      {
        "text": "const VkPushConstantRange * pPushConstantRanges",
        "type": "VkPushConstantRange",
        "rawType": "const VkPushConstantRange *",
        "name": "pPushConstantRanges",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pushConstantRangeCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkPushConstantRange"
            }
          ],
          "description": " is an array of {#1#} structures defining a set of push constant ranges for use in a single pipeline layout. In addition to descriptor set layouts, a pipeline layout also describes how many push constants {#0#} be accessed by each stage of the pipeline.+[NOTE].Note====Push constants represent a high speed path to modify constant data inpipelines that is expected to outperform memory-backed resource updates.===="
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying the parameters of a newly created pipeline layout object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSamplerCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSamplerCreateFlagBits",
        "bitmaskRawType": "VkSamplerCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSamplerCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} describing additional parameters of the sampler."
        }
      },
      {
        "text": "VkFilter magFilter",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "magFilter",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFilter",
        "enumRawType": "VkFilter",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFilter"
            }
          ],
          "description": " is a {#0#} value specifying the magnification filter to apply to lookups."
        }
      },
      {
        "text": "VkFilter minFilter",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "minFilter",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFilter",
        "enumRawType": "VkFilter",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFilter"
            }
          ],
          "description": " is a {#0#} value specifying the minification filter to apply to lookups."
        }
      },
      {
        "text": "VkSamplerMipmapMode mipmapMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "mipmapMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerMipmapMode",
        "enumRawType": "VkSamplerMipmapMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSamplerMipmapMode"
            }
          ],
          "description": " is a {#0#} value specifying the mipmap filter to apply to lookups."
        }
      },
      {
        "text": "VkSamplerAddressMode addressModeU",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "addressModeU",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerAddressMode",
        "enumRawType": "VkSamplerAddressMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSamplerAddressMode"
            }
          ],
          "description": " is a {#0#} value specifying the addressing mode for outside [0..1] range for U coordinate."
        }
      },
      {
        "text": "VkSamplerAddressMode addressModeV",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "addressModeV",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerAddressMode",
        "enumRawType": "VkSamplerAddressMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSamplerAddressMode"
            }
          ],
          "description": " is a {#0#} value specifying the addressing mode for outside [0..1] range for V coordinate."
        }
      },
      {
        "text": "VkSamplerAddressMode addressModeW",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "addressModeW",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerAddressMode",
        "enumRawType": "VkSamplerAddressMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSamplerAddressMode"
            }
          ],
          "description": " is a {#0#} value specifying the addressing mode for outside [0..1] range for W coordinate."
        }
      },
      {
        "text": "float mipLodBias",
        "type": "float",
        "rawType": "float",
        "name": "mipLodBias",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the bias to be added to mipmap LOD (level-of-detail) calculation and bias provided by image sampling functions in SPIR-V, as described in the <<textures-level-of-detail-operation, Level-of-Detail Operation>> section."
        }
      },
      {
        "text": "VkBool32 anisotropyEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "anisotropyEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float maxAnisotropy",
        "type": "float",
        "rawType": "float",
        "name": "maxAnisotropy",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "pname",
              "value": "anisotropyEnable"
            },
            {
              "kind": "pname",
              "value": "anisotropyEnable"
            },
            {
              "kind": "pname",
              "value": "maxAnisotropy"
            }
          ],
          "description": " is the anisotropy value clamp used by the sampler when {#2#} is {#0#}. If {#3#} is {#1#}, {#4#} is ignored."
        }
      },
      {
        "text": "VkBool32 compareEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "compareEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkCompareOp compareOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compareOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCompareOp",
        "enumRawType": "VkCompareOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCompareOp"
            }
          ],
          "description": " is a {#0#} value specifying the comparison function to apply to fetched data before filtering as described in the <<textures-depth-compare-operation, Depth Compare Operation>> section."
        }
      },
      {
        "text": "float minLod",
        "type": "float",
        "rawType": "float",
        "name": "minLod",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float maxLod",
        "type": "float",
        "rawType": "float",
        "name": "maxLod",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " are the values used to clamp the computed LOD value, as described in the <<textures-level-of-detail-operation, Level-of-Detail Operation>> section."
        }
      },
      {
        "text": "VkBorderColor borderColor",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "borderColor",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBorderColor",
        "enumRawType": "VkBorderColor",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkBorderColor"
            }
          ],
          "description": " is a {#0#} value specifying the predefined border color to use."
        }
      },
      {
        "text": "VkBool32 unnormalizedCoordinates",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "unnormalizedCoordinates",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "unnormalizedCoordinates"
            }
          ],
          "description": " controls whether to use unnormalized or normalized texel coordinates to address texels of the image. When set to {#0#}, the range of the image coordinates used to lookup the texel is in the range of zero to the image dimensions for x, y and z. When set to {#1#} the range of image coordinates is zero to one.+When {#3#} is {#2#}, images the sampler isused with in the shader have the following requirements:+"
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO",
    "extensions": [
      "VkSamplerYcbcrConversionInfo",
      "VkSamplerReductionModeCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Structure specifying parameters of a newly created sampler"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCommandPoolCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkCommandPoolCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCommandPoolCreateFlagBits",
        "bitmaskRawType": "VkCommandPoolCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCommandPoolCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} indicating usage behavior for the pool and command buffers allocated from it."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " designates a queue family as described in section <<devsandqueues-queueprops,Queue Family Properties>>. All command buffers allocated from this command pool {#0#} be submitted on queues from the same queue family."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying parameters of a newly created command pool"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCommandBufferAllocateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkCommandPool commandPool",
        "type": "VkCommandPool",
        "rawType": "VkCommandPool",
        "name": "commandPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the command pool from which the command buffers are allocated."
        }
      },
      {
        "text": "VkCommandBufferLevel level",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "level",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCommandBufferLevel",
        "enumRawType": "VkCommandBufferLevel",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCommandBufferLevel"
            }
          ],
          "description": " is a {#0#} value specifying the command buffer level."
        }
      },
      {
        "text": "uint32_t commandBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "commandBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of command buffers to allocate from the pool."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying the allocation parameters for command buffer object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCommandBufferInheritanceInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkRenderPass renderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass",
        "name": "renderPass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "slink",
              "value": "VkRenderPass"
            },
            {
              "kind": "pname",
              "value": "renderPass"
            }
          ],
          "description": " is a {#3#} object defining which render passes the {#1#} will be <<renderpass-compatibility, compatible>> with and {#0#} be executed within. If the {#2#} will not be executed within a render pass instance, {#4#} is ignored."
        }
      },
      {
        "text": "uint32_t subpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "pname",
              "value": "subpass"
            }
          ],
          "description": " is the index of the subpass within the render pass instance that the {#0#} will be executed within. If the {#1#} will not be executed within a render pass instance, {#2#} is ignored."
        }
      },
      {
        "text": "VkFramebuffer framebuffer",
        "type": "VkFramebuffer",
        "rawType": "VkFramebuffer",
        "name": "framebuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "slink",
              "value": "VkFramebuffer"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " optionally refers to the {#4#} object that the {#2#} will be rendering to if it is executed within a render pass instance. It {#0#} be {#5#} if the framebuffer is not known, or if the {#3#} will not be executed within a render pass instance.+[NOTE].Note====Specifying the exact framebuffer that the secondary command buffer will beexecuted with {#1#} result in better performance at command buffer executiontime.===="
        }
      },
      {
        "text": "VkBool32 occlusionQueryEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "occlusionQueryEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " specifies whether the command buffer {#0#} be executed while an occlusion query is active in the primary command buffer. If this is {#3#}, then this command buffer {#1#} be executed whether the primary command buffer has an occlusion query active or not. If this is {#4#}, then the primary command buffer {#2#} not have an occlusion query active."
        }
      },
      {
        "text": "VkQueryControlFlags queryFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "queryFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryControlFlagBits",
        "bitmaskRawType": "VkQueryControlFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_QUERY_CONTROL_PRECISE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUERY_CONTROL_PRECISE_BIT"
            }
          ],
          "description": " specifies the query flags that {#0#} be used by an active occlusion query in the primary command buffer when this secondary command buffer is executed. If this value includes the {#3#} bit, then the active query {#1#} return boolean results or actual sample counts. If this bit is not set, then the active query {#2#} not use the {#4#} bit."
        }
      },
      {
        "text": "VkQueryPipelineStatisticFlags pipelineStatistics",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineStatistics",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryPipelineStatisticFlagBits",
        "bitmaskRawType": "VkQueryPipelineStatisticFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "elink",
              "value": "VkQueryPipelineStatisticFlagBits"
            }
          ],
          "description": " is a bitmask of {#3#} specifying the set of pipeline statistics that {#0#} be counted by an active query in the primary command buffer when this secondary command buffer is executed. If this value includes a given bit, then this command buffer {#1#} be executed whether the primary command buffer has a pipeline statistics query active that includes this bit or not. If this value excludes a given bit, then the active pipeline statistics query {#2#} not be from a query pool that counts that statistic."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO",
    "extensions": [
      "VkCommandBufferInheritanceConditionalRenderingInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying command buffer inheritance info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCommandBufferBeginInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkCommandBufferUsageFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCommandBufferUsageFlagBits",
        "bitmaskRawType": "VkCommandBufferUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCommandBufferUsageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying usage behavior for the command buffer."
        }
      },
      {
        "text": "const VkCommandBufferInheritanceInfo * pInheritanceInfo",
        "type": "VkCommandBufferInheritanceInfo",
        "rawType": "const VkCommandBufferInheritanceInfo *",
        "name": "pInheritanceInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkCommandBufferInheritanceInfo"
            },
            {
              "kind": "pname",
              "value": "commandBuffer"
            }
          ],
          "description": " is a reference to a {#0#} structure, used if {#1#} is a secondary command buffer. If this is a primary command buffer, then this value is ignored."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO",
    "extensions": [
      "VkDeviceGroupCommandBufferBeginInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying a command buffer begin operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassBeginInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkRenderPass renderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass",
        "name": "renderPass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the render pass to begin an instance of."
        }
      },
      {
        "text": "VkFramebuffer framebuffer",
        "type": "VkFramebuffer",
        "rawType": "VkFramebuffer",
        "name": "framebuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the framebuffer containing the attachments that are used with the render pass."
        }
      },
      {
        "text": "VkRect2D renderArea",
        "type": "VkRect2D",
        "rawType": "VkRect2D",
        "name": "renderArea",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the render area that is affected by the render pass instance, and is described in more detail below."
        }
      },
      {
        "text": "uint32_t clearValueCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "clearValueCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkClearValue"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_LOAD_OP_CLEAR"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_LOAD_OP_CLEAR"
            },
            {
              "kind": "pname",
              "value": "loadOp"
            },
            {
              "kind": "pname",
              "value": "stencilLoadOp"
            },
            {
              "kind": "pname",
              "value": "pClearValues"
            }
          ],
          "description": " {#0#} structures that contains clear values for each attachment, if the attachment uses a {#3#} value of {#1#} or if the attachment has a depth/stencil format and uses a {#4#} value of {#2#}. The array is indexed by attachment number. Only elements corresponding to cleared attachments are used. Other elements of {#5#} are ignored."
        }
      },
      {
        "text": "const VkClearValue * pClearValues",
        "type": "VkClearValue",
        "rawType": "const VkClearValue *",
        "name": "pClearValues",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "clearValueCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO",
    "extensions": [
      "VkDeviceGroupRenderPassBeginInfo",
      "VkRenderPassSampleLocationsBeginInfoEXT",
      "VkRenderPassAttachmentBeginInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying render pass begin info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkClearDepthStencilValue",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "float depth",
        "type": "float",
        "rawType": "float",
        "name": "depth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the clear value for the depth aspect of the depth/stencil attachment. It is a floating-point value which is automatically converted to the attachment's format."
        }
      },
      {
        "text": "uint32_t stencil",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stencil",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the clear value for the stencil aspect of the depth/stencil attachment. It is a 32-bit integer value which is converted to the attachment's format by taking the appropriate number of LSBs."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Structure specifying a clear depth stencil value"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkClearAttachment",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a mask selecting the color, depth and/or stencil aspects of the attachment to be cleared."
        }
      },
      {
        "text": "uint32_t colorAttachment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "colorAttachment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassDescription"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_ASPECT_COLOR_BIT"
            },
            {
              "kind": "pname",
              "value": "aspectMask"
            },
            {
              "kind": "pname",
              "value": "pColorAttachments"
            }
          ],
          "description": " is only meaningful if {#1#} is set in {#2#}, in which case it is an index to the {#3#} array in the {#0#} structure of the current subpass which selects the color attachment to clear."
        }
      },
      {
        "text": "VkClearValue clearValue",
        "type": "VkClearValue",
        "rawType": "VkClearValue",
        "name": "clearValue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the color or depth/stencil value to clear the attachment to, as described in <<clears-values,Clear Values>> below."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Structure specifying a clear attachment"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAttachmentDescription",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkAttachmentDescriptionFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAttachmentDescriptionFlagBits",
        "bitmaskRawType": "VkAttachmentDescriptionFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentDescriptionFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional properties of the attachment."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " is a {#0#} value specifying the format of the image view that will be used for the attachment."
        }
      },
      {
        "text": "VkSampleCountFlagBits samples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSampleCountFlagBits"
            }
          ],
          "description": " is the number of samples of the image as defined in {#0#}."
        }
      },
      {
        "text": "VkAttachmentLoadOp loadOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "loadOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentLoadOp",
        "enumRawType": "VkAttachmentLoadOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentLoadOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of color and depth components of the attachment are treated at the beginning of the subpass where it is first used."
        }
      },
      {
        "text": "VkAttachmentStoreOp storeOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "storeOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentStoreOp",
        "enumRawType": "VkAttachmentStoreOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentStoreOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of color and depth components of the attachment are treated at the end of the subpass where it is last used."
        }
      },
      {
        "text": "VkAttachmentLoadOp stencilLoadOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stencilLoadOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentLoadOp",
        "enumRawType": "VkAttachmentLoadOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentLoadOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of stencil components of the attachment are treated at the beginning of the subpass where it is first used."
        }
      },
      {
        "text": "VkAttachmentStoreOp stencilStoreOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stencilStoreOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentStoreOp",
        "enumRawType": "VkAttachmentStoreOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentStoreOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of stencil components of the attachment are treated at the end of the last subpass where it is used."
        }
      },
      {
        "text": "VkImageLayout initialLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "initialLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the layout the attachment image subresource will be in when a render pass instance begins."
        }
      },
      {
        "text": "VkImageLayout finalLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "finalLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the layout the attachment image subresource will be transitioned to when a render pass instance ends."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying an attachment description"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAttachmentReference",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t attachment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPassCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_UNUSED"
            },
            {
              "kind": "pname",
              "value": "pAttachments"
            }
          ],
          "description": " is either a number value identifying an attachment at the corresponding index in {#0#}::{#2#}, or {#1#} to signify that this attachment is not used."
        }
      },
      {
        "text": "VkImageLayout layout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageLayout"
            }
          ],
          "description": " is a {#0#} value specifying the layout the attachment uses during the subpass."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying an attachment reference"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassDescription",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkSubpassDescriptionFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSubpassDescriptionFlagBits",
        "bitmaskRawType": "VkSubpassDescriptionFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSubpassDescriptionFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying usage of the subpass."
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineBindPoint"
            }
          ],
          "description": " is a {#0#} value specifying the pipeline type supported for this subpass."
        }
      },
      {
        "text": "uint32_t inputAttachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "inputAttachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of input attachments."
        }
      },
      {
        "text": "const VkAttachmentReference * pInputAttachments",
        "type": "VkAttachmentReference",
        "rawType": "const VkAttachmentReference *",
        "name": "pInputAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "inputAttachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference"
            }
          ],
          "description": " is an array of {#0#} structures defining the input attachments for this subpass and their layouts."
        }
      },
      {
        "text": "uint32_t colorAttachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "colorAttachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of color attachments."
        }
      },
      {
        "text": "const VkAttachmentReference * pColorAttachments",
        "type": "VkAttachmentReference",
        "rawType": "const VkAttachmentReference *",
        "name": "pColorAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "colorAttachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference"
            }
          ],
          "description": " is an array of {#0#} structures defining the color attachments for this subpass and their layouts."
        }
      },
      {
        "text": "const VkAttachmentReference * pResolveAttachments",
        "type": "VkAttachmentReference",
        "rawType": "const VkAttachmentReference *",
        "name": "pResolveAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "colorAttachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference"
            },
            {
              "kind": "pname",
              "value": "colorAttachmentCount"
            }
          ],
          "description": " is an optional array of {#1#} {#0#} structures defining the resolve attachments for this subpass and their layouts."
        }
      },
      {
        "text": "const VkAttachmentReference * pDepthStencilAttachment",
        "type": "VkAttachmentReference",
        "rawType": "const VkAttachmentReference *",
        "name": "pDepthStencilAttachment",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the depth/stencil attachment for this subpass and its layout."
        }
      },
      {
        "text": "uint32_t preserveAttachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "preserveAttachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of preserved attachments."
        }
      },
      {
        "text": "const uint32_t * pPreserveAttachments",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pPreserveAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "preserveAttachmentCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "preserveAttachmentCount"
            }
          ],
          "description": " is an array of {#1#} render pass attachment indices identifying attachments that are not used by this subpass, but whose contents {#0#} be preserved throughout the subpass."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying a subpass description"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassDependency",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t srcSubpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcSubpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SUBPASS_EXTERNAL"
            }
          ],
          "description": " is the subpass index of the first subpass in the dependency, or {#0#}."
        }
      },
      {
        "text": "uint32_t dstSubpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstSubpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SUBPASS_EXTERNAL"
            }
          ],
          "description": " is the subpass index of the second subpass in the dependency, or {#0#}."
        }
      },
      {
        "text": "VkPipelineStageFlags srcStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages-masks, source stage mask>>."
        }
      },
      {
        "text": "VkPipelineStageFlags dstStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages-masks, destination stage mask>>"
        }
      },
      {
        "text": "VkAccessFlags srcAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, source access mask>>."
        }
      },
      {
        "text": "VkAccessFlags dstAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, destination access mask>>."
        }
      },
      {
        "text": "VkDependencyFlags dependencyFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dependencyFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDependencyFlagBits",
        "bitmaskRawType": "VkDependencyFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDependencyFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying a subpass dependency"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkRenderPassCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkRenderPassCreateFlagBits",
        "bitmaskRawType": "VkRenderPassCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t attachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentDescription"
            }
          ],
          "description": " {#0#} structures describing the attachments used by the render pass."
        }
      },
      {
        "text": "const VkAttachmentDescription * pAttachments",
        "type": "VkAttachmentDescription",
        "rawType": "const VkAttachmentDescription *",
        "name": "pAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "attachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t subpassCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpassCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassDescription"
            }
          ],
          "description": " {#0#} structures describing each subpass."
        }
      },
      {
        "text": "const VkSubpassDescription * pSubpasses",
        "type": "VkSubpassDescription",
        "rawType": "const VkSubpassDescription *",
        "name": "pSubpasses",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "subpassCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t dependencyCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dependencyCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassDependency"
            }
          ],
          "description": " {#0#} structures describing dependencies between pairs of subpasses."
        }
      },
      {
        "text": "const VkSubpassDependency * pDependencies",
        "type": "VkSubpassDependency",
        "rawType": "const VkSubpassDependency *",
        "name": "pDependencies",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "dependencyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO",
    "extensions": [
      "VkRenderPassMultiviewCreateInfo",
      "VkRenderPassInputAttachmentAspectCreateInfo",
      "VkRenderPassFragmentDensityMapCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying parameters of a newly created render pass"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkEventCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkEventCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkEventCreateFlags",
        "bitmaskRawType": "VkEventCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_EVENT_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying parameters of a newly created event"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFenceCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFenceCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFenceCreateFlagBits",
        "bitmaskRawType": "VkFenceCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFenceCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the initial state and behavior of the fence."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_FENCE_CREATE_INFO",
    "extensions": [
      "VkExportFenceCreateInfo",
      "VkExportFenceWin32HandleInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying parameters of a newly created fence"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkBool32 robustBufferAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "robustBufferAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkDescriptorBufferInfo"
            },
            {
              "kind": "sname",
              "value": "VkBufferViewCreateInfo"
            },
            {
              "kind": "pname",
              "value": "range"
            },
            {
              "kind": "pname",
              "value": "range"
            }
          ],
          "description": " specifies that accesses to buffers are bounds-checked against the range of the buffer descriptor (as determined by {#2#}::{#4#}, {#3#}::{#5#}, or the size of the buffer). Out of bounds accesses {#0#} not cause application termination, and the effects of shader loads, stores, and atomics {#1#} conform to an implementation-dependent behavior as described below."
        }
      },
      {
        "text": "VkBool32 fullDrawIndexUint32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fullDrawIndexUint32",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 imageCubeArray",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageCubeArray",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 independentBlend",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "independentBlend",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 geometryShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "geometryShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 tessellationShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "tessellationShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sampleRateShading",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sampleRateShading",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 dualSrcBlend",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dualSrcBlend",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 logicOp",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "logicOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 multiDrawIndirect",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiDrawIndirect",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 drawIndirectFirstInstance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drawIndirectFirstInstance",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 depthClamp",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthClamp",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 depthBiasClamp",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthBiasClamp",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fillModeNonSolid",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fillModeNonSolid",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 depthBounds",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthBounds",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 wideLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "wideLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 largePoints",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "largePoints",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 alphaToOne",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "alphaToOne",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 multiViewport",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiViewport",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 samplerAnisotropy",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "samplerAnisotropy",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 textureCompressionETC2",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "textureCompressionETC2",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 textureCompressionASTC_LDR",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "textureCompressionASTC_LDR",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 textureCompressionBC",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "textureCompressionBC",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 occlusionQueryPrecise",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "occlusionQueryPrecise",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 pipelineStatisticsQuery",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pipelineStatisticsQuery",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 vertexPipelineStoresAndAtomics",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexPipelineStoresAndAtomics",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fragmentStoresAndAtomics",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentStoresAndAtomics",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderTessellationAndGeometryPointSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderTessellationAndGeometryPointSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderImageGatherExtended",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderImageGatherExtended",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageImageExtendedFormats",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageImageExtendedFormats",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageImageMultisample",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageImageMultisample",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageImageReadWithoutFormat",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageImageReadWithoutFormat",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageImageWriteWithoutFormat",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageImageWriteWithoutFormat",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderUniformBufferArrayDynamicIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderUniformBufferArrayDynamicIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderSampledImageArrayDynamicIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSampledImageArrayDynamicIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageBufferArrayDynamicIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageBufferArrayDynamicIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageImageArrayDynamicIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageImageArrayDynamicIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderClipDistance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderClipDistance",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderCullDistance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderCullDistance",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderFloat64",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderFloat64",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderInt64",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderInt64",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderInt16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderInt16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderResourceResidency",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderResourceResidency",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderResourceMinLod",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderResourceMinLod",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidencyBuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidencyBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidencyImage2D",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidencyImage2D",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidencyImage3D",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidencyImage3D",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidency2Samples",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidency2Samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidency4Samples",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidency4Samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidency8Samples",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidency8Samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidency16Samples",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidency16Samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 sparseResidencyAliased",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sparseResidencyAliased",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 variableMultisampleRate",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variableMultisampleRate",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 inheritedQueries",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "inheritedQueries",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the fine-grained features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSparseProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkBool32 residencyStandard2DBlockShape",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "residencyStandard2DBlockShape",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 residencyStandard2DMultisampleBlockShape",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "residencyStandard2DMultisampleBlockShape",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 residencyStandard3DBlockShape",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "residencyStandard3DBlockShape",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 residencyAlignedMipSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "residencyAlignedMipSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 residencyNonResidentStrict",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "residencyNonResidentStrict",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            }
          ],
          "description": " specifies whether the physical device {#0#} consistently access non-resident regions of a resource. If this property is {#1#}, access to non-resident regions of resources will be guaranteed to return values as if the resource were populated with 0; writes to non-resident regions will be discarded."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying physical device sparse memory properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceLimits",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint32_t maxImageDimension1D",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageDimension1D",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxImageDimension2D",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageDimension2D",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxImageDimension3D",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageDimension3D",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxImageDimensionCube",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageDimensionCube",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxImageArrayLayers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageArrayLayers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTexelBufferElements",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTexelBufferElements",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxUniformBufferRange",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxUniformBufferRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxStorageBufferRange",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxStorageBufferRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxPushConstantsSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPushConstantsSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxMemoryAllocationCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMemoryAllocationCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkAllocateMemory"
            }
          ],
          "description": " is the maximum number of device memory allocations, as created by {#1#}, which {#0#} simultaneously exist."
        }
      },
      {
        "text": "uint32_t maxSamplerAllocationCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSamplerAllocationCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCreateSampler"
            }
          ],
          "description": " is the maximum number of sampler objects, as created by {#1#}, which {#0#} simultaneously exist on a device."
        }
      },
      {
        "text": "VkDeviceSize bufferImageGranularity",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "bufferImageGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is the granularity, in bytes, at which buffer or linear image resources, and optimal image resources {#0#} be bound to adjacent offsets in the same {#1#} object without aliasing. See <<resources-bufferimagegranularity,Buffer-Image Granularity>> for more details."
        }
      },
      {
        "text": "VkDeviceSize sparseAddressSpaceSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "sparseAddressSpaceSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the total amount of address space available, in bytes, for sparse memory resources. This is an upper bound on the sum of the size of all sparse resources, regardless of whether any memory is bound to them."
        }
      },
      {
        "text": "uint32_t maxBoundDescriptorSets",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxBoundDescriptorSets",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "maxBoundDescriptorSets"
            },
            {
              "kind": "code",
              "value": "DescriptorSet"
            }
          ],
          "description": " is the maximum number of descriptor sets that {#0#} be simultaneously used by a pipeline. All {#3#} decorations in shader modules {#1#} have a value less than {#2#}. See <<descriptorsets-sets>>."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorSamplers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorSamplers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_SAMPLER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            }
          ],
          "description": " is the maximum number of samplers that {#0#} be accessible to a single shader stage in a pipeline layout. Descriptors with a type of {#1#} or {#2#} count against this limit. Only descriptors in descriptor set layouts created without the {#3#} bit set count against this limit."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorUniformBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUniformBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxPerStageDescriptorStorageBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorStorageBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxPerStageDescriptorSampledImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorSampledImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxPerStageDescriptorStorageImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorStorageImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxPerStageDescriptorInputAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorInputAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxPerStageResources",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageResources",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetSamplers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetSamplers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetUniformBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUniformBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetUniformBuffersDynamic",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUniformBuffersDynamic",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetStorageBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetStorageBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetStorageBuffersDynamic",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetStorageBuffersDynamic",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetSampledImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetSampledImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetStorageImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetStorageImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetInputAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetInputAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxVertexInputAttributes",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVertexInputAttributes",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxVertexInputBindings",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVertexInputBindings",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxVertexInputAttributeOffset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVertexInputAttributeOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxVertexInputBindingStride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVertexInputBindingStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxVertexOutputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVertexOutputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationGenerationLevel",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationGenerationLevel",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationPatchSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationPatchSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationControlPerVertexInputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationControlPerVertexInputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationControlPerVertexOutputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationControlPerVertexOutputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationControlPerPatchOutputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationControlPerPatchOutputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationControlTotalOutputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationControlTotalOutputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationEvaluationInputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationEvaluationInputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTessellationEvaluationOutputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTessellationEvaluationOutputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxGeometryShaderInvocations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxGeometryShaderInvocations",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxGeometryInputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxGeometryInputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxGeometryOutputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxGeometryOutputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxGeometryOutputVertices",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxGeometryOutputVertices",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxGeometryTotalOutputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxGeometryTotalOutputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxFragmentInputComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxFragmentInputComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxFragmentOutputAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxFragmentOutputAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxFragmentDualSrcAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxFragmentDualSrcAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxFragmentCombinedOutputResources",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxFragmentCombinedOutputResources",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxComputeSharedMemorySize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxComputeSharedMemorySize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxComputeWorkGroupCount [3]",
        "type": "uint32_t",
        "rawType": "uint32_t [3]",
        "name": "maxComputeWorkGroupCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "3",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t maxComputeWorkGroupInvocations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxComputeWorkGroupInvocations",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxComputeWorkGroupSize [3]",
        "type": "uint32_t",
        "rawType": "uint32_t [3]",
        "name": "maxComputeWorkGroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "3",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t subPixelPrecisionBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subPixelPrecisionBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t subTexelPrecisionBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subTexelPrecisionBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t mipmapPrecisionBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "mipmapPrecisionBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDrawIndexedIndexValue",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDrawIndexedIndexValue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDrawIndirectCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDrawIndirectCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float maxSamplerLodBias",
        "type": "float",
        "rawType": "float",
        "name": "maxSamplerLodBias",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float maxSamplerAnisotropy",
        "type": "float",
        "rawType": "float",
        "name": "maxSamplerAnisotropy",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxViewports",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxViewports",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxViewportDimensions [2]",
        "type": "uint32_t",
        "rawType": "uint32_t [2]",
        "name": "maxViewportDimensions",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "2",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "float viewportBoundsRange [2]",
        "type": "float",
        "rawType": "float [2]",
        "name": "viewportBoundsRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "2",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t viewportSubPixelBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportSubPixelBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "size_t minMemoryMapAlignment",
        "type": "size_t",
        "rawType": "size_t",
        "name": "minMemoryMapAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize minTexelBufferOffsetAlignment",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "minTexelBufferOffsetAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize minUniformBufferOffsetAlignment",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "minUniformBufferOffsetAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize minStorageBufferOffsetAlignment",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "minStorageBufferOffsetAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "int32_t minTexelOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "minTexelOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTexelOffset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTexelOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "int32_t minTexelGatherOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "minTexelGatherOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTexelGatherOffset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTexelGatherOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float minInterpolationOffset",
        "type": "float",
        "rawType": "float",
        "name": "minInterpolationOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float maxInterpolationOffset",
        "type": "float",
        "rawType": "float",
        "name": "maxInterpolationOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t subPixelInterpolationOffsetBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subPixelInterpolationOffsetBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxFramebufferWidth",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxFramebufferWidth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxFramebufferHeight",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxFramebufferHeight",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxFramebufferLayers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxFramebufferLayers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags framebufferColorSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "framebufferColorSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags framebufferDepthSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "framebufferDepthSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags framebufferStencilSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "framebufferStencilSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags framebufferNoAttachmentsSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "framebufferNoAttachmentsSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxColorAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxColorAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags sampledImageColorSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampledImageColorSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags sampledImageIntegerSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampledImageIntegerSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags sampledImageDepthSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampledImageDepthSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags sampledImageStencilSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampledImageStencilSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSampleCountFlags storageImageSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "storageImageSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxSampleMaskWords",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSampleMaskWords",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 timestampComputeAndGraphics",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "timestampComputeAndGraphics",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float timestampPeriod",
        "type": "float",
        "rawType": "float",
        "name": "timestampPeriod",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxClipDistances",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxClipDistances",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxCullDistances",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxCullDistances",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxCombinedClipAndCullDistances",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxCombinedClipAndCullDistances",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t discreteQueuePriorities",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "discreteQueuePriorities",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float pointSizeRange [2]",
        "type": "float",
        "rawType": "float [2]",
        "name": "pointSizeRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "2",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "float lineWidthRange [2]",
        "type": "float",
        "rawType": "float [2]",
        "name": "lineWidthRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "2",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "float pointSizeGranularity",
        "type": "float",
        "rawType": "float",
        "name": "pointSizeGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float lineWidthGranularity",
        "type": "float",
        "rawType": "float",
        "name": "lineWidthGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 strictLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "strictLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 standardSampleLocations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "standardSampleLocations",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize optimalBufferCopyOffsetAlignment",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "optimalBufferCopyOffsetAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize optimalBufferCopyRowPitchAlignment",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "optimalBufferCopyRowPitchAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize nonCoherentAtomSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "nonCoherentAtomSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure reporting implementation-dependent physical device limits"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSemaphoreCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphoreCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSemaphoreCreateFlags",
        "bitmaskRawType": "VkSemaphoreCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO",
    "extensions": [
      "VkExportSemaphoreCreateInfo",
      "VkSemaphoreTypeCreateInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying parameters of a newly created semaphore"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkQueryPoolCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkQueryPoolCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryPoolCreateFlags",
        "bitmaskRawType": "VkQueryPoolCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkQueryType queryType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "queryType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkQueryType",
        "enumRawType": "VkQueryType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkQueryType"
            }
          ],
          "description": " is a {#0#} value specifying the type of queries managed by the pool."
        }
      },
      {
        "text": "uint32_t queryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of queries managed by the pool."
        }
      },
      {
        "text": "VkQueryPipelineStatisticFlags pipelineStatistics",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineStatistics",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryPipelineStatisticFlagBits",
        "bitmaskRawType": "VkQueryPipelineStatisticFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkQueryPipelineStatisticFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying which counters will be returned in queries on the new pool, as described below in <<queries-pipestats>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Structure specifying parameters of a newly created query pool"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFramebufferCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFramebufferCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFramebufferCreateFlagBits",
        "bitmaskRawType": "VkFramebufferCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFramebufferCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#}"
        }
      },
      {
        "text": "VkRenderPass renderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass",
        "name": "renderPass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a render pass defining what render passes the framebuffer will be compatible with. See <<renderpass-compatibility,Render Pass Compatibility>> for details."
        }
      },
      {
        "text": "uint32_t attachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of attachments."
        }
      },
      {
        "text": "const VkImageView * pAttachments",
        "type": "VkImageView",
        "rawType": "const VkImageView *",
        "name": "pAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "attachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageView"
            },
            {
              "kind": "ename",
              "value": "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " is an array of {#0#} handles, each of which will be used as the corresponding attachment in a render pass instance. If {#2#} includes {#1#}, this parameter is ignored."
        }
      },
      {
        "text": "uint32_t width",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "width",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t height",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "height",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t layers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "layers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO",
    "extensions": [
      "VkFramebufferAttachmentsCreateInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying parameters of a newly created framebuffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDrawIndirectCommand",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t vertexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of vertices to draw."
        }
      },
      {
        "text": "uint32_t instanceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "instanceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of instances to draw."
        }
      },
      {
        "text": "uint32_t firstVertex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstVertex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the index of the first vertex to draw."
        }
      },
      {
        "text": "uint32_t firstInstance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstInstance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the instance ID of the first instance to draw."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Structure specifying a draw indirect command"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDrawIndexedIndirectCommand",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t indexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "indexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of vertices to draw."
        }
      },
      {
        "text": "uint32_t instanceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "instanceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of instances to draw."
        }
      },
      {
        "text": "uint32_t firstIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the base index within the index buffer."
        }
      },
      {
        "text": "int32_t vertexOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "vertexOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the value added to the vertex index before indexing into the vertex buffer."
        }
      },
      {
        "text": "uint32_t firstInstance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstInstance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the instance ID of the first instance to draw."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Structure specifying a draw indexed indirect command"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDispatchIndirectCommand",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t x",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "x",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the X dimension."
        }
      },
      {
        "text": "uint32_t y",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "y",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the Y dimension."
        }
      },
      {
        "text": "uint32_t z",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "z",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the Z dimension."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Dispatching Commands",
      "description": "Structure specifying a dispatch indirect command"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubmitInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t waitSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of semaphores upon which to wait before executing the command buffers for the batch."
        }
      },
      {
        "text": "const VkSemaphore * pWaitSemaphores",
        "type": "VkSemaphore",
        "rawType": "const VkSemaphore *",
        "name": "pWaitSemaphores",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "waitSemaphoreCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSemaphore"
            }
          ],
          "description": " is an array of {#0#} handles upon which to wait before the command buffers for this batch begin execution. If semaphores to wait on are provided, they define a <<synchronization-semaphores-waiting, semaphore wait operation>>."
        }
      },
      {
        "text": "const VkPipelineStageFlags * pWaitDstStageMask",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pWaitDstStageMask",
        "isConstant": true,
        "dereferenceCount": 1,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "const VkPipelineStageFlags *",
        "isBitmaskType": true,
        "isArray": true,
        "length": "waitSemaphoreCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of pipeline stages at which each corresponding semaphore wait will occur."
        }
      },
      {
        "text": "uint32_t commandBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "commandBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of command buffers to execute in the batch."
        }
      },
      {
        "text": "const VkCommandBuffer * pCommandBuffers",
        "type": "VkCommandBuffer",
        "rawType": "const VkCommandBuffer *",
        "name": "pCommandBuffers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "isArray": true,
        "length": "commandBufferCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCommandBuffer"
            }
          ],
          "description": " is an array of {#0#} handles to execute in the batch."
        }
      },
      {
        "text": "uint32_t signalSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "signalSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCommandBuffers"
            }
          ],
          "description": " is the number of semaphores to be signaled once the commands specified in {#0#} have completed execution."
        }
      },
      {
        "text": "const VkSemaphore * pSignalSemaphores",
        "type": "VkSemaphore",
        "rawType": "const VkSemaphore *",
        "name": "pSignalSemaphores",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "signalSemaphoreCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSemaphore"
            }
          ],
          "description": " is an array of {#0#} handles which will be signaled when the command buffers for this batch have completed execution. If semaphores to be signaled are provided, they define a <<synchronization-semaphores-signaling, semaphore signal operation>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SUBMIT_INFO",
    "extensions": [
      "VkWin32KeyedMutexAcquireReleaseInfoNV",
      "VkWin32KeyedMutexAcquireReleaseInfoKHR",
      "VkD3D12FenceSubmitInfoKHR",
      "VkDeviceGroupSubmitInfo",
      "VkProtectedSubmitInfo",
      "VkTimelineSemaphoreSubmitInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying a queue submit operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a handle that is used to refer to the display described here. This handle will be valid for the lifetime of the Vulkan instance."
        }
      },
      {
        "text": "const char * displayName",
        "type": "char",
        "rawType": "const char *",
        "name": "displayName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "display"
            }
          ],
          "description": " is a reference to a string containing the name of the display. Generally, this will be the name provided by the display's EDID. It {#0#} be <i>null</i> if no suitable name is available. If not <i>null</i>, the memory it reference to {#1#} remain accessible as long as {#2#} is valid."
        }
      },
      {
        "text": "VkExtent2D physicalDimensions",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "physicalDimensions",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " describes the physical width and height of the visible portion of the display, in millimeters."
        }
      },
      {
        "text": "VkExtent2D physicalResolution",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "physicalResolution",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " describes the physical, native, or preferred resolution of the display."
        }
      },
      {
        "text": "VkSurfaceTransformFlagsKHR supportedTransforms",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedTransforms",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceTransformFlagBitsKHR",
        "bitmaskRawType": "VkSurfaceTransformFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 planeReorderPossible",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "planeReorderPossible",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 persistentContent",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "persistentContent",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing an available display device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPlanePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkDisplayKHR currentDisplay",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "currentDisplay",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is the handle of the display the plane is currently associated with. If the plane is not currently attached to any displays, this will be {#0#}."
        }
      },
      {
        "text": "uint32_t currentStackIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "currentStackIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkGetPhysicalDeviceDisplayPlanePropertiesKHR"
            },
            {
              "kind": "pname",
              "value": "pPropertyCount"
            }
          ],
          "description": " is the current z-order of the plane. This will be between 0 and the value returned by {#0#} in {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing display plane properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayModeParametersKHR",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkExtent2D visibleRegion",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "visibleRegion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the 2D extents of the visible region."
        }
      },
      {
        "text": "uint32_t refreshRate",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "refreshRate",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "uint32_t"
            }
          ],
          "description": " is a {#0#} that is the number of times the display is refreshed each second multiplied by 1000."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing display parameters associated with a display mode"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayModePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkDisplayModeKHR displayMode",
        "type": "VkDisplayModeKHR",
        "rawType": "VkDisplayModeKHR",
        "name": "displayMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice,VkDisplayKHR",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a handle to the display mode described in this structure. This handle will be valid for the lifetime of the Vulkan instance."
        }
      },
      {
        "text": "VkDisplayModeParametersKHR parameters",
        "type": "VkDisplayModeParametersKHR",
        "rawType": "VkDisplayModeParametersKHR",
        "name": "parameters",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayModeParametersKHR"
            },
            {
              "kind": "pname",
              "value": "displayMode"
            }
          ],
          "description": " is a {#0#} structure describing the display parameters associated with {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing display mode properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayModeCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayModeCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDisplayModeCreateFlagsKHR",
        "bitmaskRawType": "VkDisplayModeCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is reserved for future use, and {#0#} be zero."
        }
      },
      {
        "text": "VkDisplayModeParametersKHR parameters",
        "type": "VkDisplayModeParametersKHR",
        "rawType": "VkDisplayModeParametersKHR",
        "name": "parameters",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkDisplayModeParametersKHR"
            },
            {
              "kind": "ename",
              "value": "VK_ERROR_INITIALIZATION_FAILED"
            }
          ],
          "description": " is a {#1#} structure describing the display parameters to use in creating the new mode. If the parameters are not compatible with the specified display, the implementation {#0#} return {#2#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure specifying parameters of a newly created display mode object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPlaneCapabilitiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkDisplayPlaneAlphaFlagsKHR supportedAlpha",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedAlpha",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDisplayPlaneAlphaFlagBitsKHR",
        "bitmaskRawType": "VkDisplayPlaneAlphaFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDisplayPlaneAlphaFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#0#} describing the supported alpha blending modes."
        }
      },
      {
        "text": "VkOffset2D minSrcPosition",
        "type": "VkOffset2D",
        "rawType": "VkOffset2D",
        "name": "minSrcPosition",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the minimum source rectangle offset supported by this plane using the specified mode."
        }
      },
      {
        "text": "VkOffset2D maxSrcPosition",
        "type": "VkOffset2D",
        "rawType": "VkOffset2D",
        "name": "maxSrcPosition",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "x"
            },
            {
              "kind": "pname",
              "value": "y"
            },
            {
              "kind": "pname",
              "value": "maxSrcPosition"
            },
            {
              "kind": "pname",
              "value": "x"
            },
            {
              "kind": "pname",
              "value": "y"
            },
            {
              "kind": "pname",
              "value": "minSrcPosition"
            }
          ],
          "description": " is the maximum source rectangle offset supported by this plane using the specified mode. The {#1#} and {#2#} components of {#3#} {#0#} each be greater than or equal to the {#4#} and {#5#} components of {#6#}, respectively."
        }
      },
      {
        "text": "VkExtent2D minSrcExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "minSrcExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the minimum source rectangle size supported by this plane using the specified mode."
        }
      },
      {
        "text": "VkExtent2D maxSrcExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "maxSrcExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the maximum source rectangle size supported by this plane using the specified mode."
        }
      },
      {
        "text": "VkOffset2D minDstPosition",
        "type": "VkOffset2D",
        "rawType": "VkOffset2D",
        "name": "minDstPosition",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkOffset2D maxDstPosition",
        "type": "VkOffset2D",
        "rawType": "VkOffset2D",
        "name": "maxDstPosition",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent2D minDstExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "minDstExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent2D maxDstExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "maxDstExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing capabilities of a mode and plane combination"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplaySurfaceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplaySurfaceCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDisplaySurfaceCreateFlagsKHR",
        "bitmaskRawType": "VkDisplaySurfaceCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is reserved for future use, and {#0#} be zero."
        }
      },
      {
        "text": "VkDisplayModeKHR displayMode",
        "type": "VkDisplayModeKHR",
        "rawType": "VkDisplayModeKHR",
        "name": "displayMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice,VkDisplayKHR",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayModeKHR"
            }
          ],
          "description": " is a {#0#} handle specifying the mode to use when displaying this surface."
        }
      },
      {
        "text": "uint32_t planeIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "planeIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the plane on which this surface appears."
        }
      },
      {
        "text": "uint32_t planeStackIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "planeStackIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the z-order of the plane."
        }
      },
      {
        "text": "VkSurfaceTransformFlagBitsKHR transform",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "transform",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceTransformFlagBitsKHR",
        "bitmaskRawType": "VkSurfaceTransformFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSurfaceTransformFlagBitsKHR"
            }
          ],
          "description": " is a {#0#} value specifying the transformation to apply to images as part of the scanout operation."
        }
      },
      {
        "text": "float globalAlpha",
        "type": "float",
        "rawType": "float",
        "name": "globalAlpha",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR"
            },
            {
              "kind": "pname",
              "value": "alphaMode"
            }
          ],
          "description": " is the global alpha value. This value is ignored if {#1#} is not {#0#}."
        }
      },
      {
        "text": "VkDisplayPlaneAlphaFlagBitsKHR alphaMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "alphaMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDisplayPlaneAlphaFlagBitsKHR",
        "bitmaskRawType": "VkDisplayPlaneAlphaFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDisplayPlaneAlphaFlagBitsKHR"
            }
          ],
          "description": " is a {#0#} value specifying the type of alpha blending to use."
        }
      },
      {
        "text": "VkExtent2D imageExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "imageExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " The size of the presentable images to use with the surface."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure specifying parameters of a newly created display plane surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPresentInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkRect2D srcRect",
        "type": "VkRect2D",
        "rawType": "VkRect2D",
        "name": "srcRect",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkDisplayPresentInfoKHR"
            }
          ],
          "description": " is a rectangular region of pixels to present. It {#0#} be a subset of the image being presented. If {#1#} is not specified, this region will be assumed to be the entire presentable image."
        }
      },
      {
        "text": "VkRect2D dstRect",
        "type": "VkRect2D",
        "rawType": "VkRect2D",
        "name": "dstRect",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayPresentInfoKHR"
            }
          ],
          "description": " is a rectangular region within the visible region of the swapchain's display mode. If {#0#} is not specified, this region will be assumed to be the entire visible region of the visible region of the swapchain's mode. If the specified rectangle is a subset of the display mode's visible region, content from display planes below the swapchain's plane will be visible outside the rectangle. If there are no planes below the swapchain's, the area outside the specified rectangle will be black. If portions of the specified rectangle are outside of the display's visible region, pixels mapping only to those portions of the rectangle will be discarded."
        }
      },
      {
        "text": "VkBool32 persistent",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "persistent",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPresentInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display_swapchain",
      "description": "Structure describing parameters of a queue presentation to a swapchain"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceCapabilitiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint32_t minImageCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minImageCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the minimum number of images the specified device supports for a swapchain created for the surface, and will be at least one."
        }
      },
      {
        "text": "uint32_t maxImageCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "minImageCount"
            }
          ],
          "description": " is the maximum number of images the specified device supports for a swapchain created for the surface, and will be either 0, or greater than or equal to {#1#}. A value of 0 means that there is no limit on the number of images, though there {#0#} be limits related to the total amount of memory used by presentable images."
        }
      },
      {
        "text": "VkExtent2D currentExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "currentExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the current width and height of the surface, or the special value [eq]#(0xFFFFFFFF, 0xFFFFFFFF)# indicating that the surface size will be determined by the extent of a swapchain targeting the surface."
        }
      },
      {
        "text": "VkExtent2D minImageExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "minImageExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "currentExtent"
            },
            {
              "kind": "pname",
              "value": "currentExtent"
            }
          ],
          "description": " contains the smallest valid swapchain extent for the surface on the specified device. The {#0#} and {#1#} of the extent will each be less than or equal to the corresponding {#2#} and {#3#} of {#4#}, unless {#5#} has the special value described above."
        }
      },
      {
        "text": "VkExtent2D maxImageExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "maxImageExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "minImageExtent"
            },
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "width"
            },
            {
              "kind": "pname",
              "value": "height"
            },
            {
              "kind": "pname",
              "value": "currentExtent"
            },
            {
              "kind": "pname",
              "value": "currentExtent"
            }
          ],
          "description": " contains the largest valid swapchain extent for the surface on the specified device. The {#0#} and {#1#} of the extent will each be greater than or equal to the corresponding {#2#} and {#3#} of {#4#}. The {#5#} and {#6#} of the extent will each be greater than or equal to the corresponding {#7#} and {#8#} of {#9#}, unless {#10#} has the special value described above."
        }
      },
      {
        "text": "uint32_t maxImageArrayLayers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageArrayLayers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the maximum number of layers presentable images {#0#} have for a swapchain created for this device and surface, and will be at least one."
        }
      },
      {
        "text": "VkSurfaceTransformFlagsKHR supportedTransforms",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedTransforms",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceTransformFlagBitsKHR",
        "bitmaskRawType": "VkSurfaceTransformFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSurfaceTransformFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#0#} indicating the presentation transforms supported for the surface on the specified device. At least one bit will be set."
        }
      },
      {
        "text": "VkSurfaceTransformFlagBitsKHR currentTransform",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "currentTransform",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceTransformFlagBitsKHR",
        "bitmaskRawType": "VkSurfaceTransformFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSurfaceTransformFlagBitsKHR"
            }
          ],
          "description": " is {#0#} value indicating the surface's current transform relative to the presentation engine's natural orientation."
        }
      },
      {
        "text": "VkCompositeAlphaFlagsKHR supportedCompositeAlpha",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedCompositeAlpha",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCompositeAlphaFlagBitsKHR",
        "bitmaskRawType": "VkCompositeAlphaFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "elink",
              "value": "VkCompositeAlphaFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#1#}, representing the alpha compositing modes supported by the presentation engine for the surface on the specified device, and at least one bit will be set. Opaque composition {#0#} be achieved in any alpha compositing mode by either using an image format that has no alpha component, or by ensuring that all pixels in the presentable images have an alpha value of 1.0."
        }
      },
      {
        "text": "VkImageUsageFlags supportedUsageFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedUsageFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_PRESENT_MODE_IMMEDIATE_KHR"
            },
            {
              "kind": "ename",
              "value": "VK_PRESENT_MODE_MAILBOX_KHR"
            },
            {
              "kind": "ename",
              "value": "VK_PRESENT_MODE_FIFO_KHR"
            },
            {
              "kind": "ename",
              "value": "VK_PRESENT_MODE_FIFO_RELAXED_KHR"
            },
            {
              "kind": "elink",
              "value": "VkImageUsageFlagBits"
            },
            {
              "kind": "elink",
              "value": "VkPresentModeKHR"
            }
          ],
          "description": " is a bitmask of {#5#} representing the ways the application {#0#} use the presentable images of a swapchain created with {#6#} set to {#1#}, {#2#}, {#3#} or {#4#}"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure describing capabilities of a surface"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAndroidSurfaceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAndroidSurfaceCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAndroidSurfaceCreateFlagsKHR",
        "bitmaskRawType": "VkAndroidSurfaceCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "struct ANativeWindow * window",
        "type": "ANativeWindow",
        "rawType": "struct ANativeWindow *",
        "name": "window",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "ANativeWindow"
            }
          ],
          "description": " is a reference to the {#0#} to associate the surface with."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_android_surface",
      "description": "Structure specifying parameters of a newly created Android surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkViSurfaceCreateInfoNN",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkViSurfaceCreateFlagsNN flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkViSurfaceCreateFlagsNN",
        "bitmaskRawType": "VkViSurfaceCreateFlagsNN",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "void * window",
        "type": "void",
        "rawType": "void *",
        "name": "window",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "nn"
            },
            {
              "kind": "code",
              "value": "vi"
            },
            {
              "kind": "code",
              "value": "NativeWindowHandle"
            },
            {
              "kind": "code",
              "value": "nn"
            },
            {
              "kind": "code",
              "value": "vi"
            },
            {
              "kind": "code",
              "value": "Layer"
            }
          ],
          "description": " is the {#0#}::{#1#}::{#2#} for the {#3#}::{#4#}::{#5#} with which to associate the surface."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN",
    "documentation": {
      "macros": [],
      "category": "VK_NN_vi_surface",
      "description": "Structure specifying parameters of a newly created VI surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkWaylandSurfaceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkWaylandSurfaceCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkWaylandSurfaceCreateFlagsKHR",
        "bitmaskRawType": "VkWaylandSurfaceCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "struct wl_display * display",
        "type": "wl_display",
        "rawType": "struct wl_display *",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "struct wl_surface * surface",
        "type": "wl_surface",
        "rawType": "struct wl_surface *",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "wl_display"
            },
            {
              "kind": "code",
              "value": "wl_surface"
            }
          ],
          "description": " are references to the Wayland {#0#} and {#1#} to associate the surface with."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_wayland_surface",
      "description": "Structure specifying parameters of a newly created Wayland surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkWin32SurfaceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkWin32SurfaceCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkWin32SurfaceCreateFlagsKHR",
        "bitmaskRawType": "VkWin32SurfaceCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "HINSTANCE hinstance",
        "type": "HINSTANCE",
        "rawType": "HINSTANCE",
        "name": "hinstance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "HINSTANCE"
            }
          ],
          "description": " is the Win32 {#0#} for the window to associate the surface with."
        }
      },
      {
        "text": "HWND hwnd",
        "type": "HWND",
        "rawType": "HWND",
        "name": "hwnd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "HWND"
            }
          ],
          "description": " is the Win32 {#0#} for the window to associate the surface with."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_win32_surface",
      "description": "Structure specifying parameters of a newly created Win32 surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkXlibSurfaceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkXlibSurfaceCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkXlibSurfaceCreateFlagsKHR",
        "bitmaskRawType": "VkXlibSurfaceCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "Display * dpy",
        "type": "Display",
        "rawType": "Display *",
        "name": "dpy",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "Display"
            }
          ],
          "description": " is a reference to an Xlib {#0#} connection to the X server."
        }
      },
      {
        "text": "Window window",
        "type": "Window",
        "rawType": "Window",
        "name": "window",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "Window"
            }
          ],
          "description": " is an Xlib {#0#} to associate the surface with."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_xlib_surface",
      "description": "Structure specifying parameters of a newly created Xlib surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkXcbSurfaceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkXcbSurfaceCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkXcbSurfaceCreateFlagsKHR",
        "bitmaskRawType": "VkXcbSurfaceCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "xcb_connection_t * connection",
        "type": "xcb_connection_t",
        "rawType": "xcb_connection_t *",
        "name": "connection",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "xcb_connection_t"
            }
          ],
          "description": " is a reference to an {#0#} to the X server."
        }
      },
      {
        "text": "xcb_window_t window",
        "type": "xcb_window_t",
        "rawType": "xcb_window_t",
        "name": "window",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "xcb_window_t"
            }
          ],
          "description": " is the {#0#} for the X11 window to associate the surface with."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_xcb_surface",
      "description": "Structure specifying parameters of a newly created Xcb surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImagePipeSurfaceCreateInfoFUCHSIA",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImagePipeSurfaceCreateFlagsFUCHSIA flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImagePipeSurfaceCreateFlagsFUCHSIA",
        "bitmaskRawType": "VkImagePipeSurfaceCreateFlagsFUCHSIA",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "zx_handle_t imagePipeHandle",
        "type": "zx_handle_t",
        "rawType": "zx_handle_t",
        "name": "imagePipeHandle",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "zx_handle_t"
            }
          ],
          "description": " is a {#0#} referring to the ImagePipe to associate with the surface."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA",
    "documentation": {
      "macros": [],
      "category": "VK_FUCHSIA_imagepipe_surface",
      "description": "Structure specifying parameters of a newly created ImagePipe surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkStreamDescriptorSurfaceCreateInfoGGP",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkStreamDescriptorSurfaceCreateFlagsGGP flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkStreamDescriptorSurfaceCreateFlagsGGP",
        "bitmaskRawType": "VkStreamDescriptorSurfaceCreateFlagsGGP",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "GgpStreamDescriptor streamDescriptor",
        "type": "GgpStreamDescriptor",
        "rawType": "GgpStreamDescriptor",
        "name": "streamDescriptor",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GgpStreamDescriptor"
            }
          ],
          "description": " is a {#0#} referring to the GGP stream descriptor to associate with the surface."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP",
    "documentation": {
      "macros": [],
      "category": "VK_GGP_stream_descriptor_surface",
      "description": "Structure specifying parameters of a newly created Google Games Platform stream surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceFormatKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " is a {#0#} that is compatible with the specified surface."
        }
      },
      {
        "text": "VkColorSpaceKHR colorSpace",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "colorSpace",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkColorSpaceKHR",
        "enumRawType": "VkColorSpaceKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkColorSpaceKHR"
            }
          ],
          "description": " is a presentation {#0#} that is compatible with the surface."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure describing a supported swapchain format-color space pair"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSwapchainCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSwapchainCreateFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSwapchainCreateFlagBitsKHR",
        "bitmaskRawType": "VkSwapchainCreateFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSwapchainCreateFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#0#} indicating parameters of the swapchain creation."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "surface"
            }
          ],
          "description": " is the surface onto which the swapchain will present images. If the creation succeeds, the swapchain becomes associated with {#0#}."
        }
      },
      {
        "text": "uint32_t minImageCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minImageCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the minimum number of presentable images that the application needs. The implementation will either create the swapchain with at least that many images, or it will fail to create the swapchain."
        }
      },
      {
        "text": "VkFormat imageFormat",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageFormat",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " is a {#0#} value specifying the format the swapchain image(s) will be created with."
        }
      },
      {
        "text": "VkColorSpaceKHR imageColorSpace",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageColorSpace",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkColorSpaceKHR",
        "enumRawType": "VkColorSpaceKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkColorSpaceKHR"
            }
          ],
          "description": " is a {#0#} value specifying the way the swapchain interprets image data."
        }
      },
      {
        "text": "VkExtent2D imageExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "imageExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkGetPhysicalDeviceSurfaceCapabilitiesKHR"
            },
            {
              "kind": "pname",
              "value": "currentExtent"
            }
          ],
          "description": " is the size (in pixels) of the swapchain image(s). The behavior is platform-dependent if the image extent does not match the surface's {#1#} as returned by {#0#}."
        }
      },
      {
        "text": "uint32_t imageArrayLayers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageArrayLayers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkImageUsageFlags imageUsage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSharingMode imageSharingMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageSharingMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSharingMode",
        "enumRawType": "VkSharingMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t queueFamilyIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const uint32_t * pQueueFamilyIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pQueueFamilyIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "queueFamilyIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSurfaceTransformFlagBitsKHR preTransform",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "preTransform",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceTransformFlagBitsKHR",
        "bitmaskRawType": "VkSurfaceTransformFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkCompositeAlphaFlagBitsKHR compositeAlpha",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compositeAlpha",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCompositeAlphaFlagBitsKHR",
        "bitmaskRawType": "VkCompositeAlphaFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPresentModeKHR presentMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "presentMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPresentModeKHR",
        "enumRawType": "VkPresentModeKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 clipped",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "clipped",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSwapchainKHR oldSwapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "oldSwapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR",
    "extensions": [
      "VkSwapchainCounterCreateInfoEXT",
      "VkDeviceGroupSwapchainCreateInfoKHR",
      "VkSwapchainDisplayNativeHdrCreateInfoAMD",
      "VkImageFormatListCreateInfoKHR",
      "VkSurfaceFullScreenExclusiveInfoEXT",
      "VkSurfaceFullScreenExclusiveWin32InfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Structure specifying parameters of a newly created swapchain object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPresentInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t waitSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " is the number of semaphores to wait for before issuing the present request. The number {#0#} be zero."
        }
      },
      {
        "text": "const VkSemaphore * pWaitSemaphores",
        "type": "VkSemaphore",
        "rawType": "const VkSemaphore *",
        "name": "pWaitSemaphores",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "waitSemaphoreCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSemaphore"
            },
            {
              "kind": "pname",
              "value": "waitSemaphoreCount"
            }
          ],
          "description": " is <i>null</i> or a reference to an array of {#0#} objects with {#1#} entries, and specifies the semaphores to wait for before issuing the present request."
        }
      },
      {
        "text": "uint32_t swapchainCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "swapchainCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of swapchains being presented to by this command."
        }
      },
      {
        "text": "const VkSwapchainKHR * pSwapchains",
        "type": "VkSwapchainKHR",
        "rawType": "const VkSwapchainKHR *",
        "name": "pSwapchains",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkSwapchainKHR"
            },
            {
              "kind": "pname",
              "value": "swapchainCount"
            }
          ],
          "description": " is an array of {#1#} objects with {#2#} entries. A given swapchain {#0#} not appear in this list more than once."
        }
      },
      {
        "text": "const uint32_t * pImageIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pImageIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "swapchainCount"
            },
            {
              "kind": "pname",
              "value": "pSwapchains"
            }
          ],
          "description": " is an array of indices into the array of each swapchain's presentable images, with {#0#} entries. Each entry in this array identifies the image to present on the corresponding entry in the {#1#} array."
        }
      },
      {
        "text": "VkResult * pResults",
        "type": "int32_t",
        "rawType": "int32_t *",
        "name": "pResults",
        "isConstant": false,
        "dereferenceCount": 1,
        "enumType": "VkResult",
        "enumRawType": "VkResult *",
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "elink",
              "value": "VkResult"
            },
            {
              "kind": "elink",
              "value": "VkResult"
            },
            {
              "kind": "pname",
              "value": "swapchainCount"
            },
            {
              "kind": "pname",
              "value": "pResults"
            },
            {
              "kind": "pname",
              "value": "pResults"
            },
            {
              "kind": "pname",
              "value": "pSwapchains"
            }
          ],
          "description": " is an array of {#1#} typed elements with {#3#} entries. Applications that do not need per-swapchain results {#0#} use <i>null</i> for {#4#}. If non-<i>null</i>, each entry in {#5#} will be set to the {#2#} for presenting the swapchain corresponding to the same index in {#6#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PRESENT_INFO_KHR",
    "extensions": [
      "VkDisplayPresentInfoKHR",
      "VkPresentRegionsKHR",
      "VkDeviceGroupPresentInfoKHR",
      "VkPresentTimesInfoGOOGLE",
      "VkPresentFrameTokenGGP"
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Structure describing parameters of a queue presentation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugReportCallbackCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDebugReportFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugReportFlagBitsEXT",
        "bitmaskRawType": "VkDebugReportFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugReportFlagBitsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} specifying which event(s) will cause this callback to be called."
        }
      },
      {
        "text": "PFN_vkDebugReportCallbackEXT pfnCallback",
        "type": "PFN_vkDebugReportCallbackEXT",
        "rawType": "PFN_vkDebugReportCallbackEXT",
        "name": "pfnCallback",
        "isConstant": false,
        "dereferenceCount": 0,
        "isFunction": true,
        "jsType": "Function",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the application callback function to call."
        }
      },
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is user data to be passed to the callback."
        }
      }
    ],
    "extends": [
      "VkInstanceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_report",
      "description": "Structure specifying parameters of a newly created debug report callback"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkValidationFlagsEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t disabledValidationCheckCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "disabledValidationCheckCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of checks to disable."
        }
      },
      {
        "text": "const VkValidationCheckEXT * pDisabledValidationChecks",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pDisabledValidationChecks",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkValidationCheckEXT",
        "enumRawType": "const VkValidationCheckEXT *",
        "isArray": true,
        "length": "disabledValidationCheckCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkValidationCheckEXT"
            }
          ],
          "description": " is an array of {#0#} values specifying the validation checks to be disabled."
        }
      }
    ],
    "extends": [
      "VkInstanceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_validation_flags",
      "description": "Specify validation checks to disable for a Vulkan instance"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkValidationFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t enabledValidationFeatureCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "enabledValidationFeatureCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of features to enable."
        }
      },
      {
        "text": "const VkValidationFeatureEnableEXT * pEnabledValidationFeatures",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pEnabledValidationFeatures",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkValidationFeatureEnableEXT",
        "enumRawType": "const VkValidationFeatureEnableEXT *",
        "isArray": true,
        "length": "enabledValidationFeatureCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkValidationFeatureEnableEXT"
            }
          ],
          "description": " is an array of {#0#} values specifying the validation features to be enabled."
        }
      },
      {
        "text": "uint32_t disabledValidationFeatureCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "disabledValidationFeatureCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of features to disable."
        }
      },
      {
        "text": "const VkValidationFeatureDisableEXT * pDisabledValidationFeatures",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pDisabledValidationFeatures",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkValidationFeatureDisableEXT",
        "enumRawType": "const VkValidationFeatureDisableEXT *",
        "isArray": true,
        "length": "disabledValidationFeatureCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkValidationFeatureDisableEXT"
            }
          ],
          "description": " is an array of {#0#} values specifying the validation features to be disabled."
        }
      }
    ],
    "extends": [
      "VkInstanceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_validation_features",
      "description": "Specify validation features to enable or disable for a Vulkan instance"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineRasterizationStateRasterizationOrderAMD",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkRasterizationOrderAMD rasterizationOrder",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "rasterizationOrder",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkRasterizationOrderAMD",
        "enumRawType": "VkRasterizationOrderAMD",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkRasterizationOrderAMD"
            }
          ],
          "description": " is a {#0#} value specifying the primitive rasterization order to use."
        }
      }
    ],
    "extends": [
      "VkPipelineRasterizationStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure defining rasterization order for a graphics pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugMarkerObjectNameInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDebugReportObjectTypeEXT objectType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "objectType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDebugReportObjectTypeEXT",
        "enumRawType": "VkDebugReportObjectTypeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugReportObjectTypeEXT"
            }
          ],
          "description": " is a {#0#} specifying the type of the object to be named."
        }
      },
      {
        "text": "uint64_t object",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "object",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the object to be named."
        }
      },
      {
        "text": "const char * pObjectName",
        "type": "char",
        "rawType": "const char *",
        "name": "pObjectName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "object"
            }
          ],
          "description": " is a string specifying the name to apply to {#0#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Specify parameters of a name to give to an object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugMarkerObjectTagInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDebugReportObjectTypeEXT objectType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "objectType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDebugReportObjectTypeEXT",
        "enumRawType": "VkDebugReportObjectTypeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugReportObjectTypeEXT"
            }
          ],
          "description": " is a {#0#} specifying the type of the object to be named."
        }
      },
      {
        "text": "uint64_t object",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "object",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the object to be tagged."
        }
      },
      {
        "text": "uint64_t tagName",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "tagName",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a numerical identifier of the tag."
        }
      },
      {
        "text": "size_t tagSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "tagSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " bytes containing the data to be associated with the object."
        }
      },
      {
        "text": "const void * pTag",
        "type": "void",
        "rawType": "const void *",
        "name": "pTag",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "tagSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Specify parameters of a tag to attach to an object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugMarkerMarkerInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "const char * pMarkerName",
        "type": "char",
        "rawType": "const char *",
        "name": "pMarkerName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a reference to a string containing the name of the marker."
        }
      },
      {
        "text": "float color [4]",
        "type": "float",
        "rawType": "float [4]",
        "name": "color",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "4",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "optional",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "color"
            }
          ],
          "description": " is an {#1#} RGBA color value that can be associated with the marker. A particular implementation {#0#} choose to ignore this color value. The values contain RGBA values in order, in the range 0.0 to 1.0. If all elements in {#2#} are set to 0.0 then it is ignored."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Specify parameters of a command buffer marker region"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDedicatedAllocationImageCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 dedicatedAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dedicatedAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether the image will have a dedicated allocation bound to it."
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that an image is bound to a dedicated memory resource"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDedicatedAllocationBufferCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 dedicatedAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dedicatedAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether the buffer will have a dedicated allocation bound to it."
        }
      }
    ],
    "extends": [
      "VkBufferCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that a buffer is bound to a dedicated memory resource"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDedicatedAllocationMemoryAllocateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a handle of an image which this memory will be bound to."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a handle of a buffer which this memory will be bound to."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Specify a dedicated memory allocation resource"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalImageFormatPropertiesNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkImageFormatProperties imageFormatProperties",
        "type": "VkImageFormatProperties",
        "rawType": "VkImageFormatProperties",
        "name": "imageFormatProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkGetPhysicalDeviceImageFormatProperties"
            }
          ],
          "description": " will be filled in as when calling {#1#}, but the values returned {#0#} vary depending on the external handle type requested."
        }
      },
      {
        "text": "VkExternalMemoryFeatureFlagsNV externalMemoryFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalMemoryFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryFeatureFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryFeatureFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
            },
            {
              "kind": "elink",
              "value": "VkExternalMemoryFeatureFlagBitsNV"
            },
            {
              "kind": "pname",
              "value": "externalHandleType"
            }
          ],
          "description": " is a bitmask of {#1#}, indicating properties of the external memory handle type ({#0#}::{#2#}) being queried, or 0 if the external memory handle type is 0."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagsNV exportFromImportedHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "exportFromImportedHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
            },
            {
              "kind": "elink",
              "value": "VkExternalMemoryHandleTypeFlagBitsNV"
            },
            {
              "kind": "pname",
              "value": "externalHandleType"
            }
          ],
          "description": " is a bitmask of {#3#} containing a bit set for every external handle type that {#1#} be used to create memory from which the handles of the type specified in {#2#}::{#4#} {#0#} be exported, or 0 if the external memory handle type is 0."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagsNV compatibleHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compatibleHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
            },
            {
              "kind": "flink",
              "value": "vkAllocateMemory"
            },
            {
              "kind": "flink",
              "value": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
            },
            {
              "kind": "elink",
              "value": "VkExternalMemoryHandleTypeFlagBitsNV"
            },
            {
              "kind": "pname",
              "value": "externalHandleType"
            },
            {
              "kind": "pname",
              "value": "compatibleHandleTypes"
            },
            {
              "kind": "pname",
              "value": "externalHandleType"
            }
          ],
          "description": " is a bitmask of {#4#} containing a bit set for every external handle type that {#0#} be specified simultaneously with the handle type specified by {#1#}::{#5#} when calling {#2#}, or 0 if the external memory handle type is 0. {#6#} will always contain {#3#}::{#7#}"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory_capabilities",
      "description": "Structure specifying external image format properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalMemoryImageCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagsNV handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkExternalMemoryHandleTypeFlagBitsNV"
            }
          ],
          "description": " is a bitmask of {#0#} specifying one or more external memory handle types."
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that an image may be backed by external memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportMemoryAllocateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagsNV handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV"
            },
            {
              "kind": "elink",
              "value": "VkExternalMemoryHandleTypeFlagBitsNV"
            }
          ],
          "description": " is a bitmask of {#3#} specifying one or more memory handle types that {#0#} be exported. Multiple handle types {#1#} be requested for the same allocation as long as they are compatible, as reported by {#2#}."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory",
      "description": "Specify memory handle types that may be exported"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportMemoryWin32HandleInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagsNV handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkExternalMemoryHandleTypeFlagBitsNV"
            },
            {
              "kind": "pname",
              "value": "handle"
            }
          ],
          "description": " is `0` or a {#0#} value specifying the type of memory handle in {#1#}."
        }
      },
      {
        "text": "HANDLE handle",
        "type": "HANDLE",
        "rawType": "HANDLE",
        "name": "handle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "HANDLE"
            }
          ],
          "description": " is a Windows {#0#} referring to the memory."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory_win32",
      "description": "import Win32 memory created on the same physical device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportMemoryWin32HandleInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "const SECURITY_ATTRIBUTES * pAttributes",
        "type": "SECURITY_ATTRIBUTES",
        "rawType": "const SECURITY_ATTRIBUTES *",
        "name": "pAttributes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "SECURITY_ATTRIBUTES"
            }
          ],
          "description": " is a reference to a Windows {#0#} structure specifying security attributes of the handle."
        }
      },
      {
        "text": "DWORD dwAccess",
        "type": "DWORD",
        "rawType": "DWORD",
        "name": "dwAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "DWORD"
            }
          ],
          "description": " is a {#0#} specifying access rights of the handle."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory_win32",
      "description": "specify security attributes and access rights for Win32 memory handles"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkWin32KeyedMutexAcquireReleaseInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t acquireCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "acquireCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDeviceMemory * pAcquireSyncs",
        "type": "VkDeviceMemory",
        "rawType": "const VkDeviceMemory *",
        "name": "pAcquireSyncs",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "acquireCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is an array of {#0#} objects which were imported from Direct3D 11 resources."
        }
      },
      {
        "text": "const uint64_t * pAcquireKeys",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pAcquireKeys",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "acquireCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pAcquireSyncs"
            }
          ],
          "description": " is an array of mutex key values to wait for prior to beginning the submitted work. Entries refer to the keyed mutex associated with the corresponding entries in {#0#}."
        }
      },
      {
        "text": "const uint32_t * pAcquireTimeoutMilliseconds",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pAcquireTimeoutMilliseconds",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "acquireCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pAcquireKeys"
            }
          ],
          "description": " is an array of timeout values, in millisecond units, for each acquire specified in {#0#}."
        }
      },
      {
        "text": "uint32_t releaseCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "releaseCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDeviceMemory * pReleaseSyncs",
        "type": "VkDeviceMemory",
        "rawType": "const VkDeviceMemory *",
        "name": "pReleaseSyncs",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "releaseCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is an array of {#0#} objects which were imported from Direct3D 11 resources."
        }
      },
      {
        "text": "const uint64_t * pReleaseKeys",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pReleaseKeys",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "releaseCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pReleaseSyncs"
            }
          ],
          "description": " is an array of mutex key values to set when the submitted work has completed. Entries refer to the keyed mutex associated with the corresponding entries in {#0#}."
        }
      }
    ],
    "extends": [
      "VkSubmitInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_win32_keyed_mutex",
      "description": "use Windows keyex mutex mechanism to synchronize work"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGeneratedCommandsFeaturesNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 computeBindingPointSupport",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "computeBindingPointSupport",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkObjectTableNVX"
            },
            {
              "kind": "sname",
              "value": "VkIndirectCommandsLayoutNVX"
            },
            {
              "kind": "ename",
              "value": "VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX"
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_BIND_POINT_COMPUTE"
            }
          ],
          "description": " specifies whether the {#0#} supports entries with {#2#} bit set and {#1#} supports {#3#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX",
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Structure specifying physical device support"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGeneratedCommandsLimitsNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxIndirectCommandsLayoutTokenCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxIndirectCommandsLayoutTokenCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkIndirectCommandsLayoutNVX"
            }
          ],
          "description": " the maximum number of tokens in {#0#}."
        }
      },
      {
        "text": "uint32_t maxObjectEntryCounts",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxObjectEntryCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkObjectTableNVX"
            }
          ],
          "description": " the maximum number of entries per resource type in {#0#}."
        }
      },
      {
        "text": "uint32_t minSequenceCountBufferOffsetAlignment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minSequenceCountBufferOffsetAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdProcessCommandsNVX"
            }
          ],
          "description": " the minimum alignment for memory addresses optionally used in {#0#}."
        }
      },
      {
        "text": "uint32_t minSequenceIndexBufferOffsetAlignment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minSequenceIndexBufferOffsetAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdProcessCommandsNVX"
            }
          ],
          "description": " the minimum alignment for memory addresses optionally used in {#0#}."
        }
      },
      {
        "text": "uint32_t minCommandsTokenBufferOffsetAlignment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minCommandsTokenBufferOffsetAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdProcessCommandsNVX"
            }
          ],
          "description": " the minimum alignment for memory addresses optionally used in {#0#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX",
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Structure specifying physical device limits"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkIndirectCommandsTokenNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkIndirectCommandsTokenTypeNVX tokenType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tokenType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkIndirectCommandsTokenTypeNVX",
        "enumRawType": "VkIndirectCommandsTokenTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the token command type."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " where the arguments start."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Structure specifying parameters for the reservation of command buffer space"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkIndirectCommandsLayoutTokenNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkIndirectCommandsTokenTypeNVX tokenType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tokenType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkIndirectCommandsTokenTypeNVX",
        "enumRawType": "VkIndirectCommandsTokenTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t bindingUnit",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindingUnit",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " has a different meaning depending on the type, please refer pseudo code further down for details."
        }
      },
      {
        "text": "uint32_t dynamicCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dynamicCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " has a different meaning depending on the type, please refer pseudo code further down for details."
        }
      },
      {
        "text": "uint32_t divisor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "divisor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " defines the rate at which the input data buffers are accessed."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Struct specifying the details of an indirect command layout token"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkIndirectCommandsLayoutCreateInfoNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineBindPoint"
            }
          ],
          "description": " is the {#0#} that this layout targets."
        }
      },
      {
        "text": "VkIndirectCommandsLayoutUsageFlagsNVX flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkIndirectCommandsLayoutUsageFlagBitsNVX",
        "bitmaskRawType": "VkIndirectCommandsLayoutUsageFlagsNVX",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkIndirectCommandsLayoutUsageFlagBitsNVX"
            }
          ],
          "description": " is a bitmask of {#0#} specifying usage hints of this layout."
        }
      },
      {
        "text": "uint32_t tokenCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "tokenCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the length of the individual command sequnce."
        }
      },
      {
        "text": "const VkIndirectCommandsLayoutTokenNVX * pTokens",
        "type": "VkIndirectCommandsLayoutTokenNVX",
        "rawType": "const VkIndirectCommandsLayoutTokenNVX *",
        "name": "pTokens",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "tokenCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkIndirectCommandsLayoutTokenNVX"
            },
            {
              "kind": "elink",
              "value": "VkIndirectCommandsTokenTypeNVX"
            }
          ],
          "description": " is an array describing each command token in detail. See {#1#} and {#0#} below for details."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX",
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Structure specifying the parameters of a newly created indirect commands layout object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCmdProcessCommandsInfoNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkObjectTableNVX objectTable",
        "type": "VkObjectTableNVX",
        "rawType": "VkObjectTableNVX",
        "name": "objectTable",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdReserveSpaceForCommandsNVX"
            },
            {
              "kind": "slink",
              "value": "VkObjectTableNVX"
            }
          ],
          "description": " is the {#1#} to be used for the generation process. Only registered objects at the time {#0#} is called, will be taken into account for the reservation."
        }
      },
      {
        "text": "VkIndirectCommandsLayoutNVX indirectCommandsLayout",
        "type": "VkIndirectCommandsLayoutNVX",
        "rawType": "VkIndirectCommandsLayoutNVX",
        "name": "indirectCommandsLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkIndirectCommandsLayoutNVX"
            }
          ],
          "description": " is the {#0#} that provides the command sequence to generate."
        }
      },
      {
        "text": "uint32_t indirectCommandsTokenCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "indirectCommandsTokenCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " defines the number of input tokens used."
        }
      },
      {
        "text": "const VkIndirectCommandsTokenNVX * pIndirectCommandsTokens",
        "type": "VkIndirectCommandsTokenNVX",
        "rawType": "const VkIndirectCommandsTokenNVX *",
        "name": "pIndirectCommandsTokens",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "indirectCommandsTokenCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkIndirectCommandsTokenNVX"
            }
          ],
          "description": " provides an array of {#0#} that reference the input data for each token command."
        }
      },
      {
        "text": "uint32_t maxSequencesCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSequencesCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "sequencesCountBuffer"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is the maximum number of sequences for which command buffer space will be reserved. If {#0#} is {#1#}, this is also the actual number of sequences generated."
        }
      },
      {
        "text": "VkCommandBuffer targetCommandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "targetCommandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "slink",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "pname",
              "value": "targetCommandBuffer"
            }
          ],
          "description": " {#0#} be the secondary {#2#} in which the commands should be recorded. If {#3#} is <i>null</i> an implicit reservation as well as execution takes place on the processing {#1#}."
        }
      },
      {
        "text": "VkBuffer sequencesCountBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "sequencesCountBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkBuffer"
            },
            {
              "kind": "code",
              "value": "uint32_t"
            }
          ],
          "description": " {#0#} be {#1#} from which the actual amount of sequences is sourced from as {#2#} value."
        }
      },
      {
        "text": "VkDeviceSize sequencesCountOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "sequencesCountOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "sequencesCountBuffer"
            }
          ],
          "description": " is the byte offset into {#0#} where the count value is stored."
        }
      },
      {
        "text": "VkBuffer sequencesIndexBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "sequencesIndexBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX"
            },
            {
              "kind": "pname",
              "value": "indirectCommandsLayout"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            },
            {
              "kind": "code",
              "value": "uint32_t"
            }
          ],
          "description": " {#0#} be set if {#3#}'s {#2#} is set and provides the used sequence indices as {#5#} array. Otherwise it {#1#} be {#4#}."
        }
      },
      {
        "text": "VkDeviceSize sequencesIndexOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "sequencesIndexOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "sequencesIndexBuffer"
            }
          ],
          "description": " is the byte offset into {#0#} where the index values start."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX",
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Structure specifying parameters for the generation of commands"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCmdReserveSpaceForCommandsInfoNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkObjectTableNVX objectTable",
        "type": "VkObjectTableNVX",
        "rawType": "VkObjectTableNVX",
        "name": "objectTable",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdReserveSpaceForCommandsNVX"
            },
            {
              "kind": "slink",
              "value": "VkObjectTableNVX"
            }
          ],
          "description": " is the {#1#} to be used for the generation process. Only registered objects at the time {#0#} is called, will be taken into account for the reservation."
        }
      },
      {
        "text": "VkIndirectCommandsLayoutNVX indirectCommandsLayout",
        "type": "VkIndirectCommandsLayoutNVX",
        "rawType": "VkIndirectCommandsLayoutNVX",
        "name": "indirectCommandsLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkIndirectCommandsLayoutNVX"
            }
          ],
          "description": " is the {#1#} that {#0#} also be used at generation time."
        }
      },
      {
        "text": "uint32_t maxSequencesCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSequencesCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of sequences for which command buffer space will be reserved."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX",
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Structure specifying parameters for the reservation of command buffer space"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkObjectTableCreateInfoNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t objectCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "objectCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of entry configurations that the object table supports."
        }
      },
      {
        "text": "const VkObjectEntryTypeNVX * pObjectEntryTypes",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pObjectEntryTypes",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "const VkObjectEntryTypeNVX *",
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkObjectEntryTypeNVX"
            }
          ],
          "description": " is an array of {#0#} values providing the entry type of a given configuration."
        }
      },
      {
        "text": "const uint32_t * pObjectEntryCounts",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pObjectEntryCounts",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of counts of how many objects can be registered in the table."
        }
      },
      {
        "text": "const VkObjectEntryUsageFlagsNVX * pObjectEntryUsageFlags",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pObjectEntryUsageFlags",
        "isConstant": true,
        "dereferenceCount": 1,
        "bitmaskType": "VkObjectEntryUsageFlagBitsNVX",
        "bitmaskRawType": "const VkObjectEntryUsageFlagsNVX *",
        "isBitmaskType": true,
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkObjectEntryUsageFlagBitsNVX"
            }
          ],
          "description": " is an array of bitmasks of {#0#} specifying the binding usage of the entry."
        }
      },
      {
        "text": "uint32_t maxUniformBuffersPerDescriptor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxUniformBuffersPerDescriptor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC"
            }
          ],
          "description": " is the maximum number of {#1#} or {#2#} used by any single registered {#0#} in this table."
        }
      },
      {
        "text": "uint32_t maxStorageBuffersPerDescriptor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxStorageBuffersPerDescriptor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC"
            }
          ],
          "description": " is the maximum number of {#1#} or {#2#} used by any single registered {#0#} in this table."
        }
      },
      {
        "text": "uint32_t maxStorageImagesPerDescriptor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxStorageImagesPerDescriptor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER"
            }
          ],
          "description": " is the maximum number of {#1#} or {#2#} used by any single registered {#0#} in this table."
        }
      },
      {
        "text": "uint32_t maxSampledImagesPerDescriptor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSampledImagesPerDescriptor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_SAMPLER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT"
            }
          ],
          "description": " is the maximum number of {#1#}, {#2#}, {#3#} or {#4#} used by any single registered {#0#} in this table."
        }
      },
      {
        "text": "uint32_t maxPipelineLayouts",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPipelineLayouts",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPipelineLayout"
            },
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "sname",
              "value": "VkPipeline"
            }
          ],
          "description": " is the maximum number of unique {#0#} used by any registered {#1#} or {#2#} in this table."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX",
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Structure specifying the parameters of a newly created object table"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkObjectTableEntryNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkObjectEntryTypeNVX type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "VkObjectEntryTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " defines the entry type"
        }
      },
      {
        "text": "VkObjectEntryUsageFlagsNVX flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkObjectEntryUsageFlagBitsNVX",
        "bitmaskRawType": "VkObjectEntryUsageFlagsNVX",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineBindPoint"
            }
          ],
          "description": " defines which {#0#} the resource can be used with. Some entry types allow only a single flag to be set."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Common parameters of an object table resource entry"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkObjectTablePipelineEntryNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkObjectEntryTypeNVX type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "VkObjectEntryTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkObjectEntryUsageFlagsNVX flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkObjectEntryUsageFlagBitsNVX",
        "bitmaskRawType": "VkObjectEntryUsageFlagsNVX",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipeline"
            }
          ],
          "description": " specifies the {#0#} that this resource entry references."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Parameters of an object table pipeline entry"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkObjectTableDescriptorSetEntryNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkObjectEntryTypeNVX type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "VkObjectEntryTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkObjectEntryUsageFlagsNVX flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkObjectEntryUsageFlagBitsNVX",
        "bitmaskRawType": "VkObjectEntryUsageFlagsNVX",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPipelineLayout pipelineLayout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "pipelineLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineLayout"
            },
            {
              "kind": "pname",
              "value": "descriptorSet"
            }
          ],
          "description": " specifies the {#0#} that the {#1#} is used with."
        }
      },
      {
        "text": "VkDescriptorSet descriptorSet",
        "type": "VkDescriptorSet",
        "rawType": "VkDescriptorSet",
        "name": "descriptorSet",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSet"
            }
          ],
          "description": " specifies the {#0#} that can be bound with this entry."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Parameters of an object table descriptor set entry"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkObjectTableVertexBufferEntryNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkObjectEntryTypeNVX type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "VkObjectEntryTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkObjectEntryUsageFlagsNVX flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkObjectEntryUsageFlagBitsNVX",
        "bitmaskRawType": "VkObjectEntryUsageFlagsNVX",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBuffer"
            }
          ],
          "description": " specifies the {#0#} that can be bound as vertex bufer"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Parameters of an object table vertex buffer entry"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkObjectTableIndexBufferEntryNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkObjectEntryTypeNVX type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "VkObjectEntryTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkObjectEntryUsageFlagsNVX flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkObjectEntryUsageFlagBitsNVX",
        "bitmaskRawType": "VkObjectEntryUsageFlagsNVX",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBuffer"
            }
          ],
          "description": " specifies the {#0#} that can be bound as index buffer"
        }
      },
      {
        "text": "VkIndexType indexType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "indexType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkIndexType",
        "enumRawType": "VkIndexType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkIndexType"
            }
          ],
          "description": " specifies the {#0#} used with this index buffer"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Parameters of an object table index buffer entry"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkObjectTablePushConstantEntryNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkObjectEntryTypeNVX type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "VkObjectEntryTypeNVX",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkObjectEntryUsageFlagsNVX flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkObjectEntryUsageFlagBitsNVX",
        "bitmaskRawType": "VkObjectEntryUsageFlagsNVX",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPipelineLayout pipelineLayout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "pipelineLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineLayout"
            }
          ],
          "description": " specifies the {#0#} that the pushconstants are used with"
        }
      },
      {
        "text": "VkShaderStageFlags stageFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stageFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkShaderStageFlags"
            }
          ],
          "description": " specifies the {#0#} that the pushconstants are used with"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Parameters of an object table push constant entry"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFeatures2",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDeviceFeatures features",
        "type": "VkPhysicalDeviceFeatures",
        "rawType": "VkPhysicalDeviceFeatures",
        "name": "features",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2",
    "extensions": [
      "VkPhysicalDeviceVariablePointersFeatures",
      "VkPhysicalDeviceMultiviewFeatures",
      "VkPhysicalDevice16BitStorageFeatures",
      "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",
      "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
      "VkPhysicalDeviceProtectedMemoryFeatures",
      "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
      "VkPhysicalDeviceInlineUniformBlockFeaturesEXT",
      "VkPhysicalDeviceShaderDrawParametersFeatures",
      "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR",
      "VkPhysicalDeviceHostQueryResetFeaturesEXT",
      "VkPhysicalDeviceDescriptorIndexingFeaturesEXT",
      "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR",
      "VkPhysicalDevice8BitStorageFeaturesKHR",
      "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
      "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR",
      "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR",
      "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
      "VkPhysicalDeviceASTCDecodeFeaturesEXT",
      "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
      "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
      "VkPhysicalDeviceExclusiveScissorFeaturesNV",
      "VkPhysicalDeviceCornerSampledImageFeaturesNV",
      "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
      "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
      "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
      "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
      "VkPhysicalDeviceShadingRateImageFeaturesNV",
      "VkPhysicalDeviceMeshShaderFeaturesNV",
      "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
      "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT",
      "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",
      "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
      "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
      "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
      "VkPhysicalDeviceImagelessFramebufferFeaturesKHR",
      "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT",
      "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
      "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
      "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
      "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
      "VkPhysicalDeviceShaderClockFeaturesKHR",
      "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
      "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
      "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
      "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
      "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
      "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
      "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT",
      "VkPhysicalDeviceLineRasterizationFeaturesEXT",
      "VkPhysicalDeviceCoherentMemoryFeaturesAMD"
    ],
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the fine-grained features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFeatures2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDeviceFeatures features",
        "type": "VkPhysicalDeviceFeatures",
        "rawType": "VkPhysicalDeviceFeatures",
        "name": "features",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceFeatures2",
    "extends": [
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR",
    "extensions": [
      "VkPhysicalDeviceVariablePointersFeatures",
      "VkPhysicalDeviceMultiviewFeatures",
      "VkPhysicalDevice16BitStorageFeatures",
      "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",
      "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
      "VkPhysicalDeviceProtectedMemoryFeatures",
      "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
      "VkPhysicalDeviceInlineUniformBlockFeaturesEXT",
      "VkPhysicalDeviceShaderDrawParametersFeatures",
      "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR",
      "VkPhysicalDeviceHostQueryResetFeaturesEXT",
      "VkPhysicalDeviceDescriptorIndexingFeaturesEXT",
      "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR",
      "VkPhysicalDevice8BitStorageFeaturesKHR",
      "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
      "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR",
      "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR",
      "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
      "VkPhysicalDeviceASTCDecodeFeaturesEXT",
      "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
      "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
      "VkPhysicalDeviceExclusiveScissorFeaturesNV",
      "VkPhysicalDeviceCornerSampledImageFeaturesNV",
      "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
      "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
      "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
      "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
      "VkPhysicalDeviceShadingRateImageFeaturesNV",
      "VkPhysicalDeviceMeshShaderFeaturesNV",
      "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
      "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT",
      "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",
      "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
      "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
      "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
      "VkPhysicalDeviceImagelessFramebufferFeaturesKHR",
      "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT",
      "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
      "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
      "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
      "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
      "VkPhysicalDeviceShaderClockFeaturesKHR",
      "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
      "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
      "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
      "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
      "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
      "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
      "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT",
      "VkPhysicalDeviceLineRasterizationFeaturesEXT",
      "VkPhysicalDeviceCoherentMemoryFeaturesAMD"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceProperties2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDeviceProperties properties",
        "type": "VkPhysicalDeviceProperties",
        "rawType": "VkPhysicalDeviceProperties",
        "name": "properties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2",
    "extensions": [
      "VkPhysicalDevicePushDescriptorPropertiesKHR",
      "VkPhysicalDeviceDriverPropertiesKHR",
      "VkPhysicalDeviceIDProperties",
      "VkPhysicalDeviceMultiviewProperties",
      "VkPhysicalDeviceDiscardRectanglePropertiesEXT",
      "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX",
      "VkPhysicalDeviceSubgroupProperties",
      "VkPhysicalDevicePointClippingProperties",
      "VkPhysicalDeviceProtectedMemoryProperties",
      "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT",
      "VkPhysicalDeviceSampleLocationsPropertiesEXT",
      "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT",
      "VkPhysicalDeviceInlineUniformBlockPropertiesEXT",
      "VkPhysicalDeviceMaintenance3Properties",
      "VkPhysicalDeviceFloatControlsPropertiesKHR",
      "VkPhysicalDeviceExternalMemoryHostPropertiesEXT",
      "VkPhysicalDeviceConservativeRasterizationPropertiesEXT",
      "VkPhysicalDeviceShaderCorePropertiesAMD",
      "VkPhysicalDeviceShaderCoreProperties2AMD",
      "VkPhysicalDeviceDescriptorIndexingPropertiesEXT",
      "VkPhysicalDeviceTimelineSemaphorePropertiesKHR",
      "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT",
      "VkPhysicalDevicePCIBusInfoPropertiesEXT",
      "VkPhysicalDeviceDepthStencilResolvePropertiesKHR",
      "VkPhysicalDeviceTransformFeedbackPropertiesEXT",
      "VkPhysicalDeviceShadingRateImagePropertiesNV",
      "VkPhysicalDeviceMeshShaderPropertiesNV",
      "VkPhysicalDeviceRayTracingPropertiesNV",
      "VkPhysicalDeviceFragmentDensityMapPropertiesEXT",
      "VkPhysicalDeviceCooperativeMatrixPropertiesNV",
      "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV",
      "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT",
      "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT",
      "VkPhysicalDeviceLineRasterizationPropertiesEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure specifying physical device properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDeviceProperties properties",
        "type": "VkPhysicalDeviceProperties",
        "rawType": "VkPhysicalDeviceProperties",
        "name": "properties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceProperties2",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR",
    "extensions": [
      "VkPhysicalDevicePushDescriptorPropertiesKHR",
      "VkPhysicalDeviceDriverPropertiesKHR",
      "VkPhysicalDeviceIDProperties",
      "VkPhysicalDeviceMultiviewProperties",
      "VkPhysicalDeviceDiscardRectanglePropertiesEXT",
      "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX",
      "VkPhysicalDeviceSubgroupProperties",
      "VkPhysicalDevicePointClippingProperties",
      "VkPhysicalDeviceProtectedMemoryProperties",
      "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT",
      "VkPhysicalDeviceSampleLocationsPropertiesEXT",
      "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT",
      "VkPhysicalDeviceInlineUniformBlockPropertiesEXT",
      "VkPhysicalDeviceMaintenance3Properties",
      "VkPhysicalDeviceFloatControlsPropertiesKHR",
      "VkPhysicalDeviceExternalMemoryHostPropertiesEXT",
      "VkPhysicalDeviceConservativeRasterizationPropertiesEXT",
      "VkPhysicalDeviceShaderCorePropertiesAMD",
      "VkPhysicalDeviceShaderCoreProperties2AMD",
      "VkPhysicalDeviceDescriptorIndexingPropertiesEXT",
      "VkPhysicalDeviceTimelineSemaphorePropertiesKHR",
      "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT",
      "VkPhysicalDevicePCIBusInfoPropertiesEXT",
      "VkPhysicalDeviceDepthStencilResolvePropertiesKHR",
      "VkPhysicalDeviceTransformFeedbackPropertiesEXT",
      "VkPhysicalDeviceShadingRateImagePropertiesNV",
      "VkPhysicalDeviceMeshShaderPropertiesNV",
      "VkPhysicalDeviceRayTracingPropertiesNV",
      "VkPhysicalDeviceFragmentDensityMapPropertiesEXT",
      "VkPhysicalDeviceCooperativeMatrixPropertiesNV",
      "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV",
      "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT",
      "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT",
      "VkPhysicalDeviceLineRasterizationPropertiesEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFormatProperties2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormatProperties formatProperties",
        "type": "VkFormatProperties",
        "rawType": "VkFormatProperties",
        "name": "formatProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2",
    "extensions": [
      "VkDrmFormatModifierPropertiesListEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Structure specifying image format properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFormatProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormatProperties formatProperties",
        "type": "VkFormatProperties",
        "rawType": "VkFormatProperties",
        "name": "formatProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkFormatProperties2",
    "sType": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR",
    "extensions": [
      "VkDrmFormatModifierPropertiesListEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageFormatProperties2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageFormatProperties imageFormatProperties",
        "type": "VkImageFormatProperties",
        "rawType": "VkImageFormatProperties",
        "name": "imageFormatProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2",
    "extensions": [
      "VkExternalImageFormatProperties",
      "VkSamplerYcbcrConversionImageFormatProperties",
      "VkTextureLODGatherFormatPropertiesAMD",
      "VkAndroidHardwareBufferUsageANDROID",
      "VkFilterCubicImageViewImageFormatPropertiesEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying an image format properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageFormatProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageFormatProperties imageFormatProperties",
        "type": "VkImageFormatProperties",
        "rawType": "VkImageFormatProperties",
        "name": "imageFormatProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkImageFormatProperties2",
    "sType": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR",
    "extensions": [
      "VkExternalImageFormatProperties",
      "VkSamplerYcbcrConversionImageFormatProperties",
      "VkTextureLODGatherFormatPropertiesAMD",
      "VkAndroidHardwareBufferUsageANDROID",
      "VkFilterCubicImageViewImageFormatPropertiesEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceImageFormatInfo2",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageCreateFlagBits",
        "bitmaskRawType": "VkImageCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2",
    "extensions": [
      "VkPhysicalDeviceExternalImageFormatInfo",
      "VkImageFormatListCreateInfoKHR",
      "VkPhysicalDeviceImageDrmFormatModifierInfoEXT",
      "VkImageStencilUsageCreateInfoEXT",
      "VkPhysicalDeviceImageViewImageFormatInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying image creation parameters"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceImageFormatInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageCreateFlagBits",
        "bitmaskRawType": "VkImageCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceImageFormatInfo2",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR",
    "extensions": [
      "VkPhysicalDeviceExternalImageFormatInfo",
      "VkImageFormatListCreateInfoKHR",
      "VkPhysicalDeviceImageDrmFormatModifierInfoEXT",
      "VkImageStencilUsageCreateInfoEXT",
      "VkPhysicalDeviceImageViewImageFormatInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkQueueFamilyProperties2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkQueueFamilyProperties queueFamilyProperties",
        "type": "VkQueueFamilyProperties",
        "rawType": "VkQueueFamilyProperties",
        "name": "queueFamilyProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2",
    "extensions": [
      "VkQueueFamilyCheckpointPropertiesNV"
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure providing information about a queue family"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkQueueFamilyProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkQueueFamilyProperties queueFamilyProperties",
        "type": "VkQueueFamilyProperties",
        "rawType": "VkQueueFamilyProperties",
        "name": "queueFamilyProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkQueueFamilyProperties2",
    "sType": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR",
    "extensions": [
      "VkQueueFamilyCheckpointPropertiesNV"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMemoryProperties2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDeviceMemoryProperties memoryProperties",
        "type": "VkPhysicalDeviceMemoryProperties",
        "rawType": "VkPhysicalDeviceMemoryProperties",
        "name": "memoryProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2",
    "extensions": [
      "VkPhysicalDeviceMemoryBudgetPropertiesEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure specifying physical device memory properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMemoryProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDeviceMemoryProperties memoryProperties",
        "type": "VkPhysicalDeviceMemoryProperties",
        "rawType": "VkPhysicalDeviceMemoryProperties",
        "name": "memoryProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceMemoryProperties2",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR",
    "extensions": [
      "VkPhysicalDeviceMemoryBudgetPropertiesEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageFormatProperties2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSparseImageFormatProperties properties",
        "type": "VkSparseImageFormatProperties",
        "rawType": "VkSparseImageFormatProperties",
        "name": "properties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2",
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying sparse image format properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageFormatProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSparseImageFormatProperties properties",
        "type": "VkSparseImageFormatProperties",
        "rawType": "VkSparseImageFormatProperties",
        "name": "properties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkSparseImageFormatProperties2",
    "sType": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSparseImageFormatInfo2",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSampleCountFlagBits samples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2",
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure specifying sparse image format inputs"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSparseImageFormatInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSampleCountFlagBits samples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceSparseImageFormatInfo2",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevicePushDescriptorPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxPushDescriptors",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPushDescriptors",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR"
            }
          ],
          "description": " is the maximum number of descriptors that {#0#} be used in a descriptor set created with {#1#} set."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing push descriptor limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkConformanceVersionKHR",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "uint8_t major",
        "type": "uint8_t",
        "rawType": "uint8_t",
        "name": "major",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the major version number of the conformance test suite."
        }
      },
      {
        "text": "uint8_t minor",
        "type": "uint8_t",
        "rawType": "uint8_t",
        "name": "minor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the minor version number of the conformance test suite."
        }
      },
      {
        "text": "uint8_t subminor",
        "type": "uint8_t",
        "rawType": "uint8_t",
        "name": "subminor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the subminor version number of the conformance test suite."
        }
      },
      {
        "text": "uint8_t patch",
        "type": "uint8_t",
        "rawType": "uint8_t",
        "name": "patch",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the patch version number of the conformance test suite."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure containing the conformance test suite version the implementation is compliant with"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceDriverPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension specific structure."
        }
      },
      {
        "text": "VkDriverIdKHR driverID",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "driverID",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDriverIdKHR",
        "enumRawType": "VkDriverIdKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a unique identifier for the driver of the physical device."
        }
      },
      {
        "text": "char driverName [ VK_MAX_DRIVER_NAME_SIZE_KHR ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DRIVER_NAME_SIZE_KHR ]",
        "name": "driverName",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "char driverInfo [ VK_MAX_DRIVER_INFO_SIZE_KHR ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DRIVER_INFO_SIZE_KHR ]",
        "name": "driverInfo",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkConformanceVersionKHR conformanceVersion",
        "type": "VkConformanceVersionKHR",
        "rawType": "VkConformanceVersionKHR",
        "name": "conformanceVersion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkConformanceVersionKHR"
            }
          ],
          "description": " is the version of the Vulkan conformance test this driver is conformant against (see {#0#})."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure containing driver identification information"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPresentRegionsKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t swapchainCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "swapchainCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of swapchains being presented to by this command."
        }
      },
      {
        "text": "const VkPresentRegionKHR * pRegions",
        "type": "VkPresentRegionKHR",
        "rawType": "const VkPresentRegionKHR *",
        "name": "pRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPresentRegionKHR"
            },
            {
              "kind": "sname",
              "value": "VkPresentInfoKHR"
            },
            {
              "kind": "pname",
              "value": "swapchainCount"
            },
            {
              "kind": "pname",
              "value": "pRegions"
            },
            {
              "kind": "pname",
              "value": "pSwapchains"
            }
          ],
          "description": " is <i>null</i> or a reference to an array of {#0#} elements with {#2#} entries. If not <i>null</i>, each element of {#3#} contains the region that has changed since the last present to the swapchain in the corresponding entry in the {#1#}::{#4#} array."
        }
      }
    ],
    "extends": [
      "VkPresentInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_incremental_present",
      "description": "Structure hint of rectangular regions changed by vkQueuePresentKHR"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPresentRegionKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t rectangleCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "rectangleCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkRectLayerKHR * pRectangles",
        "type": "VkRectLayerKHR",
        "rawType": "const VkRectLayerKHR *",
        "name": "pRectangles",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "rectangleCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkRectLayerKHR"
            },
            {
              "kind": "sname",
              "value": "VkRectLayerKHR"
            },
            {
              "kind": "pname",
              "value": "pRectangles"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#1#} structures. The {#2#} structure is the framebuffer coordinates, plus layer, of a portion of a presentable image that has changed and {#0#} be presented. If non-<i>null</i>, each entry in {#3#} is a rectangle of the given image that has changed since the last image was presented to the given swapchain."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_incremental_present",
      "description": "Structure containing rectangular region changed by vkQueuePresentKHR for a given VkImage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRectLayerKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkOffset2D offset",
        "type": "VkOffset2D",
        "rawType": "VkOffset2D",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the origin of the rectangle, in pixels."
        }
      },
      {
        "text": "VkExtent2D extent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "extent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the size of the rectangle, in pixels."
        }
      },
      {
        "text": "uint32_t layer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "layer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "layer"
            }
          ],
          "description": " is the layer of the image. For images with only one layer, the value of {#1#} {#0#} be 0."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_incremental_present",
      "description": "Structure containing a rectangle, including layer, changed by vkQueuePresentKHR for a given VkImage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceVariablePointersFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointersStorageBuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointersStorageBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointers",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing variable references features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceVariablePointersFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointersStorageBuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointersStorageBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointers",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceVariablePointersFeatures",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceVariablePointerFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointersStorageBuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointersStorageBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointers",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceVariablePointersFeatures",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceVariablePointerFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointersStorageBuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointersStorageBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 variablePointers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variablePointers",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceVariablePointersFeatures",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalMemoryProperties",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkExternalMemoryFeatureFlags externalMemoryFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalMemoryFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryFeatureFlagBits",
        "bitmaskRawType": "VkExternalMemoryFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags exportFromImportedHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "exportFromImportedHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags compatibleHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compatibleHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying external memory handle type capabilities"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalMemoryPropertiesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkExternalMemoryFeatureFlags externalMemoryFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalMemoryFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryFeatureFlagBits",
        "bitmaskRawType": "VkExternalMemoryFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags exportFromImportedHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "exportFromImportedHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags compatibleHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compatibleHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExternalMemoryProperties",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalImageFormatInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceImageFormatInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying external image creation parameters"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalImageFormatInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceExternalImageFormatInfo",
    "extends": [
      "VkPhysicalDeviceImageFormatInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalImageFormatProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryProperties externalMemoryProperties",
        "type": "VkExternalMemoryProperties",
        "rawType": "VkExternalMemoryProperties",
        "name": "externalMemoryProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkImageFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying supported external handle properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalImageFormatPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryProperties externalMemoryProperties",
        "type": "VkExternalMemoryProperties",
        "rawType": "VkExternalMemoryProperties",
        "name": "externalMemoryProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExternalImageFormatProperties",
    "extends": [
      "VkImageFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalBufferInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBufferCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBufferCreateFlagBits",
        "bitmaskRawType": "VkBufferCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBufferUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBufferUsageFlagBits",
        "bitmaskRawType": "VkBufferUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying buffer creation parameters"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalBufferInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBufferCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBufferCreateFlagBits",
        "bitmaskRawType": "VkBufferCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBufferUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBufferUsageFlagBits",
        "bitmaskRawType": "VkBufferUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceExternalBufferInfo",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalBufferProperties",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryProperties externalMemoryProperties",
        "type": "VkExternalMemoryProperties",
        "rawType": "VkExternalMemoryProperties",
        "name": "externalMemoryProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkBufferCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying supported external handle capabilities"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalBufferPropertiesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryProperties externalMemoryProperties",
        "type": "VkExternalMemoryProperties",
        "rawType": "VkExternalMemoryProperties",
        "name": "externalMemoryProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExternalBufferProperties",
    "extends": [
      "VkBufferCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceIDProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint8_t deviceUUID [ VK_UUID_SIZE ]",
        "type": "uint8_t",
        "rawType": "uint8_t [ VK_UUID_SIZE ]",
        "name": "deviceUUID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint8_t driverUUID [ VK_UUID_SIZE ]",
        "type": "uint8_t",
        "rawType": "uint8_t [ VK_UUID_SIZE ]",
        "name": "driverUUID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint8_t deviceLUID [ VK_LUID_SIZE ]",
        "type": "uint8_t",
        "rawType": "uint8_t [ VK_LUID_SIZE ]",
        "name": "deviceLUID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "8",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceNodeMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceNodeMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 deviceLUIDValid",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceLUIDValid",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure specifying IDs related to the physical device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceIDPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint8_t deviceUUID [ VK_UUID_SIZE ]",
        "type": "uint8_t",
        "rawType": "uint8_t [ VK_UUID_SIZE ]",
        "name": "deviceUUID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint8_t driverUUID [ VK_UUID_SIZE ]",
        "type": "uint8_t",
        "rawType": "uint8_t [ VK_UUID_SIZE ]",
        "name": "driverUUID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint8_t deviceLUID [ VK_LUID_SIZE ]",
        "type": "uint8_t",
        "rawType": "uint8_t [ VK_LUID_SIZE ]",
        "name": "deviceLUID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "8",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceNodeMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceNodeMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 deviceLUIDValid",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceLUIDValid",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceIDProperties",
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalMemoryImageCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that an image may be backed by external memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalMemoryImageCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExternalMemoryImageCreateInfo",
    "extends": [
      "VkImageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalMemoryBufferCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkBufferCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that a buffer may be backed by external memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalMemoryBufferCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExternalMemoryBufferCreateInfo",
    "extends": [
      "VkBufferCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportMemoryAllocateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO",
    "extensions": [
      "VkExportMemoryWin32HandleInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Specify exportable handle types for a device memory object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportMemoryAllocateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExportMemoryAllocateInfo",
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR",
    "extensions": [
      "VkExportMemoryWin32HandleInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportMemoryWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "HANDLE handle",
        "type": "HANDLE",
        "rawType": "HANDLE",
        "name": "handle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the external handle to import, or <i>null</i>."
        }
      },
      {
        "text": "LPCWSTR name",
        "type": "LPCWSTR",
        "rawType": "LPCWSTR",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a UTF-16 string naming the underlying memory resource to import, or <i>null</i>."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "import Win32 memory created on the same physical device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportMemoryWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "const SECURITY_ATTRIBUTES * pAttributes",
        "type": "SECURITY_ATTRIBUTES",
        "rawType": "const SECURITY_ATTRIBUTES *",
        "name": "pAttributes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "SECURITY_ATTRIBUTES"
            }
          ],
          "description": " is a reference to a Windows {#0#} structure specifying security attributes of the handle."
        }
      },
      {
        "text": "DWORD dwAccess",
        "type": "DWORD",
        "rawType": "DWORD",
        "name": "dwAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "DWORD"
            }
          ],
          "description": " is a {#0#} specifying access rights of the handle."
        }
      },
      {
        "text": "LPCWSTR name",
        "type": "LPCWSTR",
        "rawType": "LPCWSTR",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a UTF-16 string to associate with the underlying resource referenced by NT handles exported from the created memory."
        }
      }
    ],
    "extends": [
      "VkExportMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure specifying additional attributes of Windows handles exported from a memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryWin32HandlePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t memoryTypeBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryTypeBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is a bitmask containing one bit set for every memory type which the specified windows handle {#0#} be imported as."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Properties of External Memory Windows Handles"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryGetWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the memory object from which the handle will be exported."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of handle requested."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure describing a Win32 handle semaphore export operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportMemoryFdInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "int fd",
        "type": "int",
        "rawType": "int",
        "name": "fd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the external handle to import."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "import memory created on the same physical device from a file descriptor"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryFdPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t memoryTypeBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryTypeBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is a bitmask containing one bit set for every memory type which the specified file descriptor {#0#} be imported as."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Properties of External Memory File Descriptors"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryGetFdInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the memory object from which the handle will be exported."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of handle requested."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure describing a POSIX FD semaphore export operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkWin32KeyedMutexAcquireReleaseInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t acquireCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "acquireCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDeviceMemory * pAcquireSyncs",
        "type": "VkDeviceMemory",
        "rawType": "const VkDeviceMemory *",
        "name": "pAcquireSyncs",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "acquireCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is an array of {#0#} objects which were imported from Direct3D 11 resources."
        }
      },
      {
        "text": "const uint64_t * pAcquireKeys",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pAcquireKeys",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "acquireCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pAcquireSyncs"
            }
          ],
          "description": " is an array of mutex key values to wait for prior to beginning the submitted work. Entries refer to the keyed mutex associated with the corresponding entries in {#0#}."
        }
      },
      {
        "text": "const uint32_t * pAcquireTimeouts",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pAcquireTimeouts",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "acquireCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t releaseCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "releaseCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDeviceMemory * pReleaseSyncs",
        "type": "VkDeviceMemory",
        "rawType": "const VkDeviceMemory *",
        "name": "pReleaseSyncs",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "releaseCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is an array of {#0#} objects which were imported from Direct3D 11 resources."
        }
      },
      {
        "text": "const uint64_t * pReleaseKeys",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pReleaseKeys",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "releaseCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pReleaseSyncs"
            }
          ],
          "description": " is an array of mutex key values to set when the submitted work has completed. Entries refer to the keyed mutex associated with the corresponding entries in {#0#}."
        }
      }
    ],
    "extends": [
      "VkSubmitInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Use the Windows keyed mutex mechanism to synchronize work"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalSemaphoreInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
    "extensions": [
      "VkSemaphoreTypeCreateInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying semaphore creation parameters."
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalSemaphoreInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceExternalSemaphoreInfo",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR",
    "extensions": [
      "VkSemaphoreTypeCreateInfoKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalSemaphoreProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlags exportFromImportedHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "exportFromImportedHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlags compatibleHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compatibleHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreFeatureFlags externalSemaphoreFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalSemaphoreFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreFeatureFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure describing supported external semaphore handle features"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalSemaphorePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlags exportFromImportedHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "exportFromImportedHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlags compatibleHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compatibleHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreFeatureFlags externalSemaphoreFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalSemaphoreFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreFeatureFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExternalSemaphoreProperties",
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportSemaphoreCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkSemaphoreCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying handle types that can be exported from a semaphore"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportSemaphoreCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExportSemaphoreCreateInfo",
    "extensions": [
      "VkExportSemaphoreWin32HandleInfoKHR"
    ],
    "extends": [
      "VkSemaphoreCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportSemaphoreWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the semaphore into which the payload will be imported."
        }
      },
      {
        "text": "VkSemaphoreImportFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSemaphoreImportFlagBits",
        "bitmaskRawType": "VkSemaphoreImportFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSemaphoreImportFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional parameters for the semaphore payload import operation."
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "HANDLE handle",
        "type": "HANDLE",
        "rawType": "HANDLE",
        "name": "handle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the external handle to import, or <i>null</i>."
        }
      },
      {
        "text": "LPCWSTR name",
        "type": "LPCWSTR",
        "rawType": "LPCWSTR",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a UTF-16 string naming the underlying synchronization primitive to import, or <i>null</i>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying Windows handle to import to a semaphore"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportSemaphoreWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "const SECURITY_ATTRIBUTES * pAttributes",
        "type": "SECURITY_ATTRIBUTES",
        "rawType": "const SECURITY_ATTRIBUTES *",
        "name": "pAttributes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "SECURITY_ATTRIBUTES"
            }
          ],
          "description": " is a reference to a Windows {#0#} structure specifying security attributes of the handle."
        }
      },
      {
        "text": "DWORD dwAccess",
        "type": "DWORD",
        "rawType": "DWORD",
        "name": "dwAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "DWORD"
            }
          ],
          "description": " is a {#0#} specifying access rights of the handle."
        }
      },
      {
        "text": "LPCWSTR name",
        "type": "LPCWSTR",
        "rawType": "LPCWSTR",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a UTF-16 string to associate with the underlying synchronization primitive referenced by NT handles exported from the created semaphore."
        }
      }
    ],
    "extends": [
      "VkExportSemaphoreCreateInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying additional attributes of Windows handles exported from a semaphore"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkD3D12FenceSubmitInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t waitSemaphoreValuesCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreValuesCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pWaitSemaphoreValues"
            }
          ],
          "description": " is the number of semaphore wait values specified in {#0#}."
        }
      },
      {
        "text": "const uint64_t * pWaitSemaphoreValues",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pWaitSemaphoreValues",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "waitSemaphoreValuesCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubmitInfo"
            },
            {
              "kind": "pname",
              "value": "waitSemaphoreValuesCount"
            },
            {
              "kind": "pname",
              "value": "pWaitSemaphores"
            }
          ],
          "description": " is an array of {#1#} values for the corresponding semaphores in {#0#}::{#2#} to wait for."
        }
      },
      {
        "text": "uint32_t signalSemaphoreValuesCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "signalSemaphoreValuesCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pSignalSemaphoreValues"
            }
          ],
          "description": " is the number of semaphore signal values specified in {#0#}."
        }
      },
      {
        "text": "const uint64_t * pSignalSemaphoreValues",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pSignalSemaphoreValues",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "signalSemaphoreValuesCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubmitInfo"
            },
            {
              "kind": "pname",
              "value": "signalSemaphoreValuesCount"
            },
            {
              "kind": "pname",
              "value": "pSignalSemaphores"
            }
          ],
          "description": " is an array of {#1#} values for the corresponding semaphores in {#0#}::{#2#} to set when signaled."
        }
      }
    ],
    "extends": [
      "VkSubmitInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying values for Direct3D 12 fence-backed semaphores"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSemaphoreGetWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the semaphore from which state will be exported."
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of handle requested."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure describing a Win32 handle semaphore export operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportSemaphoreFdInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the semaphore into which the payload will be imported."
        }
      },
      {
        "text": "VkSemaphoreImportFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSemaphoreImportFlagBits",
        "bitmaskRawType": "VkSemaphoreImportFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSemaphoreImportFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional parameters for the semaphore payload import operation."
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "int fd",
        "type": "int",
        "rawType": "int",
        "name": "fd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the external handle to import."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying POSIX file descriptor to import to a semaphore"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSemaphoreGetFdInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the semaphore from which state will be exported."
        }
      },
      {
        "text": "VkExternalSemaphoreHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalSemaphoreHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalSemaphoreHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of handle requested."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure describing a POSIX FD semaphore export operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalFenceInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying fence creation parameters."
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalFenceInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceExternalFenceInfo",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalFenceProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlags exportFromImportedHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "exportFromImportedHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlags compatibleHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compatibleHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceFeatureFlags externalFenceFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalFenceFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceFeatureFlagBits",
        "bitmaskRawType": "VkExternalFenceFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure describing supported external fence handle features"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalFencePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlags exportFromImportedHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "exportFromImportedHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlags compatibleHandleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compatibleHandleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceFeatureFlags externalFenceFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalFenceFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceFeatureFlagBits",
        "bitmaskRawType": "VkExternalFenceFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExternalFenceProperties",
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportFenceCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkFenceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying handle types that can be exported from a fence"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportFenceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlags handleTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkExportFenceCreateInfo",
    "extends": [
      "VkFenceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportFenceWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the fence into which the state will be imported."
        }
      },
      {
        "text": "VkFenceImportFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFenceImportFlagBits",
        "bitmaskRawType": "VkFenceImportFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFenceImportFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional parameters for the fence payload import operation."
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "HANDLE handle",
        "type": "HANDLE",
        "rawType": "HANDLE",
        "name": "handle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the external handle to import, or <i>null</i>."
        }
      },
      {
        "text": "LPCWSTR name",
        "type": "LPCWSTR",
        "rawType": "LPCWSTR",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a UTF-16 string naming the underlying synchronization primitive to import, or <i>null</i>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "(None)"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExportFenceWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "const SECURITY_ATTRIBUTES * pAttributes",
        "type": "SECURITY_ATTRIBUTES",
        "rawType": "const SECURITY_ATTRIBUTES *",
        "name": "pAttributes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "SECURITY_ATTRIBUTES"
            }
          ],
          "description": " is a reference to a Windows {#0#} structure specifying security attributes of the handle."
        }
      },
      {
        "text": "DWORD dwAccess",
        "type": "DWORD",
        "rawType": "DWORD",
        "name": "dwAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "DWORD"
            }
          ],
          "description": " is a {#0#} specifying access rights of the handle."
        }
      },
      {
        "text": "LPCWSTR name",
        "type": "LPCWSTR",
        "rawType": "LPCWSTR",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a UTF-16 string to associate with the underlying synchronization primitive referenced by NT handles exported from the created fence."
        }
      }
    ],
    "extends": [
      "VkFenceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying additional attributes of Windows handles exported from a fence"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFenceGetWin32HandleInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the fence from which state will be exported."
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of handle requested."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure describing a Win32 handle fence export operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportFenceFdInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the fence into which the payload will be imported."
        }
      },
      {
        "text": "VkFenceImportFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFenceImportFlagBits",
        "bitmaskRawType": "VkFenceImportFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFenceImportFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional parameters for the fence payload import operation."
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "int fd",
        "type": "int",
        "rawType": "int",
        "name": "fd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the external handle to import."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "(None)"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFenceGetFdInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the fence from which state will be exported."
        }
      },
      {
        "text": "VkExternalFenceHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalFenceHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalFenceHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of handle requested."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure describing a POSIX FD fence export operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMultiviewFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 multiview",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiview",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 multiviewGeometryShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiviewGeometryShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 multiviewTessellationShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiviewTessellationShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing multiview features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMultiviewFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 multiview",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiview",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 multiviewGeometryShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiviewGeometryShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 multiviewTessellationShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "multiviewTessellationShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceMultiviewFeatures",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMultiviewProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t maxMultiviewViewCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMultiviewViewCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t maxMultiviewInstanceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMultiviewInstanceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing multiview limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMultiviewPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t maxMultiviewViewCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMultiviewViewCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t maxMultiviewInstanceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMultiviewInstanceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceMultiviewProperties",
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassMultiviewCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t subpassCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpassCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pViewMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pViewMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "subpassCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t dependencyCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dependencyCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const int32_t * pViewOffsets",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pViewOffsets",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dependencyCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t correlationMaskCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "correlationMaskCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pCorrelationMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pCorrelationMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "correlationMaskCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkRenderPassCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure containing multiview info for all subpasses"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassMultiviewCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t subpassCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpassCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pViewMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pViewMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "subpassCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t dependencyCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dependencyCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const int32_t * pViewOffsets",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pViewOffsets",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dependencyCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t correlationMaskCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "correlationMaskCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pCorrelationMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pCorrelationMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "correlationMaskCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkRenderPassMultiviewCreateInfo",
    "extends": [
      "VkRenderPassCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceCapabilities2EXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t minImageCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minImageCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxImageCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkExtent2D currentExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "currentExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent2D minImageExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "minImageExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkExtent2D maxImageExtent",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "maxImageExtent",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t maxImageArrayLayers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxImageArrayLayers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSurfaceTransformFlagsKHR supportedTransforms",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedTransforms",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceTransformFlagBitsKHR",
        "bitmaskRawType": "VkSurfaceTransformFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSurfaceTransformFlagBitsKHR currentTransform",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "currentTransform",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceTransformFlagBitsKHR",
        "bitmaskRawType": "VkSurfaceTransformFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkCompositeAlphaFlagsKHR supportedCompositeAlpha",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedCompositeAlpha",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCompositeAlphaFlagBitsKHR",
        "bitmaskRawType": "VkCompositeAlphaFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkImageUsageFlags supportedUsageFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedUsageFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkSurfaceCounterFlagsEXT supportedSurfaceCounters",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedSurfaceCounters",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceCounterFlagBitsEXT",
        "bitmaskRawType": "VkSurfaceCounterFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSurfaceCounterFlagBitsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} indicating the supported surface counter types."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_surface_counter",
      "description": "Structure describing capabilities of a surface"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPowerInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayPowerStateEXT powerState",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "powerState",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDisplayPowerStateEXT",
        "enumRawType": "VkDisplayPowerStateEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDisplayPowerStateEXT"
            }
          ],
          "description": " is a {#0#} value specifying the new power state of the display."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Describe the power state of a display"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceEventInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceEventTypeEXT deviceEvent",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "deviceEvent",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDeviceEventTypeEXT",
        "enumRawType": "VkDeviceEventTypeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Describe a device event to create"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayEventInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayEventTypeEXT displayEvent",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "displayEvent",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDisplayEventTypeEXT",
        "enumRawType": "VkDisplayEventTypeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDisplayEventTypeEXT"
            }
          ],
          "description": " is a {#0#} specifying when the fence will be signaled."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Describe a display event to create"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSwapchainCounterCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSurfaceCounterFlagsEXT surfaceCounters",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "surfaceCounters",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceCounterFlagBitsEXT",
        "bitmaskRawType": "VkSurfaceCounterFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSurfaceCounterFlagBitsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} specifying surface counters to enable for the swapchain."
        }
      }
    ],
    "extends": [
      "VkSwapchainCreateInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Specify the surface counters desired"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceGroupProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t physicalDeviceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "physicalDeviceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDevice physicalDevices [ VK_MAX_DEVICE_GROUP_SIZE ]",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice [ VK_MAX_DEVICE_GROUP_SIZE ]",
        "name": "physicalDevices",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "isArray": true,
        "length": "32",
        "isStaticArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 subsetAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subsetAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure specifying physical device group properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceGroupPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t physicalDeviceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "physicalDeviceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPhysicalDevice physicalDevices [ VK_MAX_DEVICE_GROUP_SIZE ]",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice [ VK_MAX_DEVICE_GROUP_SIZE ]",
        "name": "physicalDevices",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "isArray": true,
        "length": "32",
        "isStaticArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 subsetAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subsetAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceGroupProperties",
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryAllocateFlagsInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkMemoryAllocateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkMemoryAllocateFlagBits",
        "bitmaskRawType": "VkMemoryAllocateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure controlling how many instances of memory will be allocated"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryAllocateFlagsInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkMemoryAllocateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkMemoryAllocateFlagBits",
        "bitmaskRawType": "VkMemoryAllocateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkMemoryAllocateFlagsInfo",
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindBufferMemoryInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO",
    "extensions": [
      "VkBindBufferMemoryDeviceGroupInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying how to bind a buffer to memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindBufferMemoryInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkBindBufferMemoryInfo",
    "sType": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR",
    "extensions": [
      "VkBindBufferMemoryDeviceGroupInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindBufferMemoryDeviceGroupInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "deviceIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkBindBufferMemoryInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying device within a group to bind to"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindBufferMemoryDeviceGroupInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "deviceIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkBindBufferMemoryDeviceGroupInfo",
    "extends": [
      "VkBindBufferMemoryInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindImageMemoryInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO",
    "extensions": [
      "VkBindImageMemoryDeviceGroupInfo",
      "VkBindImageMemorySwapchainInfoKHR",
      "VkBindImagePlaneMemoryInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying how to bind an image to memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindImageMemoryInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkBindImageMemoryInfo",
    "sType": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR",
    "extensions": [
      "VkBindImageMemoryDeviceGroupInfo",
      "VkBindImageMemorySwapchainInfoKHR",
      "VkBindImagePlaneMemoryInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindImageMemoryDeviceGroupInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "deviceIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t splitInstanceBindRegionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "splitInstanceBindRegionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkRect2D * pSplitInstanceBindRegions",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pSplitInstanceBindRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "splitInstanceBindRegionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkBindImageMemoryInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying device within a group to bind to"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindImageMemoryDeviceGroupInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "deviceIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t splitInstanceBindRegionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "splitInstanceBindRegionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkRect2D * pSplitInstanceBindRegions",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pSplitInstanceBindRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "splitInstanceBindRegionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkBindImageMemoryDeviceGroupInfo",
    "extends": [
      "VkBindImageMemoryInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupRenderPassBeginInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceRenderAreaCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceRenderAreaCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkRect2D * pDeviceRenderAreas",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pDeviceRenderAreas",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "deviceRenderAreaCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkRenderPassBeginInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Set the initial device mask and render areas for a render pass instance"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupRenderPassBeginInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceRenderAreaCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceRenderAreaCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkRect2D * pDeviceRenderAreas",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pDeviceRenderAreas",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "deviceRenderAreaCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDeviceGroupRenderPassBeginInfo",
    "extends": [
      "VkRenderPassBeginInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupCommandBufferBeginInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkCommandBufferBeginInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Set the initial device mask for a command buffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupCommandBufferBeginInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDeviceGroupCommandBufferBeginInfo",
    "extends": [
      "VkCommandBufferBeginInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupSubmitInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t waitSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pWaitSemaphoreDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pWaitSemaphoreDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "waitSemaphoreCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t commandBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "commandBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pCommandBufferDeviceMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pCommandBufferDeviceMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "commandBufferCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t signalSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "signalSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pSignalSemaphoreDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pSignalSemaphoreDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "signalSemaphoreCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkSubmitInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure indicating which physical devices execute semaphore operations and command buffers"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupSubmitInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t waitSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pWaitSemaphoreDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pWaitSemaphoreDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "waitSemaphoreCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t commandBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "commandBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pCommandBufferDeviceMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pCommandBufferDeviceMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "commandBufferCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t signalSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "signalSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const uint32_t * pSignalSemaphoreDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pSignalSemaphoreDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "signalSemaphoreCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDeviceGroupSubmitInfo",
    "extends": [
      "VkSubmitInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupBindSparseInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t resourceDeviceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "resourceDeviceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t memoryDeviceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryDeviceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkBindSparseInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO",
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Structure indicating which instances are bound"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupBindSparseInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t resourceDeviceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "resourceDeviceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t memoryDeviceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryDeviceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDeviceGroupBindSparseInfo",
    "extends": [
      "VkBindSparseInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupPresentCapabilitiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t presentMask [ VK_MAX_DEVICE_GROUP_SIZE ]",
        "type": "uint32_t",
        "rawType": "uint32_t [ VK_MAX_DEVICE_GROUP_SIZE ]",
        "name": "presentMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "32",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkDeviceGroupPresentModeFlagsKHR modes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "modes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDeviceGroupPresentModeFlagBitsKHR",
        "bitmaskRawType": "VkDeviceGroupPresentModeFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDeviceGroupPresentModeFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#0#} indicating which device group presentation modes are supported."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Present capabilities from other physical devices"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageSwapchainCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a handle of a swapchain that the image will be bound to."
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that an image will be bound to swapchain memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindImageMemorySwapchainInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a swapchain handle."
        }
      },
      {
        "text": "uint32_t imageIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkBindImageMemoryInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying swapchain image memory to bind to"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAcquireNextImageInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a non-retired swapchain from which an image is acquired."
        }
      },
      {
        "text": "uint64_t timeout",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "timeout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies how long the function waits, in nanoseconds, if no image is available."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a semaphore to signal."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a fence to signal."
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a mask of physical devices for which the swapchain image will be ready to use when the semaphore or fence is signaled."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Structure specifying parameters of the acquire"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupPresentInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t swapchainCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "swapchainCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDeviceMasks"
            }
          ],
          "description": " is zero or the number of elements in {#0#}."
        }
      },
      {
        "text": "const uint32_t * pDeviceMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDeviceMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPresentInfoKHR"
            }
          ],
          "description": " is an array of device masks, one for each element of {#0#}::pSwapchains."
        }
      },
      {
        "text": "VkDeviceGroupPresentModeFlagBitsKHR mode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "mode",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDeviceGroupPresentModeFlagBitsKHR",
        "bitmaskRawType": "VkDeviceGroupPresentModeFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the device group present mode that will be used for this present."
        }
      }
    ],
    "extends": [
      "VkPresentInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Mode and mask controlling which physical devices\\"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupDeviceCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t physicalDeviceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "physicalDeviceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkPhysicalDevice * pPhysicalDevices",
        "type": "VkPhysicalDevice",
        "rawType": "const VkPhysicalDevice *",
        "name": "pPhysicalDevices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "isArray": true,
        "length": "physicalDeviceCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Create a logical device from multiple physical devices"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupDeviceCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t physicalDeviceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "physicalDeviceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkPhysicalDevice * pPhysicalDevices",
        "type": "VkPhysicalDevice",
        "rawType": "const VkPhysicalDevice *",
        "name": "pPhysicalDevices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "isArray": true,
        "length": "physicalDeviceCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDeviceGroupDeviceCreateInfo",
    "extends": [
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceGroupSwapchainCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceGroupPresentModeFlagsKHR modes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "modes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDeviceGroupPresentModeFlagBitsKHR",
        "bitmaskRawType": "VkDeviceGroupPresentModeFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is a bitfield of modes that the swapchain {#0#} be used with."
        }
      }
    ],
    "extends": [
      "VkSwapchainCreateInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Structure specifying parameters of a newly created swapchain object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorUpdateTemplateEntry",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t dstBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t dstArrayElement",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstArrayElement",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t descriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorType descriptorType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "descriptorType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorType",
        "enumRawType": "VkDescriptorType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "size_t offset",
        "type": "size_t",
        "rawType": "size_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "size_t stride",
        "type": "size_t",
        "rawType": "size_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Describes a single descriptor update of the descriptor update template"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorUpdateTemplateEntryKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t dstBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t dstArrayElement",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstArrayElement",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t descriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorType descriptorType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "descriptorType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorType",
        "enumRawType": "VkDescriptorType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "size_t offset",
        "type": "size_t",
        "rawType": "size_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "size_t stride",
        "type": "size_t",
        "rawType": "size_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDescriptorUpdateTemplateEntry",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorUpdateTemplateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorUpdateTemplateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDescriptorUpdateTemplateCreateFlags",
        "bitmaskRawType": "VkDescriptorUpdateTemplateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t descriptorUpdateEntryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorUpdateEntryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkDescriptorUpdateTemplateEntry * pDescriptorUpdateEntries",
        "type": "VkDescriptorUpdateTemplateEntry",
        "rawType": "const VkDescriptorUpdateTemplateEntry *",
        "name": "pDescriptorUpdateEntries",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "descriptorUpdateEntryCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorUpdateTemplateType templateType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "templateType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorUpdateTemplateType",
        "enumRawType": "VkDescriptorUpdateTemplateType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorSetLayout descriptorSetLayout",
        "type": "VkDescriptorSetLayout",
        "rawType": "VkDescriptorSetLayout",
        "name": "descriptorSetLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPipelineLayout pipelineLayout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "pipelineLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t set",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "set",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying parameters of a newly created descriptor update template"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorUpdateTemplateCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorUpdateTemplateCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDescriptorUpdateTemplateCreateFlags",
        "bitmaskRawType": "VkDescriptorUpdateTemplateCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t descriptorUpdateEntryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorUpdateEntryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkDescriptorUpdateTemplateEntry * pDescriptorUpdateEntries",
        "type": "VkDescriptorUpdateTemplateEntry",
        "rawType": "const VkDescriptorUpdateTemplateEntry *",
        "name": "pDescriptorUpdateEntries",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "descriptorUpdateEntryCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorUpdateTemplateType templateType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "templateType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorUpdateTemplateType",
        "enumRawType": "VkDescriptorUpdateTemplateType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDescriptorSetLayout descriptorSetLayout",
        "type": "VkDescriptorSetLayout",
        "rawType": "VkDescriptorSetLayout",
        "name": "descriptorSetLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPipelineLayout pipelineLayout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "pipelineLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t set",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "set",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDescriptorUpdateTemplateCreateInfo",
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkXYColorEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "float x",
        "type": "float",
        "rawType": "float",
        "name": "x",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float y",
        "type": "float",
        "rawType": "float",
        "name": "y",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_hdr_metadata",
      "description": "structure to specify X,Y chromaticity coordinates"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkHdrMetadataEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkXYColorEXT displayPrimaryRed",
        "type": "VkXYColorEXT",
        "rawType": "VkXYColorEXT",
        "name": "displayPrimaryRed",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the mastering display's red primary in chromaticity coordinates"
        }
      },
      {
        "text": "VkXYColorEXT displayPrimaryGreen",
        "type": "VkXYColorEXT",
        "rawType": "VkXYColorEXT",
        "name": "displayPrimaryGreen",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the mastering display's green primary in chromaticity coordinates"
        }
      },
      {
        "text": "VkXYColorEXT displayPrimaryBlue",
        "type": "VkXYColorEXT",
        "rawType": "VkXYColorEXT",
        "name": "displayPrimaryBlue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the mastering display's blue primary in chromaticity coordinates"
        }
      },
      {
        "text": "VkXYColorEXT whitePoint",
        "type": "VkXYColorEXT",
        "rawType": "VkXYColorEXT",
        "name": "whitePoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the mastering display's white-point in chromaticity coordinates"
        }
      },
      {
        "text": "float maxLuminance",
        "type": "float",
        "rawType": "float",
        "name": "maxLuminance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum luminance of the mastering display in nits"
        }
      },
      {
        "text": "float minLuminance",
        "type": "float",
        "rawType": "float",
        "name": "minLuminance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the minimum luminance of the mastering display in nits"
        }
      },
      {
        "text": "float maxContentLightLevel",
        "type": "float",
        "rawType": "float",
        "name": "maxContentLightLevel",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is content's maximum luminance in nits"
        }
      },
      {
        "text": "float maxFrameAverageLightLevel",
        "type": "float",
        "rawType": "float",
        "name": "maxFrameAverageLightLevel",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum frame average light level in nits"
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_HDR_METADATA_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_hdr_metadata",
      "description": "structure to specify Hdr metadata"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayNativeHdrSurfaceCapabilitiesAMD",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 localDimmingSupport",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "localDimmingSupport",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkSetLocalDimmingAMD"
            },
            {
              "kind": "slink",
              "value": "VkSwapchainDisplayNativeHdrCreateInfoAMD"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            }
          ],
          "description": " specifies whether the surface supports local dimming. If this is {#3#}, {#2#} {#0#} be used to explicitly enable or disable local dimming for the surface. Local dimming may also be overriden by {#1#} during the lifetime of the swapchain."
        }
      }
    ],
    "extends": [
      "VkSurfaceCapabilities2KHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure describing display native HDR specific capabilities of a surface"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSwapchainDisplayNativeHdrCreateInfoAMD",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 localDimmingEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "localDimmingEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether local dimming is enabled for the swapchain."
        }
      }
    ],
    "extends": [
      "VkSwapchainCreateInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Structure specifying display native HDR parameters of a newly created swapchain object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRefreshCycleDurationGOOGLE",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint64_t refreshDuration",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "refreshDuration",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of nanoseconds from the start of one refresh cycle to the next."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_GOOGLE_display_timing",
      "description": "Structure containing the RC duration of a display"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPastPresentationTimingGOOGLE",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint32_t presentID",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "presentID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkQueuePresentKHR"
            },
            {
              "kind": "fname",
              "value": "vkQueuePresentKHR"
            },
            {
              "kind": "slink",
              "value": "VkPresentTimeGOOGLE"
            },
            {
              "kind": "pname",
              "value": "presentID"
            }
          ],
          "description": " is an application-provided value that was given to a previous {#2#} command via {#3#}::{#4#} (see below). It {#0#} be used to uniquely identify a previous present with the {#1#} command."
        }
      },
      {
        "text": "uint64_t desiredPresentTime",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "desiredPresentTime",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkQueuePresentKHR"
            },
            {
              "kind": "slink",
              "value": "VkPresentTimeGOOGLE"
            },
            {
              "kind": "pname",
              "value": "desiredPresentTime"
            },
            {
              "kind": "pname",
              "value": "desiredPresentTime"
            }
          ],
          "description": " is an application-provided value that was given to a previous {#0#} command via {#1#}::{#2#}. If non-zero, it was used by the application to indicate that an image not be presented any sooner than {#3#}."
        }
      },
      {
        "text": "uint64_t actualPresentTime",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "actualPresentTime",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "swapchain"
            }
          ],
          "description": " is the time when the image of the {#0#} was actually displayed."
        }
      },
      {
        "text": "uint64_t earliestPresentTime",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "earliestPresentTime",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkPresentTimeGOOGLE"
            },
            {
              "kind": "pname",
              "value": "swapchain"
            },
            {
              "kind": "pname",
              "value": "actualPresentTime"
            },
            {
              "kind": "pname",
              "value": "desiredPresentTime"
            }
          ],
          "description": " is the time when the image of the {#2#} could have been displayed. This {#0#} differ from {#3#} if the application requested that the image be presented no sooner than {#1#}::{#4#}."
        }
      },
      {
        "text": "uint64_t presentMargin",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "presentMargin",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkQueuePresentKHR"
            },
            {
              "kind": "pname",
              "value": "earliestPresentTime"
            }
          ],
          "description": " is an indication of how early the {#0#} command was processed compared to how soon it needed to be processed, and still be presented at {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_GOOGLE_display_timing",
      "description": "Structure containing timing information about a previously-presented image"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPresentTimesInfoGOOGLE",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t swapchainCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "swapchainCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of swapchains being presented to by this command."
        }
      },
      {
        "text": "const VkPresentTimeGOOGLE * pTimes",
        "type": "VkPresentTimeGOOGLE",
        "rawType": "const VkPresentTimeGOOGLE *",
        "name": "pTimes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPresentTimeGOOGLE"
            },
            {
              "kind": "sname",
              "value": "VkPresentInfoKHR"
            },
            {
              "kind": "pname",
              "value": "swapchainCount"
            },
            {
              "kind": "pname",
              "value": "pTimes"
            },
            {
              "kind": "pname",
              "value": "pImageIndices"
            }
          ],
          "description": " is <i>null</i> or a reference to an array of {#0#} elements with {#2#} entries. If not <i>null</i>, each element of {#3#} contains the earliest time to present the image corresponding to the entry in the {#1#}::{#4#} array."
        }
      }
    ],
    "extends": [
      "VkPresentInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE",
    "documentation": {
      "macros": [],
      "category": "VK_GOOGLE_display_timing",
      "description": "The earliest time each image should be presented"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPresentTimeGOOGLE",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t presentID",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "presentID",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkGetPastPresentationTimingGOOGLE"
            }
          ],
          "description": " is an application-provided identification value, that {#0#} be used with the results of {#2#}, in order to uniquely identify this present. In order to be useful to the application, it {#1#} be unique within some period of time that is meaningful to the application."
        }
      },
      {
        "text": "uint64_t desiredPresentTime",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "desiredPresentTime",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "desiredPresentTime"
            },
            {
              "kind": "pname",
              "value": "presentID"
            },
            {
              "kind": "pname",
              "value": "desiredPresentTime"
            }
          ],
          "description": " specifies that the image given {#1#} not be displayed to the user any earlier than this time. {#2#} is a time in nanoseconds, relative to a monotonically-increasing clock (e.g. `CLOCK_MONOTONIC` (see clock_gettime(2)) on Android and Linux). A value of zero specifies that the presentation engine {#0#} display the image at any time. This is useful when the application desires to provide {#3#}, but does not need a specific {#4#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_GOOGLE_display_timing",
      "description": "The earliest time image should be presented"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkIOSSurfaceCreateInfoMVK",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkIOSSurfaceCreateFlagsMVK flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkIOSSurfaceCreateFlagsMVK",
        "bitmaskRawType": "VkIOSSurfaceCreateFlagsMVK",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "const void * pView",
        "type": "void",
        "rawType": "const void *",
        "name": "pView",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "dlink",
              "value": "CAMetalLayer"
            },
            {
              "kind": "code",
              "value": "UIView"
            },
            {
              "kind": "code",
              "value": "UIView"
            },
            {
              "kind": "code",
              "value": "CALayer"
            }
          ],
          "description": " is a reference to a {#2#} object which will display this surface. This {#3#} {#0#} be backed by a {#4#} instance of type {#1#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK",
    "documentation": {
      "macros": [],
      "category": "VK_MVK_ios_surface",
      "description": "Structure specifying parameters of a newly created iOS surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMacOSSurfaceCreateInfoMVK",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkMacOSSurfaceCreateFlagsMVK flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkMacOSSurfaceCreateFlagsMVK",
        "bitmaskRawType": "VkMacOSSurfaceCreateFlagsMVK",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "const void * pView",
        "type": "void",
        "rawType": "const void *",
        "name": "pView",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "dlink",
              "value": "CAMetalLayer"
            },
            {
              "kind": "code",
              "value": "NSView"
            },
            {
              "kind": "code",
              "value": "NSView"
            },
            {
              "kind": "code",
              "value": "CALayer"
            }
          ],
          "description": " is a reference to a {#2#} object which will display this surface. This {#3#} {#0#} be backed by a {#4#} instance of type {#1#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK",
    "documentation": {
      "macros": [],
      "category": "VK_MVK_macos_surface",
      "description": "Structure specifying parameters of a newly created macOS surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMetalSurfaceCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkMetalSurfaceCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkMetalSurfaceCreateFlagsEXT",
        "bitmaskRawType": "VkMetalSurfaceCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "const CAMetalLayer * pLayer",
        "type": "CAMetalLayer",
        "rawType": "const CAMetalLayer *",
        "name": "pLayer",
        "isConstant": true,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "CAMetalLayer"
            }
          ],
          "description": " is a reference to a {#0#} object representing a renderable surface."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_metal_surface",
      "description": "Structure specifying parameters of a newly created Metal surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkViewportWScalingNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "float xcoeff",
        "type": "float",
        "rawType": "float",
        "name": "xcoeff",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float ycoeff",
        "type": "float",
        "rawType": "float",
        "name": "ycoeff",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " are the viewport's W scaling factor for x and y respectively."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_clip_space_w_scaling",
      "description": "Structure specifying a viewport"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineViewportWScalingStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 viewportWScalingEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportWScalingEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether viewport "
        }
      },
      {
        "text": "uint32_t viewportCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of viewports used by "
        }
      },
      {
        "text": "const VkViewportWScalingNV * pViewportWScalings",
        "type": "VkViewportWScalingNV",
        "rawType": "const VkViewportWScalingNV *",
        "name": "pViewportWScalings",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "viewportCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkViewportWScalingNV"
            }
          ],
          "description": " is an array of {#0#} structures defining the "
        }
      }
    ],
    "extends": [
      "VkPipelineViewportStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_clip_space_w_scaling",
      "description": "Structure specifying parameters of a newly created pipeline viewport W scaling state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkViewportSwizzleNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkViewportCoordinateSwizzleNV x",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "x",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkViewportCoordinateSwizzleNV",
        "enumRawType": "VkViewportCoordinateSwizzleNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkViewportCoordinateSwizzleNV"
            }
          ],
          "description": " is a {#0#} value specifying the swizzle operation to apply to the x component of the primitive"
        }
      },
      {
        "text": "VkViewportCoordinateSwizzleNV y",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "y",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkViewportCoordinateSwizzleNV",
        "enumRawType": "VkViewportCoordinateSwizzleNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkViewportCoordinateSwizzleNV"
            }
          ],
          "description": " is a {#0#} value specifying the swizzle operation to apply to the y component of the primitive"
        }
      },
      {
        "text": "VkViewportCoordinateSwizzleNV z",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "z",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkViewportCoordinateSwizzleNV",
        "enumRawType": "VkViewportCoordinateSwizzleNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkViewportCoordinateSwizzleNV"
            }
          ],
          "description": " is a {#0#} value specifying the swizzle operation to apply to the z component of the primitive"
        }
      },
      {
        "text": "VkViewportCoordinateSwizzleNV w",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "w",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkViewportCoordinateSwizzleNV",
        "enumRawType": "VkViewportCoordinateSwizzleNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkViewportCoordinateSwizzleNV"
            }
          ],
          "description": " is a {#0#} value specifying the swizzle operation to apply to the w component of the primitive"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Structure specifying a viewport swizzle"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineViewportSwizzleStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineViewportSwizzleStateCreateFlagsNV flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineViewportSwizzleStateCreateFlagsNV",
        "bitmaskRawType": "VkPipelineViewportSwizzleStateCreateFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t viewportCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of viewport swizzles used by the pipeline."
        }
      },
      {
        "text": "const VkViewportSwizzleNV * pViewportSwizzles",
        "type": "VkViewportSwizzleNV",
        "rawType": "const VkViewportSwizzleNV *",
        "name": "pViewportSwizzles",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "viewportCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkViewportSwizzleNV"
            }
          ],
          "description": " is an array of {#0#} structures, defining the viewport swizzles."
        }
      }
    ],
    "extends": [
      "VkPipelineViewportStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Structure specifying swizzle applied to primitive clip coordinates"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceDiscardRectanglePropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxDiscardRectangles",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDiscardRectangles",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the maximum number of active discard rectangles that {#0#} be specified."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing discard rectangle limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineDiscardRectangleStateCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineDiscardRectangleStateCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineDiscardRectangleStateCreateFlagsEXT",
        "bitmaskRawType": "VkPipelineDiscardRectangleStateCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkDiscardRectangleModeEXT discardRectangleMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "discardRectangleMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDiscardRectangleModeEXT",
        "enumRawType": "VkDiscardRectangleModeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the mode used to determine whether fragments that lie within the discard rectangle are discarded or not."
        }
      },
      {
        "text": "uint32_t discardRectangleCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "discardRectangleCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of discard rectangles used by the pipeline."
        }
      },
      {
        "text": "const VkRect2D * pDiscardRectangles",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pDiscardRectangles",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "discardRectangleCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRect2D"
            }
          ],
          "description": " is an array of {#0#} structures, defining the discard rectangles. If the discard rectangle state is dynamic, this member is ignored."
        }
      }
    ],
    "extends": [
      "VkGraphicsPipelineCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying discard rectangle"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 perViewPositionAllComponents",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "perViewPositionAllComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing multiview limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkInputAttachmentAspectReference",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t subpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t inputAttachmentIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "inputAttachmentIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying a subpass/input attachment pair and an aspect mask that {#0#} be read."
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkInputAttachmentAspectReferenceKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t subpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t inputAttachmentIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "inputAttachmentIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkInputAttachmentAspectReference",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassInputAttachmentAspectCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t aspectReferenceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "aspectReferenceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkInputAttachmentAspectReference * pAspectReferences",
        "type": "VkInputAttachmentAspectReference",
        "rawType": "const VkInputAttachmentAspectReference *",
        "name": "pAspectReferences",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "aspectReferenceCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkRenderPassCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying, for a given subpass/input attachment pair, which aspect {#0#} be read."
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassInputAttachmentAspectCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t aspectReferenceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "aspectReferenceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkInputAttachmentAspectReference * pAspectReferences",
        "type": "VkInputAttachmentAspectReference",
        "rawType": "const VkInputAttachmentAspectReference *",
        "name": "pAspectReferences",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "aspectReferenceCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkRenderPassInputAttachmentAspectCreateInfo",
    "extends": [
      "VkRenderPassCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSurfaceInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the surface that will be associated with the swapchain."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR",
    "extensions": [
      "VkSurfaceFullScreenExclusiveInfoEXT",
      "VkSurfaceFullScreenExclusiveWin32InfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure specifying a surface and related swapchain creation parameters"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceCapabilities2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSurfaceCapabilitiesKHR surfaceCapabilities",
        "type": "VkSurfaceCapabilitiesKHR",
        "rawType": "VkSurfaceCapabilitiesKHR",
        "name": "surfaceCapabilities",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceCapabilitiesKHR"
            }
          ],
          "description": " is a {#0#} structure describing the capabilities of the specified surface."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR",
    "extensions": [
      "VkDisplayNativeHdrSurfaceCapabilitiesAMD",
      "VkSharedPresentSurfaceCapabilitiesKHR",
      "VkSurfaceProtectedCapabilitiesKHR",
      "VkSurfaceCapabilitiesFullScreenExclusiveEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure describing capabilities of a surface"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceFormat2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSurfaceFormatKHR surfaceFormat",
        "type": "VkSurfaceFormatKHR",
        "rawType": "VkSurfaceFormatKHR",
        "name": "surfaceFormat",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceFormatKHR"
            }
          ],
          "description": " is an instance of {#0#} describing a format-color space pair that is compatible with the specified surface."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure describing a supported swapchain format tuple"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayPropertiesKHR displayProperties",
        "type": "VkDisplayPropertiesKHR",
        "rawType": "VkDisplayPropertiesKHR",
        "name": "displayProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayPropertiesKHR"
            }
          ],
          "description": " is an instance of the {#0#} structure."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing an available display device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPlaneProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayPlanePropertiesKHR displayPlaneProperties",
        "type": "VkDisplayPlanePropertiesKHR",
        "rawType": "VkDisplayPlanePropertiesKHR",
        "name": "displayPlaneProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayPlanePropertiesKHR"
            }
          ],
          "description": " is an instance of the {#0#} structure."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing an available display plane"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayModeProperties2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayModePropertiesKHR displayModeProperties",
        "type": "VkDisplayModePropertiesKHR",
        "rawType": "VkDisplayModePropertiesKHR",
        "name": "displayModeProperties",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayModePropertiesKHR"
            }
          ],
          "description": " is an instance of the {#0#} structure."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing an available display mode"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPlaneInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayModeKHR mode",
        "type": "VkDisplayModeKHR",
        "rawType": "VkDisplayModeKHR",
        "name": "mode",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice,VkDisplayKHR",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the display mode the application intends to program when using the specified plane."
        }
      },
      {
        "text": "uint32_t planeIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "planeIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure defining the intended configuration of a display plane"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDisplayPlaneCapabilities2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDisplayPlaneCapabilitiesKHR capabilities",
        "type": "VkDisplayPlaneCapabilitiesKHR",
        "rawType": "VkDisplayPlaneCapabilitiesKHR",
        "name": "capabilities",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayPlaneCapabilitiesKHR"
            }
          ],
          "description": " is an instance of the {#0#} structure."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Structure describing the capabilities of a mode and plane combination"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSharedPresentSurfaceCapabilitiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImageUsageFlags sharedPresentSupportedUsageFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sharedPresentSupportedUsageFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR"
            },
            {
              "kind": "ename",
              "value": "VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT"
            },
            {
              "kind": "elink",
              "value": "VkImageUsageFlagBits"
            },
            {
              "kind": "elink",
              "value": "VkPresentModeKHR"
            }
          ],
          "description": " is a bitmask of {#6#} representing the ways the application {#0#} use the shared presentable image from a swapchain created with {#7#} set to {#3#} or {#4#} for the surface on the specified device. {#5#} {#2#} be included in the set but implementations {#1#} support additional usages."
        }
      }
    ],
    "extends": [
      "VkSurfaceCapabilities2KHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "structure describing capabilities of a surface for shared presentation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevice16BitStorageFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 storageBuffer16BitAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storageBuffer16BitAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 uniformAndStorageBuffer16BitAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "uniformAndStorageBuffer16BitAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 storagePushConstant16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storagePushConstant16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 storageInputOutput16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storageInputOutput16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing features supported by VK_KHR_16bit_storage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevice16BitStorageFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 storageBuffer16BitAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storageBuffer16BitAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 uniformAndStorageBuffer16BitAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "uniformAndStorageBuffer16BitAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 storagePushConstant16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storagePushConstant16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 storageInputOutput16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storageInputOutput16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDevice16BitStorageFeatures",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSubgroupProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t subgroupSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subgroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_QUEUE_GRAPHICS_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUEUE_COMPUTE_BIT"
            },
            {
              "kind": "pname",
              "value": "subgroupSize"
            },
            {
              "kind": "pname",
              "value": "subgroupSize"
            }
          ],
          "description": " is the default number of invocations in each subgroup. {#2#} is at least 1 if any of the physical device's queues support {#0#} or {#1#}. {#3#} is a power-of-two."
        }
      },
      {
        "text": "VkShaderStageFlags supportedStages",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedStages",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SHADER_STAGE_COMPUTE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUEUE_COMPUTE_BIT"
            },
            {
              "kind": "elink",
              "value": "VkShaderStageFlagBits"
            },
            {
              "kind": "pname",
              "value": "supportedStages"
            }
          ],
          "description": " is a bitfield of {#2#} describing the shader stages that subgroup operations are supported in. {#3#} will have the {#0#} bit set if any of the physical device's queues support {#1#}."
        }
      },
      {
        "text": "VkSubgroupFeatureFlags supportedOperations",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedOperations",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSubgroupFeatureFlagBits",
        "bitmaskRawType": "VkSubgroupFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SUBGROUP_FEATURE_BASIC_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUEUE_GRAPHICS_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUEUE_COMPUTE_BIT"
            },
            {
              "kind": "elink",
              "value": "VkSubgroupFeatureFlagBits"
            },
            {
              "kind": "pname",
              "value": "supportedOperations"
            }
          ],
          "description": " is a bitmask of {#3#} specifying the sets of subgroup operations supported on this device. {#4#} will have the {#0#} bit set if any of the physical device's queues support {#1#} or {#2#}."
        }
      },
      {
        "text": "VkBool32 quadOperationsInAllStages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "quadOperationsInAllStages",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a boolean specifying whether <<features-subgroup-quad,quad subgroup operations>> are available in all stages, or are restricted to fragment and compute stages."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing subgroup support for an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 shaderSubgroupExtendedTypes",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSubgroupExtendedTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a boolean that specifies whether subgroup operations can use 8-bit integer, 16-bit integer, 64-bit integer, 16-bit floating-point, and vectors of these types if the implementation supports the types."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the extended types subgroups support feature for an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferMemoryRequirementsInfo2",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "(None)"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferMemoryRequirementsInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkBufferMemoryRequirementsInfo2",
    "sType": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageMemoryRequirementsInfo2",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2",
    "extensions": [
      "VkImagePlaneMemoryRequirementsInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "(None)"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageMemoryRequirementsInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkImageMemoryRequirementsInfo2",
    "sType": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR",
    "extensions": [
      "VkImagePlaneMemoryRequirementsInfo"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageSparseMemoryRequirementsInfo2",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2",
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "(None)"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageSparseMemoryRequirementsInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkImageSparseMemoryRequirementsInfo2",
    "sType": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryRequirements2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkMemoryRequirements memoryRequirements",
        "type": "VkMemoryRequirements",
        "rawType": "VkMemoryRequirements",
        "name": "memoryRequirements",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2",
    "extensions": [
      "VkMemoryDedicatedRequirements"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying memory requirements"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryRequirements2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkMemoryRequirements memoryRequirements",
        "type": "VkMemoryRequirements",
        "rawType": "VkMemoryRequirements",
        "name": "memoryRequirements",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkMemoryRequirements2",
    "sType": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR",
    "extensions": [
      "VkMemoryDedicatedRequirements"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageMemoryRequirements2",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSparseImageMemoryRequirements memoryRequirements",
        "type": "VkSparseImageMemoryRequirements",
        "rawType": "VkSparseImageMemoryRequirements",
        "name": "memoryRequirements",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2",
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "(None)"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSparseImageMemoryRequirements2KHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSparseImageMemoryRequirements memoryRequirements",
        "type": "VkSparseImageMemoryRequirements",
        "rawType": "VkSparseImageMemoryRequirements",
        "name": "memoryRequirements",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkSparseImageMemoryRequirements2",
    "sType": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevicePointClippingProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPointClippingBehavior pointClippingBehavior",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pointClippingBehavior",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPointClippingBehavior",
        "enumRawType": "VkPointClippingBehavior",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing the point clipping behavior supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevicePointClippingPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkPointClippingBehavior pointClippingBehavior",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pointClippingBehavior",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPointClippingBehavior",
        "enumRawType": "VkPointClippingBehavior",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDevicePointClippingProperties",
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryDedicatedRequirements",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 prefersDedicatedAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "prefersDedicatedAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 requiresDedicatedAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "requiresDedicatedAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkMemoryRequirements2"
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure describing dedicated allocation requirements of buffer and image resources"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryDedicatedRequirementsKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 prefersDedicatedAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "prefersDedicatedAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 requiresDedicatedAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "requiresDedicatedAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkMemoryDedicatedRequirements",
    "extends": [
      "VkMemoryRequirements2"
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryDedicatedAllocateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Specify a dedicated memory allocation resource"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryDedicatedAllocateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkMemoryDedicatedAllocateInfo",
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageViewUsageCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkImageViewCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify the intended usage of an image view"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageViewUsageCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkImageViewUsageCreateInfo",
    "extends": [
      "VkImageViewCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineTessellationDomainOriginStateCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkTessellationDomainOrigin domainOrigin",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "domainOrigin",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkTessellationDomainOrigin",
        "enumRawType": "VkTessellationDomainOrigin",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPipelineTessellationStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
    "documentation": {
      "macros": [],
      "category": "Tessellation",
      "description": "Structure specifying the orientation of the tessellation domain"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineTessellationDomainOriginStateCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkTessellationDomainOrigin domainOrigin",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "domainOrigin",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkTessellationDomainOrigin",
        "enumRawType": "VkTessellationDomainOrigin",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPipelineTessellationDomainOriginStateCreateInfo",
    "extends": [
      "VkPipelineTessellationStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerYcbcrConversionInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSamplerYcbcrConversion conversion",
        "type": "VkSamplerYcbcrConversion",
        "rawType": "VkSamplerYcbcrConversion",
        "name": "conversion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkSamplerCreateInfo",
      "VkImageViewCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO",
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Structure specifying Y\\"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerYcbcrConversionInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSamplerYcbcrConversion conversion",
        "type": "VkSamplerYcbcrConversion",
        "rawType": "VkSamplerYcbcrConversion",
        "name": "conversion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkSamplerYcbcrConversionInfo",
    "extends": [
      "VkSamplerCreateInfo",
      "VkImageViewCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerYcbcrConversionCreateInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSamplerYcbcrModelConversion ycbcrModel",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "ycbcrModel",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerYcbcrModelConversion",
        "enumRawType": "VkSamplerYcbcrModelConversion",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSamplerYcbcrRange ycbcrRange",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "ycbcrRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerYcbcrRange",
        "enumRawType": "VkSamplerYcbcrRange",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkComponentMapping components",
        "type": "VkComponentMapping",
        "rawType": "VkComponentMapping",
        "name": "components",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkChromaLocation xChromaOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "xChromaOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkChromaLocation",
        "enumRawType": "VkChromaLocation",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkChromaLocation yChromaOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "yChromaOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkChromaLocation",
        "enumRawType": "VkChromaLocation",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFilter chromaFilter",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "chromaFilter",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFilter",
        "enumRawType": "VkFilter",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 forceExplicitReconstruction",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "forceExplicitReconstruction",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
    "extensions": [
      "VkExternalFormatANDROID"
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Structure specifying the parameters of the newly created conversion"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerYcbcrConversionCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSamplerYcbcrModelConversion ycbcrModel",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "ycbcrModel",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerYcbcrModelConversion",
        "enumRawType": "VkSamplerYcbcrModelConversion",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSamplerYcbcrRange ycbcrRange",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "ycbcrRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerYcbcrRange",
        "enumRawType": "VkSamplerYcbcrRange",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkComponentMapping components",
        "type": "VkComponentMapping",
        "rawType": "VkComponentMapping",
        "name": "components",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkChromaLocation xChromaOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "xChromaOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkChromaLocation",
        "enumRawType": "VkChromaLocation",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkChromaLocation yChromaOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "yChromaOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkChromaLocation",
        "enumRawType": "VkChromaLocation",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFilter chromaFilter",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "chromaFilter",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFilter",
        "enumRawType": "VkFilter",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 forceExplicitReconstruction",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "forceExplicitReconstruction",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkSamplerYcbcrConversionCreateInfo",
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR",
    "extensions": [
      "VkExternalFormatANDROID"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindImagePlaneMemoryInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageAspectFlagBits planeAspect",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "planeAspect",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkBindImageMemoryInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying how to bind an image plane to memory"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindImagePlaneMemoryInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageAspectFlagBits planeAspect",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "planeAspect",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkBindImagePlaneMemoryInfo",
    "extends": [
      "VkBindImageMemoryInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImagePlaneMemoryRequirementsInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageAspectFlagBits planeAspect",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "planeAspect",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkImageMemoryRequirementsInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying image plane for memory requirements"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImagePlaneMemoryRequirementsInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageAspectFlagBits planeAspect",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "planeAspect",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkImagePlaneMemoryRequirementsInfo",
    "extends": [
      "VkImageMemoryRequirementsInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 samplerYcbcrConversion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "samplerYcbcrConversion",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing Y\\"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 samplerYcbcrConversion",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "samplerYcbcrConversion",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerYcbcrConversionImageFormatProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t combinedImageSamplerDescriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "combinedImageSamplerDescriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkImageFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying combined image sampler descriptor count for multi-planar images"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerYcbcrConversionImageFormatPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t combinedImageSamplerDescriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "combinedImageSamplerDescriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkSamplerYcbcrConversionImageFormatProperties",
    "extends": [
      "VkImageFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkTextureLODGatherFormatPropertiesAMD",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i>."
        }
      },
      {
        "text": "VkBool32 supportsTextureGatherLODBiasAMD",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "supportsTextureGatherLODBiasAMD",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " tells if the image format can be used with texture gather bias/LOD functions, as introduced by the `<<VK_AMD_texture_gather_bias_lod>>` extension. This field is set by the implementation. User-specified value is ignored."
        }
      }
    ],
    "extends": [
      "VkImageFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure informing whether or not texture gather bias/LOD functionality is supported for a given image format and a given physical device."
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkConditionalRenderingBeginInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " where the predicate is located."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkConditionalRenderingFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkConditionalRenderingFlagBitsEXT",
        "bitmaskRawType": "VkConditionalRenderingFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkConditionalRenderingFlagsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the behavior of conditional rendering."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Structure specifying conditional rendering begin info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkProtectedSubmitInfo",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 protectedSubmit",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "protectedSubmit",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSubmitInfo"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "pname",
              "value": "protectedSubmit"
            },
            {
              "kind": "pname",
              "value": "protectedSubmit"
            },
            {
              "kind": "pname",
              "value": "pNext"
            }
          ],
          "description": " specifies whether the batch is protected. If {#3#} is {#1#}, the batch is protected. If {#4#} is {#2#}, the batch is unprotected. If the {#0#}::{#5#} chain does not contain this structure, the batch is unprotected."
        }
      }
    ],
    "extends": [
      "VkSubmitInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure indicating whether the submission is protected"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceProtectedMemoryFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 protectedMemory",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "protectedMemory",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether protected memory is supported."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing protected memory features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceProtectedMemoryProperties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 protectedNoFault",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "protectedNoFault",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "protectedNoFault"
            }
          ],
          "description": " specifies the behavior of the implementation when <<memory-protected-access-rules, protected memory access rules>> are broken. If {#1#} is {#0#}, breaking those rules will not result in process termination or device loss."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing protected memory properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceQueueInfo2",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkGetDeviceQueue2"
            },
            {
              "kind": "sname",
              "value": "VkDeviceQueueInfo2"
            },
            {
              "kind": "pname",
              "value": "pNext"
            }
          ],
          "description": " is <i>null</i> or a reference to an extension-specific structure. The {#2#} chain of {#1#} is used to provide additional image parameters to {#0#}."
        }
      },
      {
        "text": "VkDeviceQueueCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDeviceQueueCreateFlagBits",
        "bitmaskRawType": "VkDeviceQueueCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkDeviceQueueCreateFlags"
            }
          ],
          "description": " is a {#0#} value indicating the flags used to create the device queue."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the index of the queue family to which the queue belongs."
        }
      },
      {
        "text": "uint32_t queueIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the index within this queue family of the queue to retrieve."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure specifying the parameters used for device queue creation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineCoverageToColorStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure"
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure"
        }
      },
      {
        "text": "VkPipelineCoverageToColorStateCreateFlagsNV flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCoverageToColorStateCreateFlagsNV",
        "bitmaskRawType": "VkPipelineCoverageToColorStateCreateFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkBool32 coverageToColorEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "coverageToColorEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether the fragment coverage value replaces a fragment color output."
        }
      },
      {
        "text": "uint32_t coverageToColorLocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "coverageToColorLocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls which fragment shader color output value is replaced."
        }
      }
    ],
    "extends": [
      "VkPipelineMultisampleStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying whether fragment coverage replaces a color"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 filterMinmaxSingleComponentFormats",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "filterMinmaxSingleComponentFormats",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a boolean value indicating whether a minimum set of required formats support min/max filtering."
        }
      },
      {
        "text": "VkBool32 filterMinmaxImageComponentMapping",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "filterMinmaxImageComponentMapping",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a boolean value indicating whether the implementation supports non-identity component mapping of the image when doing min/max filtering."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing sampler filter minmax limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSampleLocationEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "float x",
        "type": "float",
        "rawType": "float",
        "name": "x",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the horizontal coordinate of the sample's location."
        }
      },
      {
        "text": "float y",
        "type": "float",
        "rawType": "float",
        "name": "y",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the vertical coordinate of the sample's location."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying the coordinates of a sample location"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSampleLocationsInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSampleCountFlagBits sampleLocationsPerPixel",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampleLocationsPerPixel",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSampleCountFlagBits"
            }
          ],
          "description": " is a {#0#} specifying the number of sample locations per pixel."
        }
      },
      {
        "text": "VkExtent2D sampleLocationGridSize",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "sampleLocationGridSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the size of the sample location grid to select custom sample locations for."
        }
      },
      {
        "text": "uint32_t sampleLocationsCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sampleLocationsCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pSampleLocations"
            }
          ],
          "description": " is the number of sample locations in {#0#}."
        }
      },
      {
        "text": "const VkSampleLocationEXT * pSampleLocations",
        "type": "VkSampleLocationEXT",
        "rawType": "const VkSampleLocationEXT *",
        "name": "pSampleLocations",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "sampleLocationsCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSampleLocationEXT"
            },
            {
              "kind": "pname",
              "value": "sampleLocationsCount"
            }
          ],
          "description": " is an array of {#1#} {#0#} structures."
        }
      }
    ],
    "extends": [
      "VkImageMemoryBarrier"
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying a set of sample locations"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAttachmentSampleLocationsEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t attachmentIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the index of the attachment for which the sample locations state is provided."
        }
      },
      {
        "text": "VkSampleLocationsInfoEXT sampleLocationsInfo",
        "type": "VkSampleLocationsInfoEXT",
        "rawType": "VkSampleLocationsInfoEXT",
        "name": "sampleLocationsInfo",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the sample locations state to use for the layout transition of the given attachment from the initial layout of the attachment to the image layout specified for the attachment in the first subpass using it."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying the sample locations state to use in the initial layout transition of attachments"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassSampleLocationsEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t subpassIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpassIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the index of the subpass for which the sample locations state is provided."
        }
      },
      {
        "text": "VkSampleLocationsInfoEXT sampleLocationsInfo",
        "type": "VkSampleLocationsInfoEXT",
        "rawType": "VkSampleLocationsInfoEXT",
        "name": "sampleLocationsInfo",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "subpassIndex"
            }
          ],
          "description": " is the sample locations state to use for the layout transition of the depth/stencil attachment away from the image layout the attachment is used with in the subpass specified in {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying the sample locations state to use for layout transitions of attachments performed after a given subpass"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassSampleLocationsBeginInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t attachmentInitialSampleLocationsCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentInitialSampleLocationsCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pAttachmentInitialSampleLocations"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkAttachmentSampleLocationsEXT * pAttachmentInitialSampleLocations",
        "type": "VkAttachmentSampleLocationsEXT",
        "rawType": "const VkAttachmentSampleLocationsEXT *",
        "name": "pAttachmentInitialSampleLocations",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "attachmentInitialSampleLocationsCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkAttachmentSampleLocationsEXT"
            },
            {
              "kind": "pname",
              "value": "attachmentInitialSampleLocationsCount"
            },
            {
              "kind": "pname",
              "value": "pAttachmentInitialSampleLocations"
            }
          ],
          "description": " is an array of {#2#} {#1#} structures specifying the attachment indices and their corresponding sample location state. Each element of {#3#} {#0#} specify the sample location state to use in the automatic layout transition performed to transition a depth/stencil attachment from the initial layout of the attachment to the image layout specified for the attachment in the first subpass using it."
        }
      },
      {
        "text": "uint32_t postSubpassSampleLocationsCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "postSubpassSampleLocationsCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pPostSubpassSampleLocations"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkSubpassSampleLocationsEXT * pPostSubpassSampleLocations",
        "type": "VkSubpassSampleLocationsEXT",
        "rawType": "const VkSubpassSampleLocationsEXT *",
        "name": "pPostSubpassSampleLocations",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "postSubpassSampleLocationsCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkSubpassSampleLocationsEXT"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSampleLocationsPropertiesEXT"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "postSubpassSampleLocationsCount"
            },
            {
              "kind": "pname",
              "value": "pPostSubpassSampleLocations"
            },
            {
              "kind": "pname",
              "value": "variableSampleLocations"
            },
            {
              "kind": "pname",
              "value": "pPostSubpassSampleLocations"
            },
            {
              "kind": "pname",
              "value": "variableSampleLocations"
            },
            {
              "kind": "pname",
              "value": "pPostSubpassSampleLocations"
            }
          ],
          "description": " is an array of {#6#} {#2#} structures specifying the subpass indices and their corresponding sample location state. Each element of {#7#} {#0#} specify the sample location state to use in the automatic layout transition performed to transition the depth/stencil attachment used by the specified subpass to the image layout specified in a dependent subpass or to the final layout of the attachment in case the specified subpass is the last subpass using that attachment. In addition, if {#3#}::{#8#} is {#4#}, each element of {#9#} {#1#} specify the sample location state that matches the sample locations used by all pipelines that will be bound to a command buffer during the specified subpass. If {#10#} is {#5#}, the sample locations used for rasterization do not depend on {#11#}."
        }
      }
    ],
    "extends": [
      "VkRenderPassBeginInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying sample locations to use for the layout transition of custom sample locations compatible depth/stencil attachments"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineSampleLocationsStateCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 sampleLocationsEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sampleLocationsEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "pname",
              "value": "sampleLocationsEnable"
            },
            {
              "kind": "pname",
              "value": "sampleLocationsInfo"
            }
          ],
          "description": " controls whether custom sample locations are used. If {#1#} is {#0#}, the default sample locations are used and the values specified in {#2#} are ignored."
        }
      },
      {
        "text": "VkSampleLocationsInfoEXT sampleLocationsInfo",
        "type": "VkSampleLocationsInfoEXT",
        "rawType": "VkSampleLocationsInfoEXT",
        "name": "sampleLocationsInfo",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT"
            },
            {
              "kind": "pname",
              "value": "sampleLocationsEnable"
            }
          ],
          "description": " is the sample locations to use during rasterization if {#2#} is {#0#} and the graphics pipeline is not created with {#1#}."
        }
      }
    ],
    "extends": [
      "VkPipelineMultisampleStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying sample locations for a pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSampleLocationsPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSampleCountFlags sampleLocationSampleCounts",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampleLocationSampleCounts",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSampleCountFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} indicating the sample counts supporting custom sample locations."
        }
      },
      {
        "text": "VkExtent2D maxSampleLocationGridSize",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "maxSampleLocationGridSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "sampleLocationSampleCounts"
            }
          ],
          "description": " is the maximum size of the pixel grid in which sample locations {#0#} vary that is supported for all sample counts in {#1#}."
        }
      },
      {
        "text": "float sampleLocationCoordinateRange [2]",
        "type": "float",
        "rawType": "float [2]",
        "name": "sampleLocationCoordinateRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "2",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t sampleLocationSubPixelBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sampleLocationSubPixelBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of bits of subpixel precision for sample locations."
        }
      },
      {
        "text": "VkBool32 variableSampleLocations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "variableSampleLocations",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " specifies whether the sample locations used by all pipelines that will be bound to a command buffer during a subpass {#0#} match. If set to {#2#}, the implementation supports variable sample locations in a subpass. If set to {#3#}, then the sample locations {#1#} stay constant in each subpass."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing sample location limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMultisamplePropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExtent2D maxSampleLocationGridSize",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "maxSampleLocationGridSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the maximum size of the pixel grid in which sample locations {#0#} vary."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure returning information about sample count specific additional multisampling capabilities"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSamplerReductionModeCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSamplerReductionModeEXT reductionMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "reductionMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerReductionModeEXT",
        "enumRawType": "VkSamplerReductionModeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSamplerReductionModeEXT"
            }
          ],
          "description": " is a {#0#} value controlling how texture filtering combines texel values."
        }
      }
    ],
    "extends": [
      "VkSamplerCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Structure specifying sampler reduction mode"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 advancedBlendCoherentOperations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "advancedBlendCoherentOperations",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing advanced blending features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t advancedBlendMaxColorAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "advancedBlendMaxColorAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is one greater than the highest color attachment index that {#0#} be used in a subpass, for a pipeline that uses an <<framebuffer-blend-advanced,advanced blend operation>>."
        }
      },
      {
        "text": "VkBool32 advancedBlendIndependentBlend",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "advancedBlendIndependentBlend",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies whether advanced blend operations {#0#} vary per-attachment."
        }
      },
      {
        "text": "VkBool32 advancedBlendNonPremultipliedSrcColor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "advancedBlendNonPremultipliedSrcColor",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkPipelineColorBlendAdvancedStateCreateInfoEXT"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "srcPremultiplied"
            }
          ],
          "description": " specifies whether the source color {#0#} be treated as non-premultiplied. If this is {#3#}, then {#2#}::{#5#} {#1#} be {#4#}."
        }
      },
      {
        "text": "VkBool32 advancedBlendNonPremultipliedDstColor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "advancedBlendNonPremultipliedDstColor",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkPipelineColorBlendAdvancedStateCreateInfoEXT"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "dstPremultiplied"
            }
          ],
          "description": " specifies whether the destination color {#0#} be treated as non-premultiplied. If this is {#3#}, then {#2#}::{#5#} {#1#} be {#4#}."
        }
      },
      {
        "text": "VkBool32 advancedBlendCorrelatedOverlap",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "advancedBlendCorrelatedOverlap",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkPipelineColorBlendAdvancedStateCreateInfoEXT"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "ename",
              "value": "VK_BLEND_OVERLAP_UNCORRELATED_EXT"
            },
            {
              "kind": "pname",
              "value": "blendOverlap"
            }
          ],
          "description": " specifies whether the overlap mode {#0#} be treated as correlated. If this is {#3#}, then {#2#}::{#5#} {#1#} be {#4#}."
        }
      },
      {
        "text": "VkBool32 advancedBlendAllOperations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "advancedBlendAllOperations",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineColorBlendAttachmentState"
            }
          ],
          "description": " specifies whether all advanced blend operation enums are supported. See the valid usage of {#0#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing advanced blending limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineColorBlendAdvancedStateCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 srcPremultiplied",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcPremultiplied",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether the source color of the blend operation is treated as premultiplied."
        }
      },
      {
        "text": "VkBool32 dstPremultiplied",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstPremultiplied",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether the destination color of the blend operation is treated as premultiplied."
        }
      },
      {
        "text": "VkBlendOverlapEXT blendOverlap",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "blendOverlap",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkBlendOverlapEXT",
        "enumRawType": "VkBlendOverlapEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkBlendOverlapEXT"
            }
          ],
          "description": " is a {#0#} value specifying how the source and destination sample's coverage is correlated."
        }
      }
    ],
    "extends": [
      "VkPipelineColorBlendStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_blend_operation_advanced",
      "description": "Structure specifying parameters that affect advanced blend operations"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceInlineUniformBlockFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 inlineUniformBlock",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "inlineUniformBlock",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
            }
          ],
          "description": " indicates whether the implementation supports inline uniform block descriptors. If this feature is not enabled, {#1#} {#0#} not be used."
        }
      },
      {
        "text": "VkBool32 descriptorBindingInlineUniformBlockUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingInlineUniformBlockUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
            }
          ],
          "description": "ifndef::VK_EXT_descriptor_indexing[] is {#1#} and reserved for future use.endif::VK_EXT_descriptor_indexing[] indicates whether the implementation supports updating inline uniform block descriptors after a set is bound. If this feature is not enabled, {#2#} {#0#} not be used with {#3#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing inline uniform block features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceInlineUniformBlockPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxInlineUniformBlockSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxInlineUniformBlockSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum size in bytes of an <<descriptorsets-inlineuniformblock, inline uniform block>> binding."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorInlineUniformBlocks",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorInlineUniformBlocks",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetInlineUniformBlocks",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetInlineUniformBlocks",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindInlineUniformBlocks",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing inline uniform block properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkWriteDescriptorSetInlineUniformBlockEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t dataSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " number of bytes of data to write to the inline uniform block."
        }
      },
      {
        "text": "const void * pData",
        "type": "void",
        "rawType": "const void *",
        "name": "pData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkWriteDescriptorSet"
    ],
    "sType": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying inline uniform block data"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorPoolInlineUniformBlockCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxInlineUniformBlockBindings",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxInlineUniformBlockBindings",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of inline uniform block bindings to allocate."
        }
      }
    ],
    "extends": [
      "VkDescriptorPoolCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying the maximum number of inline uniform block bindings of a newly created descriptor pool"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineCoverageModulationStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCoverageModulationStateCreateFlagsNV flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCoverageModulationStateCreateFlagsNV",
        "bitmaskRawType": "VkPipelineCoverageModulationStateCreateFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkCoverageModulationModeNV coverageModulationMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "coverageModulationMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCoverageModulationModeNV",
        "enumRawType": "VkCoverageModulationModeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCoverageModulationModeNV"
            }
          ],
          "description": " is a {#0#} value controlling which color components are modulated."
        }
      },
      {
        "text": "VkBool32 coverageModulationTableEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "coverageModulationTableEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCoverageModulationTable"
            }
          ],
          "description": " controls whether the modulation factor is looked up from a table in {#0#}."
        }
      },
      {
        "text": "uint32_t coverageModulationTableCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "coverageModulationTableCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCoverageModulationTable"
            }
          ],
          "description": " is the number of elements in {#0#}."
        }
      },
      {
        "text": "const float * pCoverageModulationTable",
        "type": "float",
        "rawType": "const float *",
        "name": "pCoverageModulationTable",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "coverageModulationTableCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Float32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a table of modulation factors containing a value for each number of covered samples."
        }
      }
    ],
    "extends": [
      "VkPipelineMultisampleStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying parameters controlling coverage modulation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageFormatListCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t viewFormatCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewFormatCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkFormat * pViewFormats",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pViewFormats",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkFormat",
        "enumRawType": "const VkFormat *",
        "isArray": true,
        "length": "viewFormatCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is an array which lists of all formats which {#0#} be used when creating views of this image."
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo",
      "VkSwapchainCreateInfoKHR",
      "VkPhysicalDeviceImageFormatInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that an image {#0#} be used with a particular set of formats"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkValidationCacheCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkValidationCacheCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkValidationCacheCreateFlagsEXT",
        "bitmaskRawType": "VkValidationCacheCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "size_t initialDataSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "initialDataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pInitialData",
        "type": "void",
        "rawType": "const void *",
        "name": "pInitialData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "initialDataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "initialDataSize"
            },
            {
              "kind": "pname",
              "value": "pInitialData"
            }
          ],
          "description": " is a reference to previously retrieved validation cache data. If the validation cache data is incompatible (as defined below) with the device, the validation cache will be initially empty. If {#0#} is zero, {#1#} is ignored."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Structure specifying parameters of a newly created validation cache"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkShaderModuleValidationCacheCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkValidationCacheEXT validationCache",
        "type": "VkValidationCacheEXT",
        "rawType": "VkValidationCacheEXT",
        "name": "validationCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkShaderModule"
            }
          ],
          "description": " is the validation cache object from which the results of prior validation attempts will be written, and to which new validation results for this {#0#} will be written (if not already present)."
        }
      }
    ],
    "extends": [
      "VkShaderModuleCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_validation_cache",
      "description": "Specify validation cache to use during shader module creation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMaintenance3Properties",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t maxPerSetDescriptors",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerSetDescriptors",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceSize maxMemoryAllocationSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxMemoryAllocationSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing descriptor set properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMaintenance3PropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t maxPerSetDescriptors",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerSetDescriptors",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkDeviceSize maxMemoryAllocationSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxMemoryAllocationSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceMaintenance3Properties",
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetLayoutSupport",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 supported",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "supported",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT",
    "extensions": [
      "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure returning information about whether a descriptor set layout can be supported"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetLayoutSupportKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 supported",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "supported",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkDescriptorSetLayoutSupport",
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR",
    "extensions": [
      "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderDrawParametersFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 shaderDrawParameters",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDrawParameters",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing shader draw parameter features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderDrawParameterFeatures",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 shaderDrawParameters",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDrawParameters",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceShaderDrawParametersFeatures",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 shaderFloat16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderFloat16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 shaderInt8",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderInt8",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing features supported by VK_KHR_shader_float16_int8"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFloat16Int8FeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 shaderFloat16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderFloat16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 shaderInt8",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderInt8",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFloatControlsPropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkShaderFloatControlsIndependenceKHR denormBehaviorIndependence",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "denormBehaviorIndependence",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkShaderFloatControlsIndependenceKHR",
        "enumRawType": "VkShaderFloatControlsIndependenceKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkShaderFloatControlsIndependenceKHR"
            }
          ],
          "description": " is a {#0#} value indicating whether, and how, denorm behavior can be set independently for different bit widths."
        }
      },
      {
        "text": "VkShaderFloatControlsIndependenceKHR roundingModeIndependence",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "roundingModeIndependence",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkShaderFloatControlsIndependenceKHR",
        "enumRawType": "VkShaderFloatControlsIndependenceKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkShaderFloatControlsIndependenceKHR"
            }
          ],
          "description": " is a {#0#} value indicating whether, and how, rounding modes can be set independently for different bit widths."
        }
      },
      {
        "text": "VkBool32 shaderSignedZeroInfNanPreserveFloat16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSignedZeroInfNanPreserveFloat16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "SignedZeroInfNanPreserve"
            }
          ],
          "description": " is a boolean value indicating whether sign of a zero, [eq]##Nan##s and latexmath:[\\pm\\infty] {#0#} be preserved in 16-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 16-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderSignedZeroInfNanPreserveFloat32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSignedZeroInfNanPreserveFloat32",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "SignedZeroInfNanPreserve"
            }
          ],
          "description": " is a boolean value indicating whether sign of a zero, [eq]##Nan##s and latexmath:[\\pm\\infty] {#0#} be preserved in 32-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 32-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderSignedZeroInfNanPreserveFloat64",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSignedZeroInfNanPreserveFloat64",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "SignedZeroInfNanPreserve"
            }
          ],
          "description": " is a boolean value indicating whether sign of a zero, [eq]##Nan##s and latexmath:[\\pm\\infty] {#0#} be preserved in 64-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 64-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderDenormPreserveFloat16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDenormPreserveFloat16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DenormPreserve"
            }
          ],
          "description": " is a boolean value indicating whether denormals {#0#} be preserved in 16-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 16-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderDenormPreserveFloat32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDenormPreserveFloat32",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DenormPreserve"
            }
          ],
          "description": " is a boolean value indicating whether denormals {#0#} be preserved in 32-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 32-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderDenormPreserveFloat64",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDenormPreserveFloat64",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DenormPreserve"
            }
          ],
          "description": " is a boolean value indicating whether denormals {#0#} be preserved in 64-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 64-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderDenormFlushToZeroFloat16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDenormFlushToZeroFloat16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DenormFlushToZero"
            }
          ],
          "description": " is a boolean value indicating whether denormals {#0#} be flushed to zero in 16-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 16-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderDenormFlushToZeroFloat32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDenormFlushToZeroFloat32",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DenormFlushToZero"
            }
          ],
          "description": " is a boolean value indicating whether denormals {#0#} be flushed to zero in 32-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 32-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderDenormFlushToZeroFloat64",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDenormFlushToZeroFloat64",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DenormFlushToZero"
            }
          ],
          "description": " is a boolean value indicating whether denormals {#0#} be flushed to zero in 64-bit floating-point computations. It also indicates whether the {#2#} execution mode {#1#} be used for 64-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderRoundingModeRTEFloat16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderRoundingModeRTEFloat16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "RoundingModeRTE"
            }
          ],
          "description": " is a boolean value indicating whether an implementation supports the round-to-nearest-even rounding mode for 16-bit floating-point arithmetic and conversion instructions. It also indicates whether the {#1#} execution mode {#0#} be used for 16-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderRoundingModeRTEFloat32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderRoundingModeRTEFloat32",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "RoundingModeRTE"
            }
          ],
          "description": " is a boolean value indicating whether an implementation supports the round-to-nearest-even rounding mode for 32-bit floating-point arithmetic and conversion instructions. It also indicates whether the {#1#} execution mode {#0#} be used for 32-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderRoundingModeRTEFloat64",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderRoundingModeRTEFloat64",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "RoundingModeRTE"
            }
          ],
          "description": " is a boolean value indicating whether an implementation supports the round-to-nearest-even rounding mode for 64-bit floating-point arithmetic and conversion instructions. It also indicates whether the {#1#} execution mode {#0#} be used for 64-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderRoundingModeRTZFloat16",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderRoundingModeRTZFloat16",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "RoundingModeRTZ"
            }
          ],
          "description": " is a boolean value indicating whether an implementation supports the round-towards-zero rounding mode for 16-bit floating-point arithmetic and conversion instructions. It also indicates whether the {#1#} execution mode {#0#} be used for 16-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderRoundingModeRTZFloat32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderRoundingModeRTZFloat32",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "RoundingModeRTZ"
            }
          ],
          "description": " is a boolean value indicating whether an implementation supports the round-towards-zero rounding mode for 32-bit floating-point arithmetic and conversion instructions. It also indicates whether the {#1#} execution mode {#0#} be used for 32-bit floating-point types."
        }
      },
      {
        "text": "VkBool32 shaderRoundingModeRTZFloat64",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderRoundingModeRTZFloat64",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "RoundingModeRTZ"
            }
          ],
          "description": " is a boolean value indicating whether an implementation supports the round-towards-zero rounding mode for 64-bit floating-point arithmetic and conversion instructions. It also indicates whether the {#1#} execution mode {#0#} be used for 64-bit floating-point types."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing properties supported by VK_KHR_shader_float_controls"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceHostQueryResetFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 hostQueryReset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "hostQueryReset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkResetQueryPoolEXT"
            }
          ],
          "description": " indicates that the implementation supports resetting queries from the host with {#0#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing whether queries can be reset from the host"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkNativeBufferUsage2ANDROID",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint64_t consumer",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "consumer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint64_t producer",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "producer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkNativeBufferANDROID",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * handle",
        "type": "void",
        "rawType": "const void *",
        "name": "handle",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "int stride",
        "type": "int",
        "rawType": "int",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "int format",
        "type": "int",
        "rawType": "int",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "int usage",
        "type": "int",
        "rawType": "int",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkNativeBufferUsage2ANDROID usage2",
        "type": "VkNativeBufferUsage2ANDROID",
        "rawType": "VkNativeBufferUsage2ANDROID",
        "name": "usage2",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSwapchainImageCreateInfoANDROID",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSwapchainImageUsageFlagsANDROID usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSwapchainImageUsageFlagBitsANDROID",
        "bitmaskRawType": "VkSwapchainImageUsageFlagsANDROID",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevicePresentationPropertiesANDROID",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 sharedImage",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sharedImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkShaderResourceUsageAMD",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint32_t numUsedVgprs",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "numUsedVgprs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of vector instruction general-purpose registers used by this shader."
        }
      },
      {
        "text": "uint32_t numUsedSgprs",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "numUsedSgprs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of scalar instruction general-purpose registers used by this shader."
        }
      },
      {
        "text": "uint32_t ldsSizePerLocalWorkGroup",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "ldsSizePerLocalWorkGroup",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum local data store size per work group in bytes."
        }
      },
      {
        "text": "size_t ldsUsageSizeInBytes",
        "type": "size_t",
        "rawType": "size_t",
        "name": "ldsUsageSizeInBytes",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the LDS usage size in bytes per work group by this shader."
        }
      },
      {
        "text": "size_t scratchMemUsageInBytes",
        "type": "size_t",
        "rawType": "size_t",
        "name": "scratchMemUsageInBytes",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the scratch memory usage in bytes by this shader."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_AMD_shader_info",
      "description": "Resource usage information about a particular shader within a pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkShaderStatisticsInfoAMD",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkShaderStageFlags shaderStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "shaderStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkShaderResourceUsageAMD resourceUsage",
        "type": "VkShaderResourceUsageAMD",
        "rawType": "VkShaderResourceUsageAMD",
        "name": "resourceUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t numPhysicalVgprs",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "numPhysicalVgprs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t numPhysicalSgprs",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "numPhysicalSgprs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t numAvailableVgprs",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "numAvailableVgprs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t numAvailableSgprs",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "numAvailableSgprs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t computeWorkGroupSize [3]",
        "type": "uint32_t",
        "rawType": "uint32_t [3]",
        "name": "computeWorkGroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "3",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_AMD_shader_info",
      "description": "Statistical information about a particular shader within a pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceQueueGlobalPriorityCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkQueueGlobalPriorityEXT globalPriority",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "globalPriority",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkQueueGlobalPriorityEXT",
        "enumRawType": "VkQueueGlobalPriorityEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkQueueGlobalPriorityEXT"
            }
          ],
          "description": " is the system-wide priority associated to this queue as specified by {#0#}"
        }
      }
    ],
    "extends": [
      "VkDeviceQueueCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Specify a system wide priority"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugUtilsObjectNameInfoEXT",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkObjectType objectType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "objectType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectType",
        "enumRawType": "VkObjectType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkObjectType"
            }
          ],
          "description": " is a {#0#} specifying the type of the object to be named."
        }
      },
      {
        "text": "uint64_t objectHandle",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "objectHandle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the object to be named."
        }
      },
      {
        "text": "const char * pObjectName",
        "type": "char",
        "rawType": "const char *",
        "name": "pObjectName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "objectHandle"
            }
          ],
          "description": " is a string specifying the name to apply to {#0#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Specify parameters of a name to give to an object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugUtilsObjectTagInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkObjectType objectType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "objectType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkObjectType",
        "enumRawType": "VkObjectType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkObjectType"
            }
          ],
          "description": " is a {#0#} specifying the type of the object to be named."
        }
      },
      {
        "text": "uint64_t objectHandle",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "objectHandle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the object to be tagged."
        }
      },
      {
        "text": "uint64_t tagName",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "tagName",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a numerical identifier of the tag."
        }
      },
      {
        "text": "size_t tagSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "tagSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " bytes containing the data to be associated with the object."
        }
      },
      {
        "text": "const void * pTag",
        "type": "void",
        "rawType": "const void *",
        "name": "pTag",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "tagSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Specify parameters of a tag to attach to an object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugUtilsLabelEXT",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "const char * pLabelName",
        "type": "char",
        "rawType": "const char *",
        "name": "pLabelName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a reference to a string containing the name of the label."
        }
      },
      {
        "text": "float color [4]",
        "type": "float",
        "rawType": "float [4]",
        "name": "color",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "4",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "color"
            }
          ],
          "description": " is an optional RGBA color value that can be associated with the label. A particular implementation {#0#} choose to ignore this color value. The values contain RGBA values in order, in the range 0.0 to 1.0. If all elements in {#1#} are set to 0.0 then it is ignored."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Specify parameters of a label region"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugUtilsMessengerCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDebugUtilsMessengerCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessengerCreateFlagsEXT",
        "bitmaskRawType": "VkDebugUtilsMessengerCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is 0 and reserved for future use."
        }
      },
      {
        "text": "VkDebugUtilsMessageSeverityFlagsEXT messageSeverity",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageSeverity",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessageSeverityFlagBitsEXT",
        "bitmaskRawType": "VkDebugUtilsMessageSeverityFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugUtilsMessageSeverityFlagBitsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} specifying which severity of event(s) will cause this callback to be called."
        }
      },
      {
        "text": "VkDebugUtilsMessageTypeFlagsEXT messageType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessageTypeFlagBitsEXT",
        "bitmaskRawType": "VkDebugUtilsMessageTypeFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugUtilsMessageTypeFlagBitsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} specifying which type of event(s) will cause this callback to be called."
        }
      },
      {
        "text": "PFN_vkDebugUtilsMessengerCallbackEXT pfnUserCallback",
        "type": "PFN_vkDebugUtilsMessengerCallbackEXT",
        "rawType": "PFN_vkDebugUtilsMessengerCallbackEXT",
        "name": "pfnUserCallback",
        "isConstant": false,
        "dereferenceCount": 0,
        "isFunction": true,
        "jsType": "Function",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the application callback function to call."
        }
      },
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is user data to be passed to the callback."
        }
      }
    ],
    "extends": [
      "VkInstanceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Structure specifying parameters of a newly created debug messenger"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDebugUtilsMessengerCallbackDataEXT",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDebugUtilsMessengerCallbackDataFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessengerCallbackDataFlagsEXT",
        "bitmaskRawType": "VkDebugUtilsMessengerCallbackDataFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is 0 and reserved for future use."
        }
      },
      {
        "text": "const char * pMessageIdName",
        "type": "char",
        "rawType": "const char *",
        "name": "pMessageIdName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a string that identifies the particular message ID that is associated with the provided message. If the message corresponds to a validation layer message, then this string may contain the portion of the Vulkan specification that is believed to have been violated."
        }
      },
      {
        "text": "int32_t messageIdNumber",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageIdNumber",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the ID number of the triggering message. If the message corresponds to a validation layer message, then this number is related to the internal number associated with the message being triggered."
        }
      },
      {
        "text": "const char * pMessage",
        "type": "char",
        "rawType": "const char *",
        "name": "pMessage",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a string detailing the trigger conditions."
        }
      },
      {
        "text": "uint32_t queueLabelCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueLabelCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pQueueLabels"
            }
          ],
          "description": " is a count of items contained in the {#0#} array."
        }
      },
      {
        "text": "const VkDebugUtilsLabelEXT * pQueueLabels",
        "type": "VkDebugUtilsLabelEXT",
        "rawType": "const VkDebugUtilsLabelEXT *",
        "name": "pQueueLabels",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "queueLabelCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkQueue"
            },
            {
              "kind": "slink",
              "value": "VkDebugUtilsLabelEXT"
            }
          ],
          "description": " is <i>null</i> or a reference to an array of {#1#} active in the current {#0#} at the time the callback was triggered. Refer to <<debugging-queue-labels,Queue Labels>> for more information."
        }
      },
      {
        "text": "uint32_t cmdBufLabelCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "cmdBufLabelCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCmdBufLabels"
            }
          ],
          "description": " is a count of items contained in the {#0#} array."
        }
      },
      {
        "text": "const VkDebugUtilsLabelEXT * pCmdBufLabels",
        "type": "VkDebugUtilsLabelEXT",
        "rawType": "const VkDebugUtilsLabelEXT *",
        "name": "pCmdBufLabels",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "cmdBufLabelCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "slink",
              "value": "VkDebugUtilsLabelEXT"
            }
          ],
          "description": " is <i>null</i> or a reference to an array of {#1#} active in the current {#0#} at the time the callback was triggered. Refer to <<debugging-command-buffer-labels, Command Buffer Labels>> for more information."
        }
      },
      {
        "text": "uint32_t objectCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "objectCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkDebugUtilsObjectNameInfoEXT * pObjects",
        "type": "VkDebugUtilsObjectNameInfoEXT",
        "rawType": "const VkDebugUtilsObjectNameInfoEXT *",
        "name": "pObjects",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsObjectNameInfoEXT"
            }
          ],
          "description": " is an array of {#0#} objects related to the detected issue. The array is roughly in order or importance, but the 0th element is always guaranteed to be the most important object for this message."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Structure specifying parameters returned to the callback"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportMemoryHostPointerInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the handle type."
        }
      },
      {
        "text": "void * pHostPointer",
        "type": "void",
        "rawType": "void *",
        "name": "pHostPointer",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the host reference to import from."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "import memory from a host reference"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryHostPointerPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t memoryTypeBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryTypeBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is a bitmask containing one bit set for every memory type which the specified host reference {#0#} be imported as."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Properties of external memory host reference"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExternalMemoryHostPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceSize minImportedHostPointerAlignment",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "minImportedHostPointerAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "required",
              "value": ""
            }
          ],
          "description": " is the minimum {#1#} alignment, in bytes, for the base address and size of host references that {#0#} be imported to a Vulkan memory object."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing external memory host reference limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceConservativeRasterizationPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "float primitiveOverestimationSize",
        "type": "float",
        "rawType": "float",
        "name": "primitiveOverestimationSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " is the size in pixels the generating primitive is increased at each of its edges during conservative rasterization overestimation mode. Even with a size of 0.0, conservative rasterization overestimation rules still apply and if any part of the pixel rectangle is covered by the generating primitive, fragments are generated for the entire pixel. However implementations {#0#} make the pixel coverage area even more conservative by increasing the size of the generating primitive."
        }
      },
      {
        "text": "float maxExtraPrimitiveOverestimationSize",
        "type": "float",
        "rawType": "float",
        "name": "maxExtraPrimitiveOverestimationSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float extraPrimitiveOverestimationSizeGranularity",
        "type": "float",
        "rawType": "float",
        "name": "extraPrimitiveOverestimationSizeGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 primitiveUnderestimation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "primitiveUnderestimation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 conservativePointAndLineRasterization",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "conservativePointAndLineRasterization",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 degenerateTrianglesRasterized",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "degenerateTrianglesRasterized",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 degenerateLinesRasterized",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "degenerateLinesRasterized",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fullyCoveredFragmentShaderInputVariable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fullyCoveredFragmentShaderInputVariable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 conservativeRasterizationPostDepthCoverage",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "conservativeRasterizationPostDepthCoverage",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing conservative raster properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCalibratedTimestampInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkTimeDomainEXT timeDomain",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "timeDomain",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkTimeDomainEXT",
        "enumRawType": "VkTimeDomainEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkTimeDomainEXT"
            }
          ],
          "description": " is a {#0#} value specifying the time domain from which the calibrated timestamp value should be returned."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying the input parameters of a calibrated timestamp query"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderCorePropertiesAMD",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t shaderEngineCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderEngineCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the number of shader engines found inside the shader core of the physical device."
        }
      },
      {
        "text": "uint32_t shaderArraysPerEngineCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderArraysPerEngineCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the number of shader arrays inside a shader engine. Each shader array has its own scan converter, set of compute units, and a render back end (color and depth buffers). Shader arrays within a shader engine share shader processor input (wave launcher) and shader export (export buffer) units. Currently, a shader engine can have one or two shader arrays."
        }
      },
      {
        "text": "uint32_t computeUnitsPerShaderArray",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "computeUnitsPerShaderArray",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " is a number value indicating the physical number of compute units within a shader array. The active number of compute units in a shader array {#0#} be lower. A compute unit houses a set of SIMDs along with a sequencer module and a local data store."
        }
      },
      {
        "text": "uint32_t simdPerComputeUnit",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "simdPerComputeUnit",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the number of SIMDs inside a compute unit. Each SIMD processes a single instruction at a time."
        }
      },
      {
        "text": "uint32_t wavefrontsPerSimd",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "wavefrontsPerSimd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t wavefrontSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "wavefrontSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the maximum size of a subgroup."
        }
      },
      {
        "text": "uint32_t sgprsPerSimd",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sgprsPerSimd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the number of physical Scalar General Purpose Registers (SGPRs) per SIMD."
        }
      },
      {
        "text": "uint32_t minSgprAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minSgprAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the minimum number of SGPRs allocated for a wave."
        }
      },
      {
        "text": "uint32_t maxSgprAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSgprAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the maximum number of SGPRs allocated for a wave."
        }
      },
      {
        "text": "uint32_t sgprAllocationGranularity",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sgprAllocationGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the granularity of SGPR allocation for a wave."
        }
      },
      {
        "text": "uint32_t vgprsPerSimd",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vgprsPerSimd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the number of physical Vector General Purpose Registers (VGPRs) per SIMD."
        }
      },
      {
        "text": "uint32_t minVgprAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minVgprAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the minimum number of VGPRs allocated for a wave."
        }
      },
      {
        "text": "uint32_t maxVgprAllocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVgprAllocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the maximum number of VGPRs allocated for a wave."
        }
      },
      {
        "text": "uint32_t vgprAllocationGranularity",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vgprAllocationGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the granularity of VGPR allocation for a wave."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing shader core properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderCoreProperties2AMD",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkShaderCorePropertiesFlagsAMD shaderCoreFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "shaderCoreFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderCorePropertiesFlagBitsAMD",
        "bitmaskRawType": "VkShaderCorePropertiesFlagsAMD",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkShaderCorePropertiesFlagBitsAMD"
            }
          ],
          "description": " is a bitmask of {#0#} indicating the set of features supported by the shader core."
        }
      },
      {
        "text": "uint32_t activeComputeUnitCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "activeComputeUnitCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value indicating the number of compute units that have been enabled."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing shader core properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineRasterizationConservativeStateCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineRasterizationConservativeStateCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineRasterizationConservativeStateCreateFlagsEXT",
        "bitmaskRawType": "VkPipelineRasterizationConservativeStateCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkConservativeRasterizationModeEXT conservativeRasterizationMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "conservativeRasterizationMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkConservativeRasterizationModeEXT",
        "enumRawType": "VkConservativeRasterizationModeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the conservative rasterization mode to use."
        }
      },
      {
        "text": "float extraPrimitiveOverestimationSize",
        "type": "float",
        "rawType": "float",
        "name": "extraPrimitiveOverestimationSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPhysicalDeviceConservativeRasterizationPropertiesEXT"
            },
            {
              "kind": "pname",
              "value": "primitiveOverestimationSize"
            }
          ],
          "description": " is the extra size in pixels to increase the generating primitive during conservative rasterization at each of its edges in `X` and `Y` equally in screen space beyond the base overestimation specified in {#0#}::{#1#}."
        }
      }
    ],
    "extends": [
      "VkPipelineRasterizationStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying conservative raster state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceDescriptorIndexingFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderInputAttachmentArrayDynamicIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderInputAttachmentArrayDynamicIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderUniformTexelBufferArrayDynamicIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderUniformTexelBufferArrayDynamicIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageTexelBufferArrayDynamicIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageTexelBufferArrayDynamicIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderUniformBufferArrayNonUniformIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderUniformBufferArrayNonUniformIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderSampledImageArrayNonUniformIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSampledImageArrayNonUniformIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageBufferArrayNonUniformIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageBufferArrayNonUniformIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageImageArrayNonUniformIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageImageArrayNonUniformIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderInputAttachmentArrayNonUniformIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderInputAttachmentArrayNonUniformIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderUniformTexelBufferArrayNonUniformIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderUniformTexelBufferArrayNonUniformIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderStorageTexelBufferArrayNonUniformIndexing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageTexelBufferArrayNonUniformIndexing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingUniformBufferUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingUniformBufferUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingSampledImageUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingSampledImageUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingStorageImageUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingStorageImageUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingStorageBufferUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingStorageBufferUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingUniformTexelBufferUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingUniformTexelBufferUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingStorageTexelBufferUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingStorageTexelBufferUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingUpdateUnusedWhilePending",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingUpdateUnusedWhilePending",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingPartiallyBound",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingPartiallyBound",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 descriptorBindingVariableDescriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorBindingVariableDescriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 runtimeDescriptorArray",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "runtimeDescriptorArray",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "RuntimeDescriptorArrayEXT"
            }
          ],
          "description": " indicates whether the implementation supports the SPIR-V {#1#} capability. If this feature is not enabled, descriptors {#0#} not be declared in runtime arrays."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing descriptor indexing features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceDescriptorIndexingPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxUpdateAfterBindDescriptorsInAllPools",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxUpdateAfterBindDescriptorsInAllPools",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT"
            }
          ],
          "description": " is the maximum number of descriptors (summed over all descriptor types) that {#0#} be created across all pools that are created with the {#2#} bit set. Pool creation {#1#} fail when this limit is exceeded, or when the space this limit represents is unable to satisfy a pool creation due to fragmentation."
        }
      },
      {
        "text": "VkBool32 shaderUniformBufferArrayNonUniformIndexingNative",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderUniformBufferArrayNonUniformIndexingNative",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " is a boolean value indicating whether uniform buffer descriptors natively support nonuniform indexing. If this is {#1#}, then a single dynamic instance of an instruction that nonuniformly indexes an array of uniform buffers {#0#} execute multiple times in order to access all the descriptors."
        }
      },
      {
        "text": "VkBool32 shaderSampledImageArrayNonUniformIndexingNative",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSampledImageArrayNonUniformIndexingNative",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " is a boolean value indicating whether sampler and image descriptors natively support nonuniform indexing. If this is {#1#}, then a single dynamic instance of an instruction that nonuniformly indexes an array of samplers or images {#0#} execute multiple times in order to access all the descriptors."
        }
      },
      {
        "text": "VkBool32 shaderStorageBufferArrayNonUniformIndexingNative",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageBufferArrayNonUniformIndexingNative",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " is a boolean value indicating whether storage buffer descriptors natively support nonuniform indexing. If this is {#1#}, then a single dynamic instance of an instruction that nonuniformly indexes an array of storage buffers {#0#} execute multiple times in order to access all the descriptors."
        }
      },
      {
        "text": "VkBool32 shaderStorageImageArrayNonUniformIndexingNative",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderStorageImageArrayNonUniformIndexingNative",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " is a boolean value indicating whether storage image descriptors natively support nonuniform indexing. If this is {#1#}, then a single dynamic instance of an instruction that nonuniformly indexes an array of storage images {#0#} execute multiple times in order to access all the descriptors."
        }
      },
      {
        "text": "VkBool32 shaderInputAttachmentArrayNonUniformIndexingNative",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderInputAttachmentArrayNonUniformIndexingNative",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " is a boolean value indicating whether input attachment descriptors natively support nonuniform indexing. If this is {#1#}, then a single dynamic instance of an instruction that nonuniformly indexes an array of input attachments {#0#} execute multiple times in order to access all the descriptors."
        }
      },
      {
        "text": "VkBool32 robustBufferAccessUpdateAfterBind",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "robustBufferAccessUpdateAfterBind",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "pname",
              "value": "robustBufferAccess"
            },
            {
              "kind": "pname",
              "value": "descriptorBindingUniformBufferUpdateAfterBind"
            },
            {
              "kind": "pname",
              "value": "descriptorBindingStorageBufferUpdateAfterBind"
            },
            {
              "kind": "pname",
              "value": "descriptorBindingUniformTexelBufferUpdateAfterBind"
            },
            {
              "kind": "pname",
              "value": "descriptorBindingStorageTexelBufferUpdateAfterBind"
            },
            {
              "kind": "pname",
              "value": "robustBufferAccess"
            }
          ],
          "description": " is a boolean value indicating whether <<features-robustBufferAccess, {#4#}>> {#0#} be enabled in a device simultaneously with {#5#}, {#6#}, {#7#}, and/or {#8#}. If this is {#3#}, then either {#9#} {#1#} be disabled or all of these update-after-bind features {#2#} be disabled."
        }
      },
      {
        "text": "VkBool32 quadDivergentImplicitLod",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "quadDivergentImplicitLod",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a boolean value indicating whether implicit level of detail calculations for image operations have well-defined results when the image and/or sampler objects used for the instruction are not uniform within a quad. See <<textures-derivative-image-operations,Derivative Image Operations>>."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorUpdateAfterBindSamplers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUpdateAfterBindSamplers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxPerStageDescriptorSamplers"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorUpdateAfterBindUniformBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUpdateAfterBindUniformBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxPerStageDescriptorUniformBuffers"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorUpdateAfterBindStorageBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUpdateAfterBindStorageBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxPerStageDescriptorStorageBuffers"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorUpdateAfterBindSampledImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUpdateAfterBindSampledImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxPerStageDescriptorSampledImages"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorUpdateAfterBindStorageImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUpdateAfterBindStorageImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxPerStageDescriptorStorageImages"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxPerStageDescriptorUpdateAfterBindInputAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageDescriptorUpdateAfterBindInputAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxPerStageDescriptorInputAttachments"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxPerStageUpdateAfterBindResources",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxPerStageUpdateAfterBindResources",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxPerStageResources"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindSamplers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindSamplers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetSamplers"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindUniformBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindUniformBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetUniformBuffers"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindUniformBuffersDynamic",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetUniformBuffersDynamic"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindStorageBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindStorageBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetStorageBuffers"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindStorageBuffersDynamic",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetStorageBuffersDynamic"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindSampledImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindSampledImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetSampledImages"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindStorageImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindStorageImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetStorageImages"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetUpdateAfterBindInputAttachments",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetUpdateAfterBindInputAttachments",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "maxDescriptorSetInputAttachments"
            }
          ],
          "description": " is similar to {#1#} but counts descriptors from descriptor sets created with or without the {#0#} bit set."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing descriptor indexing properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t bindingCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindingCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pBindingFlags"
            }
          ],
          "description": " is zero or the number of elements in {#0#}."
        }
      },
      {
        "text": "const VkDescriptorBindingFlagsEXT * pBindingFlags",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pBindingFlags",
        "isConstant": true,
        "dereferenceCount": 1,
        "bitmaskType": "VkDescriptorBindingFlagBitsEXT",
        "bitmaskRawType": "const VkDescriptorBindingFlagsEXT *",
        "isBitmaskType": true,
        "isArray": true,
        "length": "bindingCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkDescriptorBindingFlagsEXT"
            }
          ],
          "description": " is an array of {#0#} bitfields, one for each descriptor set layout binding."
        }
      }
    ],
    "extends": [
      "VkDescriptorSetLayoutCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying creation flags for descriptor set layout bindings"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t descriptorSetCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorSetCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDescriptorCounts"
            }
          ],
          "description": " is zero or the number of elements in {#0#}."
        }
      },
      {
        "text": "const uint32_t * pDescriptorCounts",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDescriptorCounts",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "descriptorSetCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of descriptor counts, with each member specifying the number of descriptors in a variable descriptor count binding in the corresponding descriptor set being allocated."
        }
      }
    ],
    "extends": [
      "VkDescriptorSetAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying additional allocation parameters for descriptor sets"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxVariableDescriptorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVariableDescriptorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
            },
            {
              "kind": "pname",
              "value": "maxVariableDescriptorCount"
            }
          ],
          "description": " indicates the maximum number of descriptors supported in the highest numbered binding of the layout, if that binding is variable-sized. If the highest numbered binding of the layout has a descriptor type of {#0#} then {#1#} indicates the maximum byte size supported for the binding, if that binding is variable-sized."
        }
      }
    ],
    "extends": [
      "VkDescriptorSetLayoutSupport"
    ],
    "sType": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure returning information about whether a descriptor set layout can be supported"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAttachmentDescription2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAttachmentDescriptionFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAttachmentDescriptionFlagBits",
        "bitmaskRawType": "VkAttachmentDescriptionFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentDescriptionFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional properties of the attachment."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormat"
            }
          ],
          "description": " is a {#0#} value specifying the format of the image that will be used for the attachment."
        }
      },
      {
        "text": "VkSampleCountFlagBits samples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSampleCountFlagBits"
            }
          ],
          "description": " is the number of samples of the image as defined in {#0#}."
        }
      },
      {
        "text": "VkAttachmentLoadOp loadOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "loadOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentLoadOp",
        "enumRawType": "VkAttachmentLoadOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentLoadOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of color and depth components of the attachment are treated at the beginning of the subpass where it is first used."
        }
      },
      {
        "text": "VkAttachmentStoreOp storeOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "storeOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentStoreOp",
        "enumRawType": "VkAttachmentStoreOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentStoreOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of color and depth components of the attachment are treated at the end of the subpass where it is last used."
        }
      },
      {
        "text": "VkAttachmentLoadOp stencilLoadOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stencilLoadOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentLoadOp",
        "enumRawType": "VkAttachmentLoadOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentLoadOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of stencil components of the attachment are treated at the beginning of the subpass where it is first used."
        }
      },
      {
        "text": "VkAttachmentStoreOp stencilStoreOp",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stencilStoreOp",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAttachmentStoreOp",
        "enumRawType": "VkAttachmentStoreOp",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAttachmentStoreOp"
            }
          ],
          "description": " is a {#0#} value specifying how the contents of stencil components of the attachment are treated at the end of the last subpass where it is used."
        }
      },
      {
        "text": "VkImageLayout initialLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "initialLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the layout the attachment image subresource will be in when a render pass instance begins."
        }
      },
      {
        "text": "VkImageLayout finalLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "finalLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the layout the attachment image subresource will be transitioned to when a render pass instance ends."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying an attachment description"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAttachmentReference2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t attachment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPassCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_UNUSED"
            },
            {
              "kind": "pname",
              "value": "pAttachments"
            }
          ],
          "description": " is either a number value identifying an attachment at the corresponding index in {#0#}::{#2#}, or {#1#} to signify that this attachment is not used."
        }
      },
      {
        "text": "VkImageLayout layout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageLayout"
            }
          ],
          "description": " is a {#0#} value specifying the layout the attachment uses during the subpass."
        }
      },
      {
        "text": "VkImageAspectFlags aspectMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "aspectMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageAspectFlagBits",
        "bitmaskRawType": "VkImageAspectFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is a mask of which aspect(s) {#0#} be accessed within the specified subpass as an input attachment."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying an attachment reference"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassDescription2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSubpassDescriptionFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSubpassDescriptionFlagBits",
        "bitmaskRawType": "VkSubpassDescriptionFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSubpassDescriptionFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying usage of the subpass."
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineBindPoint"
            }
          ],
          "description": " is a {#0#} value specifying the pipeline type supported for this subpass."
        }
      },
      {
        "text": "uint32_t viewMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a bitfield of view indices describing which views rendering is broadcast to in this subpass, when multiview is enabled."
        }
      },
      {
        "text": "uint32_t inputAttachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "inputAttachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of input attachments."
        }
      },
      {
        "text": "const VkAttachmentReference2KHR * pInputAttachments",
        "type": "VkAttachmentReference2KHR",
        "rawType": "const VkAttachmentReference2KHR *",
        "name": "pInputAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "inputAttachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference2KHR"
            }
          ],
          "description": " is an array of {#0#} structures defining the input attachments for this subpass and their layouts."
        }
      },
      {
        "text": "uint32_t colorAttachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "colorAttachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of color attachments."
        }
      },
      {
        "text": "const VkAttachmentReference2KHR * pColorAttachments",
        "type": "VkAttachmentReference2KHR",
        "rawType": "const VkAttachmentReference2KHR *",
        "name": "pColorAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "colorAttachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference2KHR"
            }
          ],
          "description": " is an array of {#0#} structures defining the color attachments for this subpass and their layouts."
        }
      },
      {
        "text": "const VkAttachmentReference2KHR * pResolveAttachments",
        "type": "VkAttachmentReference2KHR",
        "rawType": "const VkAttachmentReference2KHR *",
        "name": "pResolveAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "colorAttachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference2KHR"
            },
            {
              "kind": "pname",
              "value": "colorAttachmentCount"
            }
          ],
          "description": " is an optional array of {#1#} {#0#} structures defining the resolve attachments for this subpass and their layouts."
        }
      },
      {
        "text": "const VkAttachmentReference2KHR * pDepthStencilAttachment",
        "type": "VkAttachmentReference2KHR",
        "rawType": "const VkAttachmentReference2KHR *",
        "name": "pDepthStencilAttachment",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference2KHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the depth/stencil attachment for this subpass and its layout."
        }
      },
      {
        "text": "uint32_t preserveAttachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "preserveAttachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of preserved attachments."
        }
      },
      {
        "text": "const uint32_t * pPreserveAttachments",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pPreserveAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "preserveAttachmentCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "preserveAttachmentCount"
            }
          ],
          "description": " is an array of {#1#} render pass attachment indices identifying attachments that are not used by this subpass, but whose contents {#0#} be preserved throughout the subpass."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR",
    "extensions": [
      "VkSubpassDescriptionDepthStencilResolveKHR"
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying a subpass description"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassDependency2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t srcSubpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcSubpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SUBPASS_EXTERNAL"
            }
          ],
          "description": " is the subpass index of the first subpass in the dependency, or {#0#}."
        }
      },
      {
        "text": "uint32_t dstSubpass",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dstSubpass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SUBPASS_EXTERNAL"
            }
          ],
          "description": " is the subpass index of the second subpass in the dependency, or {#0#}."
        }
      },
      {
        "text": "VkPipelineStageFlags srcStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages-masks, source stage mask>>."
        }
      },
      {
        "text": "VkPipelineStageFlags dstStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages-masks, destination stage mask>>"
        }
      },
      {
        "text": "VkAccessFlags srcAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, source access mask>>."
        }
      },
      {
        "text": "VkAccessFlags dstAccessMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstAccessMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkAccessFlagBits",
        "bitmaskRawType": "VkAccessFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccessFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying a <<synchronization-access-masks, destination access mask>>."
        }
      },
      {
        "text": "VkDependencyFlags dependencyFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dependencyFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDependencyFlagBits",
        "bitmaskRawType": "VkDependencyFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDependencyFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#}."
        }
      },
      {
        "text": "int32_t viewOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "viewOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls which views in the source subpass the views in the destination subpass depend on."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying a subpass dependency"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassCreateInfo2KHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkRenderPassCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkRenderPassCreateFlagBits",
        "bitmaskRawType": "VkRenderPassCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t attachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentDescription2KHR"
            }
          ],
          "description": " {#0#} structures describing the attachments used by the render pass."
        }
      },
      {
        "text": "const VkAttachmentDescription2KHR * pAttachments",
        "type": "VkAttachmentDescription2KHR",
        "rawType": "const VkAttachmentDescription2KHR *",
        "name": "pAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "attachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t subpassCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subpassCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassDescription2KHR"
            }
          ],
          "description": " {#0#} structures describing each subpass."
        }
      },
      {
        "text": "const VkSubpassDescription2KHR * pSubpasses",
        "type": "VkSubpassDescription2KHR",
        "rawType": "const VkSubpassDescription2KHR *",
        "name": "pSubpasses",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "subpassCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t dependencyCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dependencyCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassDependency2KHR"
            }
          ],
          "description": " {#0#} structures describing dependencies between pairs of subpasses."
        }
      },
      {
        "text": "const VkSubpassDependency2KHR * pDependencies",
        "type": "VkSubpassDependency2KHR",
        "rawType": "const VkSubpassDependency2KHR *",
        "name": "pDependencies",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "dependencyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t correlatedViewMaskCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "correlatedViewMaskCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of correlation masks."
        }
      },
      {
        "text": "const uint32_t * pCorrelatedViewMasks",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pCorrelatedViewMasks",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "correlatedViewMaskCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " is an array of view masks indicating sets of views that {#0#} be more efficient to render concurrently."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR",
    "extensions": [
      "VkRenderPassFragmentDensityMapCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying parameters of a newly created render pass"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassBeginInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSubpassContents contents",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "contents",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSubpassContents",
        "enumRawType": "VkSubpassContents",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSubpassContents"
            }
          ],
          "description": " is a {#0#} value specifying how the commands in the next subpass will be provided."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying subpass begin info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassEndInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying subpass end info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 timelineSemaphore",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "timelineSemaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SEMAPHORE_TYPE_TIMELINE_KHR"
            },
            {
              "kind": "elink",
              "value": "VkSemaphoreTypeKHR"
            }
          ],
          "description": " indicates whether semaphores created with a {#1#} of {#0#} are supported."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing timeline semaphore features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceTimelineSemaphorePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint64_t maxTimelineSemaphoreValueDifference",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxTimelineSemaphoreValueDifference",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing timeline semaphore properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSemaphoreTypeCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphoreTypeKHR semaphoreType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "semaphoreType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSemaphoreTypeKHR",
        "enumRawType": "VkSemaphoreTypeKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SEMAPHORE_TYPE_TIMELINE_KHR"
            }
          ],
          "description": " is {#0#}."
        }
      },
      {
        "text": "uint64_t initialValue",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "initialValue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkSemaphoreCreateInfo",
      "VkPhysicalDeviceExternalSemaphoreInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure specifying the type of a newly created semaphore"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkTimelineSemaphoreSubmitInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t waitSemaphoreValueCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreValueCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pWaitSemaphoreValues"
            }
          ],
          "description": " is the number of semaphore wait values specified in {#0#}."
        }
      },
      {
        "text": "const uint64_t * pWaitSemaphoreValues",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pWaitSemaphoreValues",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "waitSemaphoreValueCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubmitInfo"
            },
            {
              "kind": "pname",
              "value": "waitSemaphoreValueCount"
            },
            {
              "kind": "pname",
              "value": "pWaitSemaphores"
            }
          ],
          "description": " is an array of length {#1#} containing values for the corresponding semaphores in {#0#}::{#2#} to wait for."
        }
      },
      {
        "text": "uint32_t signalSemaphoreValueCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "signalSemaphoreValueCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pSignalSemaphoreValues"
            }
          ],
          "description": " is the number of semaphore signal values specified in {#0#}."
        }
      },
      {
        "text": "const uint64_t * pSignalSemaphoreValues",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pSignalSemaphoreValues",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "signalSemaphoreValueCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubmitInfo"
            },
            {
              "kind": "pname",
              "value": "signalSemaphoreValueCount"
            },
            {
              "kind": "pname",
              "value": "pSignalSemaphores"
            }
          ],
          "description": " is an array of length {#1#} containing values for the corresponding semaphores in {#0#}::{#2#} to set when signaled."
        }
      }
    ],
    "extends": [
      "VkSubmitInfo",
      "VkBindSparseInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying signal and wait values for timeline semaphores"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSemaphoreWaitInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphoreWaitFlagsKHR flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSemaphoreWaitFlagBitsKHR",
        "bitmaskRawType": "VkSemaphoreWaitFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSemaphoreWaitFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional parameters for the semaphore wait operation."
        }
      },
      {
        "text": "uint32_t semaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "semaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " timeline semaphore values."
        }
      },
      {
        "text": "const VkSemaphore * pSemaphores",
        "type": "VkSemaphore",
        "rawType": "const VkSemaphore *",
        "name": "pSemaphores",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "semaphoreCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const uint64_t * pValues",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pValues",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "semaphoreCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure containing information about the semaphore wait condition"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSemaphoreSignalInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the handle of the semaphore to signal."
        }
      },
      {
        "text": "uint64_t value",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "value",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the value to signal."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Structure containing information about a semaphore signal operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkVertexInputBindingDivisorDescriptionEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t binding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "binding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the binding number for which the divisor is specified."
        }
      },
      {
        "text": "uint32_t divisor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "divisor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT"
            },
            {
              "kind": "pname",
              "value": "maxVertexAttribDivisor"
            },
            {
              "kind": "pname",
              "value": "vertexAttributeInstanceRateZeroDivisor"
            }
          ],
          "description": " is the number of successive instances that will use the same value of the vertex attribute when instanced rendering is enabled. For example, if the divisor is N, the same vertex attribute will be applied to N successive instances before moving on to the next vertex attribute. The maximum value of divisor is implementation dependent and can be queried using {#1#}::{#2#}. A value of `0` {#0#} be used for the divisor if the <<features-vertexAttributeInstanceRateZeroDivisor,{#3#}>> feature is enabled. In this case, the same vertex attribute will be applied to all instances."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Processing",
      "description": "Structure specifying a divisor used in instanced rendering"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineVertexInputDivisorStateCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure"
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure"
        }
      },
      {
        "text": "uint32_t vertexBindingDivisorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexBindingDivisorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pVertexBindingDivisors"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkVertexInputBindingDivisorDescriptionEXT * pVertexBindingDivisors",
        "type": "VkVertexInputBindingDivisorDescriptionEXT",
        "rawType": "const VkVertexInputBindingDivisorDescriptionEXT *",
        "name": "pVertexBindingDivisors",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "vertexBindingDivisorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkVertexInputBindingDivisorDescriptionEXT"
            }
          ],
          "description": " is an array of {#0#} structures, which specifies the divisor value for each binding."
        }
      }
    ],
    "extends": [
      "VkPipelineVertexInputStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Processing",
      "description": "Structure specifying vertex attributes assignment during instanced rendering"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxVertexAttribDivisor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxVertexAttribDivisor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum value of the number of instances that will repeat the value of vertex attribute data when instanced rendering is enabled."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing max value of vertex attribute divisor that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevicePCIBusInfoPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t pciDomain",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pciDomain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the PCI bus domain."
        }
      },
      {
        "text": "uint32_t pciBus",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pciBus",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the PCI bus identifier."
        }
      },
      {
        "text": "uint32_t pciDevice",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pciDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the PCI device identifier."
        }
      },
      {
        "text": "uint32_t pciFunction",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pciFunction",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the PCI device function identifier."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Structure containing PCI bus information of a physical device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImportAndroidHardwareBufferInfoANDROID",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "struct AHardwareBuffer * buffer",
        "type": "AHardwareBuffer",
        "rawType": "struct AHardwareBuffer *",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the Android hardware buffer to import."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Import memory from an Android hardware buffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAndroidHardwareBufferUsageANDROID",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint64_t androidHardwareBufferUsage",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "androidHardwareBufferUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " returns the Android hardware buffer usage flags."
        }
      }
    ],
    "extends": [
      "VkImageFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Struct containing Android hardware buffer usage flags"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAndroidHardwareBufferPropertiesANDROID",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceSize allocationSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "allocationSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the size of the external memory"
        }
      },
      {
        "text": "uint32_t memoryTypeBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryTypeBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is a bitmask containing one bit set for every memory type which the specified Android hardware buffer {#0#} be imported as."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID",
    "extensions": [
      "VkAndroidHardwareBufferFormatPropertiesANDROID"
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Properties of External Memory Android Hardware Buffers"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryGetAndroidHardwareBufferInfoANDROID",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the memory object from which the Android hardware buffer will be exported."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure describing an Android hardware buffer memory export operation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAndroidHardwareBufferFormatPropertiesANDROID",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_FORMAT_UNDEFINED"
            }
          ],
          "description": " is the Vulkan format corresponding to the Android hardware buffer's format, or {#0#} if there is not an equivalent Vulkan format."
        }
      },
      {
        "text": "uint64_t externalFormat",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "externalFormat",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkExternalFormatANDROID"
            }
          ],
          "description": " is an implementation-defined external format identifier for use with {#1#}. It {#0#} not be zero."
        }
      },
      {
        "text": "VkFormatFeatureFlags formatFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "formatFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFormatFeatureFlagBits",
        "bitmaskRawType": "VkFormatFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "buffer"
            }
          ],
          "description": " describes the capabilities of this external format when used with an image bound to memory imported from {#0#}."
        }
      },
      {
        "text": "VkComponentMapping samplerYcbcrConversionComponents",
        "type": "VkComponentMapping",
        "rawType": "VkComponentMapping",
        "name": "samplerYcbcrConversionComponents",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkSamplerYcbcrConversionCreateInfo"
            }
          ],
          "description": " is the component swizzle that {#0#} be used in {#1#}."
        }
      },
      {
        "text": "VkSamplerYcbcrModelConversion suggestedYcbcrModel",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "suggestedYcbcrModel",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerYcbcrModelConversion",
        "enumRawType": "VkSamplerYcbcrModelConversion",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSamplerYcbcrConversionCreateInfo"
            }
          ],
          "description": " is a suggested color model to use in the {#0#}."
        }
      },
      {
        "text": "VkSamplerYcbcrRange suggestedYcbcrRange",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "suggestedYcbcrRange",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSamplerYcbcrRange",
        "enumRawType": "VkSamplerYcbcrRange",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSamplerYcbcrConversionCreateInfo"
            }
          ],
          "description": " is a suggested numerical value range to use in {#0#}."
        }
      },
      {
        "text": "VkChromaLocation suggestedXChromaOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "suggestedXChromaOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkChromaLocation",
        "enumRawType": "VkChromaLocation",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSamplerYcbcrConversionCreateInfo"
            }
          ],
          "description": " is a suggested X chroma offset to use in {#0#}."
        }
      },
      {
        "text": "VkChromaLocation suggestedYChromaOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "suggestedYChromaOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkChromaLocation",
        "enumRawType": "VkChromaLocation",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSamplerYcbcrConversionCreateInfo"
            }
          ],
          "description": " is a suggested Y chroma offset to use in {#0#}."
        }
      }
    ],
    "extends": [
      "VkAndroidHardwareBufferPropertiesANDROID"
    ],
    "sType": "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure describing the image format properties of an Android hardware buffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCommandBufferInheritanceConditionalRenderingInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure"
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure"
        }
      },
      {
        "text": "VkBool32 conditionalRenderingEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "conditionalRenderingEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " specifies whether the command buffer {#0#} be executed while conditional rendering is active in the primary command buffer. If this is {#3#}, then this command buffer {#1#} be executed whether the primary command buffer has active conditional rendering or not. If this is {#4#}, then the primary command buffer {#2#} not have conditional rendering active."
        }
      }
    ],
    "extends": [
      "VkCommandBufferInheritanceInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Structure specifying command buffer inheritance info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkExternalFormatANDROID",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint64_t externalFormat",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "externalFormat",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an implementation-defined identifier for the external format"
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo",
      "VkSamplerYcbcrConversionCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure containing an Android hardware buffer external format"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevice8BitStorageFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 storageBuffer8BitAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storageBuffer8BitAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "StorageBuffer"
            },
            {
              "kind": "code",
              "value": "PhysicalStorageBufferEXT"
            }
          ],
          "description": " indicates whether objects in the {#0#} or {#1#}"
        }
      },
      {
        "text": "VkBool32 uniformAndStorageBuffer8BitAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "uniformAndStorageBuffer8BitAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 storagePushConstant8",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storagePushConstant8",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing features supported by VK_KHR_8bit_storage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 conditionalRendering",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "conditionalRendering",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether conditional rendering is supported."
        }
      },
      {
        "text": "VkBool32 inheritedConditionalRendering",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "inheritedConditionalRendering",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies whether a secondary command buffer {#0#} be executed while conditional rendering is active in the primary command buffer."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing if a secondary command buffer can be executed if conditional rendering is active in the primary command buffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 vulkanMemoryModel",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vulkanMemoryModel",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "VulkanMemoryModelKHR"
            }
          ],
          "description": " indicates whether the Vulkan Memory Model is supported, as defined in <<memory-model,Vulkan Memory Model>>. This also indicates whether shader modules {#0#} declare the {#1#} capability."
        }
      },
      {
        "text": "VkBool32 vulkanMemoryModelDeviceScope",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vulkanMemoryModelDeviceScope",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "Device"
            },
            {
              "kind": "code",
              "value": "VulkanMemoryModelDeviceScopeKHR"
            }
          ],
          "description": " indicates whether the Vulkan Memory Model can use {#1#} scope synchronization. This also indicates whether shader modules {#0#} declare the {#2#} capability."
        }
      },
      {
        "text": "VkBool32 vulkanMemoryModelAvailabilityVisibilityChains",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vulkanMemoryModelAvailabilityVisibilityChains",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the Vulkan Memory Model can use <<memory-model-availability-visibility, availability and visibility chains>> with more than one element."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing features supported by VK_KHR_vulkan_memory_model"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 shaderBufferInt64Atomics",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderBufferInt64Atomics",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " indicates whether shaders {#0#} support 64-bit unsigned and signed integer atomic operations on buffers."
        }
      },
      {
        "text": "VkBool32 shaderSharedInt64Atomics",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSharedInt64Atomics",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " indicates whether shaders {#0#} support 64-bit unsigned and signed integer atomic operations on shared memory."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing features supported by VK_KHR_shader_atomic_int64"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 vertexAttributeInstanceRateDivisor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexAttributeInstanceRateDivisor",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether vertex attribute fetching may be repeated in case of instanced rendering."
        }
      },
      {
        "text": "VkBool32 vertexAttributeInstanceRateZeroDivisor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexAttributeInstanceRateZeroDivisor",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkVertexInputBindingDivisorDescriptionEXT"
            },
            {
              "kind": "pname",
              "value": "divisor"
            }
          ],
          "description": " specifies whether a zero value for {#0#}::{#1#} is supported."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing if fetching of vertex attribute may be repeated for instanced rendering"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkQueueFamilyCheckpointPropertiesNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineStageFlags checkpointExecutionStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "checkpointExecutionStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a mask indicating which pipeline stages the implementation can execute checkpoint markers in."
        }
      }
    ],
    "extends": [
      "VkQueueFamilyProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_device_diagnostic_checkpoints",
      "description": "return structure for queue family checkpoint info query"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCheckpointDataNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure"
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineStageFlagBits stage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates which pipeline stage the checkpoint marker data refers to."
        }
      },
      {
        "text": "void * pCheckpointMarker",
        "type": "void",
        "rawType": "void *",
        "name": "pCheckpointMarker",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "stage"
            }
          ],
          "description": " contains the value of the last checkpoint marker executed in the stage that {#0#} refers to."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_device_diagnostic_checkpoints",
      "description": "return structure for command buffer checkpoint data"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceDepthStencilResolvePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkResolveModeFlagsKHR supportedDepthResolveModes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedDepthResolveModes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkResolveModeFlagBitsKHR",
        "bitmaskRawType": "VkResolveModeFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR"
            },
            {
              "kind": "elink",
              "value": "VkResolveModeFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#3#} indicating the set of supported depth resolve modes. {#2#} {#1#} be included in the set but implementations {#0#} support additional modes."
        }
      },
      {
        "text": "VkResolveModeFlagsKHR supportedStencilResolveModes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "supportedStencilResolveModes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkResolveModeFlagBitsKHR",
        "bitmaskRawType": "VkResolveModeFlagsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR"
            },
            {
              "kind": "ename",
              "value": "VK_RESOLVE_MODE_AVERAGE_BIT_KHR"
            },
            {
              "kind": "elink",
              "value": "VkResolveModeFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#5#} indicating the set of supported stencil resolve modes. {#3#} {#1#} be included in the set but implementations {#0#} support additional modes. {#4#} {#2#} not be included in the set."
        }
      },
      {
        "text": "VkBool32 independentResolveNone",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "independentResolveNone",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_RESOLVE_MODE_NONE_KHR"
            }
          ],
          "description": " is {#0#} if the implementation supports setting the depth and stencil resolve modes to different values when one of those modes is {#1#}. Otherwise the implementation only supports setting both modes to the same value."
        }
      },
      {
        "text": "VkBool32 independentResolve",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "independentResolve",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_RESOLVE_MODE_NONE_KHR"
            },
            {
              "kind": "pname",
              "value": "independentResolve"
            },
            {
              "kind": "pname",
              "value": "independentResolveNone"
            }
          ],
          "description": " is {#1#} if the implementation supports all combinations of the supported depth and stencil resolve modes, including setting either depth or stencil resolve mode to {#2#}. An implementation that supports {#3#} {#0#} also support {#4#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing depth/stencil resolve properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSubpassDescriptionDepthStencilResolveKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkResolveModeFlagBitsKHR depthResolveMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "depthResolveMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkResolveModeFlagBitsKHR",
        "bitmaskRawType": "VkResolveModeFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkResolveModeFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#0#} describing the depth resolve mode."
        }
      },
      {
        "text": "VkResolveModeFlagBitsKHR stencilResolveMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stencilResolveMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkResolveModeFlagBitsKHR",
        "bitmaskRawType": "VkResolveModeFlagBitsKHR",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkResolveModeFlagBitsKHR"
            }
          ],
          "description": " is a bitmask of {#0#} describing the stencil resolve mode."
        }
      },
      {
        "text": "const VkAttachmentReference2KHR * pDepthStencilResolveAttachment",
        "type": "VkAttachmentReference2KHR",
        "rawType": "const VkAttachmentReference2KHR *",
        "name": "pDepthStencilResolveAttachment",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAttachmentReference"
            }
          ],
          "description": " is an optional {#0#} structure defining the depth/stencil resolve attachment for this subpass and its layout."
        }
      }
    ],
    "extends": [
      "VkSubpassDescription2KHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying depth/stencil resolve operations for a subpass"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageViewASTCDecodeModeEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFormat decodeMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "decodeMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the intermediate format used to decode ASTC compressed formats."
        }
      }
    ],
    "extends": [
      "VkImageViewCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure describing the ASTC decode mode for an image view"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceASTCDecodeFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 decodeModeSharedExponent",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "decodeModeSharedExponent",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing ASTC decode mode features"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 transformFeedback",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "transformFeedback",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "TransformFeedback"
            }
          ],
          "description": " indicates whether the implementation supports transform feedback and shader modules {#0#} declare the {#1#} capability."
        }
      },
      {
        "text": "VkBool32 geometryStreams",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "geometryStreams",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing transform feedback features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceTransformFeedbackPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxTransformFeedbackStreams",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTransformFeedbackStreams",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkPhysicalDeviceTransformFeedbackFeaturesEXT"
            },
            {
              "kind": "pname",
              "value": "geometryStreams"
            },
            {
              "kind": "pname",
              "value": "maxTransformFeedbackStreams"
            },
            {
              "kind": "code",
              "value": "GeometryStreams"
            }
          ],
          "description": " is the maximum number of vertex streams that can be output from geometry shaders declared with the {#4#} capability. If the implementation does not support {#1#}::{#2#} then {#3#} {#0#} be set to `1`."
        }
      },
      {
        "text": "uint32_t maxTransformFeedbackBuffers",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTransformFeedbackBuffers",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize maxTransformFeedbackBufferSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxTransformFeedbackBufferSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTransformFeedbackStreamDataSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTransformFeedbackStreamDataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTransformFeedbackBufferDataSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTransformFeedbackBufferDataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t maxTransformFeedbackBufferDataStride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTransformFeedbackBufferDataStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 transformFeedbackQueries",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "transformFeedbackQueries",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 transformFeedbackStreamsLinesTriangles",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "transformFeedbackStreamsLinesTriangles",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 transformFeedbackRasterizationStreamSelect",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "transformFeedbackRasterizationStreamSelect",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 transformFeedbackDraw",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "transformFeedbackDraw",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing transform feedback properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineRasterizationStateStreamCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineRasterizationStateStreamCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineRasterizationStateStreamCreateFlagsEXT",
        "bitmaskRawType": "VkPipelineRasterizationStateStreamCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "uint32_t rasterizationStream",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "rasterizationStream",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the vertex stream selected for rasterization."
        }
      }
    ],
    "extends": [
      "VkPipelineRasterizationStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure defining the geometry stream used for rasterization"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 representativeFragmentTest",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "representativeFragmentTest",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the implementation supports the representative fragment test. See <<fragops-rep-frag-test, Representative Fragment Test>>."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the representative fragment test features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineRepresentativeFragmentTestStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 representativeFragmentTestEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "representativeFragmentTestEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether the representative fragment test is enabled."
        }
      }
    ],
    "extends": [
      "VkGraphicsPipelineCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying representative fragment test"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceExclusiveScissorFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 exclusiveScissor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "exclusiveScissor",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates that the implementation supports the exclusive scissor test."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing exclusive scissor features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineViewportExclusiveScissorStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t exclusiveScissorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "exclusiveScissorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of exclusive scissor rectangles used by the pipeline."
        }
      },
      {
        "text": "const VkRect2D * pExclusiveScissors",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pExclusiveScissors",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "exclusiveScissorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRect2D"
            }
          ],
          "description": " is an array of {#0#} structures defining exclusive scissor rectangles. If the exclusive scissor state is dynamic, this member is ignored."
        }
      }
    ],
    "extends": [
      "VkPipelineViewportStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying parameters controlling exclusive scissor testing"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceCornerSampledImageFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 cornerSampledImage",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "cornerSampledImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " specifies whether images can be created with a {#0#}::{#2#} containing {#1#}. See <<resources-images-corner-sampled,Corner-Sampled Images>>."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing corner sampled image features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 computeDerivativeGroupQuads",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "computeDerivativeGroupQuads",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 computeDerivativeGroupLinear",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "computeDerivativeGroupLinear",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing compute shader derivative features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fragmentShaderBarycentric",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentShaderBarycentric",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "BaryCoordNV"
            },
            {
              "kind": "code",
              "value": "BaryCoordNoPerspNV"
            },
            {
              "kind": "code",
              "value": "PerVertexNV"
            }
          ],
          "description": " indicates that the implementation supports the {#0#} and {#1#} SPIR-V fragment shader built-ins and supports the {#2#} SPIR-V decoration on fragment shader input variables."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing barycentric support in fragment shaders that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 imageFootprint",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageFootprint",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ImageFootprintNV"
            }
          ],
          "description": " specifies whether the implementation supports the {#0#} SPIR-V capability."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing shader image footprint features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 dedicatedAllocationImageAliasing",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dedicatedAllocationImageAliasing",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing dedicated allocation image aliasing features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkShadingRatePaletteNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t shadingRatePaletteEntryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shadingRatePaletteEntryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of entries in the shading rate image palette."
        }
      },
      {
        "text": "const VkShadingRatePaletteEntryNV * pShadingRatePaletteEntries",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pShadingRatePaletteEntries",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkShadingRatePaletteEntryNV",
        "enumRawType": "const VkShadingRatePaletteEntryNV *",
        "isArray": true,
        "length": "shadingRatePaletteEntryCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkShadingRatePaletteEntryNV"
            }
          ],
          "description": " is an array of {#0#} enums defining the shading rate for each palette entry."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying a single shading rate palette"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineViewportShadingRateImageStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 shadingRateImageEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shadingRateImageEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies whether shading rate image and palettes are used during rasterization."
        }
      },
      {
        "text": "uint32_t viewportCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of per-viewport palettes used to translate values stored in shading rate images."
        }
      },
      {
        "text": "const VkShadingRatePaletteNV * pShadingRatePalettes",
        "type": "VkShadingRatePaletteNV",
        "rawType": "const VkShadingRatePaletteNV *",
        "name": "pShadingRatePalettes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "viewportCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkShadingRatePaletteNV"
            }
          ],
          "description": " is an array of {#0#} structures defining the palette for each viewport. If the shading rate palette state is dynamic, this member is ignored."
        }
      }
    ],
    "extends": [
      "VkPipelineViewportStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying parameters controlling shading rate image usage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShadingRateImageFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shadingRateImage",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shadingRateImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ShadingRateNV"
            }
          ],
          "description": " indicates that the implementation supports the use of a shading rate image to derive an effective shading rate for fragment processing. It also indicates that the implementation supports the {#0#} SPIR-V execution mode."
        }
      },
      {
        "text": "VkBool32 shadingRateCoarseSampleOrder",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shadingRateCoarseSampleOrder",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates that the implementation supports a user-configurable ordering of coverage samples in fragments larger than one pixel."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing shading rate image features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShadingRateImagePropertiesNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkExtent2D shadingRateTexelSize",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "shadingRateTexelSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " indicates the width and height of the portion of the framebuffer corresponding to each texel in the shading rate image."
        }
      },
      {
        "text": "uint32_t shadingRatePaletteSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shadingRatePaletteSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t shadingRateMaxCoarseSamples",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shadingRateMaxCoarseSamples",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing shading rate image limits that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCoarseSampleLocationNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t pixelX",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pixelX",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is added to the x coordinate of the upper-leftmost pixel of each fragment to identify the pixel containing the coverage sample."
        }
      },
      {
        "text": "uint32_t pixelY",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pixelY",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is added to the y coordinate of the upper-leftmost pixel of each fragment to identify the pixel containing the coverage sample."
        }
      },
      {
        "text": "uint32_t sample",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sample",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pixelX"
            },
            {
              "kind": "pname",
              "value": "pixelY"
            }
          ],
          "description": " is the number of the coverage sample in the pixel identified by {#0#} and {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying parameters controlling shading rate image usage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCoarseSampleOrderCustomNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkShadingRatePaletteEntryNV shadingRate",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "shadingRate",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkShadingRatePaletteEntryNV",
        "enumRawType": "VkShadingRatePaletteEntryNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a shading rate palette entry that identifies the fragment width and height for the combination of fragment area and per-pixel coverage sample count to control."
        }
      },
      {
        "text": "uint32_t sampleCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sampleCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " identifies the per-pixel coverage sample count for the combination of fragment area and coverage sample count to control."
        }
      },
      {
        "text": "uint32_t sampleLocationCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "sampleLocationCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of sample locations in the custom ordering."
        }
      },
      {
        "text": "const VkCoarseSampleLocationNV * pSampleLocations",
        "type": "VkCoarseSampleLocationNV",
        "rawType": "const VkCoarseSampleLocationNV *",
        "name": "pSampleLocations",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "sampleLocationCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCoarseSampleOrderCustomNV"
            }
          ],
          "description": " is an array of {#0#} structures specifying the location of each sample in the custom ordering."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying parameters controlling shading rate image usage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkCoarseSampleOrderTypeNV sampleOrderType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampleOrderType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCoarseSampleOrderTypeNV",
        "enumRawType": "VkCoarseSampleOrderTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the mechanism used to order coverage samples in fragments larger than one pixel."
        }
      },
      {
        "text": "uint32_t customSampleOrderCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "customSampleOrderCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of custom sample orderings to use when ordering coverage samples."
        }
      },
      {
        "text": "const VkCoarseSampleOrderCustomNV * pCustomSampleOrders",
        "type": "VkCoarseSampleOrderCustomNV",
        "rawType": "const VkCoarseSampleOrderCustomNV *",
        "name": "pCustomSampleOrders",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "customSampleOrderCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCoarseSampleOrderCustomNV"
            },
            {
              "kind": "pname",
              "value": "customSampleOrderCount"
            }
          ],
          "description": " is an array of {#1#} {#0#} structures, each of which specifies the coverage sample order for a single combination of fragment area and coverage sample count."
        }
      }
    ],
    "extends": [
      "VkPipelineViewportStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying parameters controlling sample order in coarse fragments"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMeshShaderFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 taskShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "taskShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the task shader stage is supported."
        }
      },
      {
        "text": "VkBool32 meshShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "meshShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the mesh shader stage is supported."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing mesh shading features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMeshShaderPropertiesNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t maxDrawMeshTasksCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDrawMeshTasksCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the maximum number of local workgroups that {#0#} be launched by a single draw mesh tasks command. See <<drawing-mesh-shading>>."
        }
      },
      {
        "text": "uint32_t maxTaskWorkGroupInvocations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTaskWorkGroupInvocations",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "LocalSize"
            },
            {
              "kind": "code",
              "value": "WorkgroupSize"
            }
          ],
          "description": " is the maximum total number of task shader invocations in a single local workgroup. The product of the X, Y, and Z sizes, as specified by the {#1#} execution mode in shader modules or by the object decorated by the {#2#} decoration, {#0#} be less than or equal to this limit."
        }
      },
      {
        "text": "uint32_t maxTaskWorkGroupSize [3]",
        "type": "uint32_t",
        "rawType": "uint32_t [3]",
        "name": "maxTaskWorkGroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "3",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t maxTaskTotalMemorySize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTaskTotalMemorySize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of bytes that the task shader can use in total for shared and output memory combined."
        }
      },
      {
        "text": "uint32_t maxTaskOutputCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxTaskOutputCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of output tasks a single task shader workgroup can emit."
        }
      },
      {
        "text": "uint32_t maxMeshWorkGroupInvocations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMeshWorkGroupInvocations",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "LocalSize"
            },
            {
              "kind": "code",
              "value": "WorkgroupSize"
            }
          ],
          "description": " is the maximum total number of mesh shader invocations in a single local workgroup. The product of the X, Y, and Z sizes, as specified by the {#1#} execution mode in shader modules or by the object decorated by the {#2#} decoration, {#0#} be less than or equal to this limit."
        }
      },
      {
        "text": "uint32_t maxMeshWorkGroupSize [3]",
        "type": "uint32_t",
        "rawType": "uint32_t [3]",
        "name": "maxMeshWorkGroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "3",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "uint32_t maxMeshTotalMemorySize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMeshTotalMemorySize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of bytes that the mesh shader can use in total for shared and output memory combined."
        }
      },
      {
        "text": "uint32_t maxMeshOutputVertices",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMeshOutputVertices",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of vertices a mesh shader output can store."
        }
      },
      {
        "text": "uint32_t maxMeshOutputPrimitives",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMeshOutputPrimitives",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of primitives a mesh shader output can store."
        }
      },
      {
        "text": "uint32_t maxMeshMultiviewViewCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxMeshMultiviewViewCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of multi-view views a mesh shader can use."
        }
      },
      {
        "text": "uint32_t meshOutputPerVertexGranularity",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "meshOutputPerVertexGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "maxMeshTotalMemorySize"
            }
          ],
          "description": " is the granularity with which mesh vertex outputs are allocated. The value can be used to compute the memory size used by the mesh shader, which must be less than or equal to {#0#}."
        }
      },
      {
        "text": "uint32_t meshOutputPerPrimitiveGranularity",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "meshOutputPerPrimitiveGranularity",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "maxMeshTotalMemorySize"
            }
          ],
          "description": " is the granularity with which mesh outputs qualified as per-primitive are allocated. The value can be used to compute the memory size used by the mesh shader, which must be less than or equal to {#0#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing mesh shading properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDrawMeshTasksIndirectCommandNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t taskCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "taskCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the X dimension. Y and Z dimension are implicitly set to one."
        }
      },
      {
        "text": "uint32_t firstTask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstTask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the X component of the first workgroup ID."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_mesh_shader",
      "description": "Structure specifying a mesh tasks draw indirect command"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRayTracingShaderGroupCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkRayTracingShaderGroupTypeNV type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkRayTracingShaderGroupTypeNV",
        "enumRawType": "VkRayTracingShaderGroupTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of hit group specified in this structure."
        }
      },
      {
        "text": "uint32_t generalShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "generalShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkRayTracingPipelineCreateInfoNV"
            },
            {
              "kind": "ename",
              "value": "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV"
            },
            {
              "kind": "ename",
              "value": "VK_SHADER_UNUSED_NV"
            },
            {
              "kind": "pname",
              "value": "pStages"
            },
            {
              "kind": "pname",
              "value": "type"
            }
          ],
          "description": " is the index of the ray generation, miss, or callable shader from {#0#}::{#3#} in the group if the shader group has {#4#} of {#1#} and {#2#} otherwise."
        }
      },
      {
        "text": "uint32_t closestHitShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "closestHitShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkRayTracingPipelineCreateInfoNV"
            },
            {
              "kind": "ename",
              "value": "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV"
            },
            {
              "kind": "ename",
              "value": "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV"
            },
            {
              "kind": "ename",
              "value": "VK_SHADER_UNUSED_NV"
            },
            {
              "kind": "pname",
              "value": "pStages"
            },
            {
              "kind": "pname",
              "value": "type"
            }
          ],
          "description": " is the optional index of the closest hit shader from {#0#}::{#4#} in the group if the shader group has {#5#} of {#1#} or {#2#} and {#3#} otherwise."
        }
      },
      {
        "text": "uint32_t anyHitShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "anyHitShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkRayTracingPipelineCreateInfoNV"
            },
            {
              "kind": "ename",
              "value": "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV"
            },
            {
              "kind": "ename",
              "value": "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV"
            },
            {
              "kind": "ename",
              "value": "VK_SHADER_UNUSED_NV"
            },
            {
              "kind": "pname",
              "value": "pStages"
            },
            {
              "kind": "pname",
              "value": "type"
            }
          ],
          "description": " is the optional index of the any-hit shader from {#0#}::{#4#} in the group if the shader group has {#5#} of {#1#} or {#2#} and {#3#} otherwise."
        }
      },
      {
        "text": "uint32_t intersectionShader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "intersectionShader",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkRayTracingPipelineCreateInfoNV"
            },
            {
              "kind": "ename",
              "value": "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV"
            },
            {
              "kind": "ename",
              "value": "VK_SHADER_UNUSED_NV"
            },
            {
              "kind": "pname",
              "value": "pStages"
            },
            {
              "kind": "pname",
              "value": "type"
            }
          ],
          "description": " is the index of the intersection shader from {#0#}::{#3#} in the group if the shader group has {#4#} of {#1#} and {#2#} otherwise."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying shaders in a shader group"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRayTracingPipelineCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCreateFlagBits",
        "bitmaskRawType": "VkPipelineCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineCreateFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying how the pipeline will be generated."
        }
      },
      {
        "text": "uint32_t stageCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stageCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineShaderStageCreateInfo"
            }
          ],
          "description": " {#0#} structures describing the set of the shader stages to be included in the ray tracing pipeline."
        }
      },
      {
        "text": "const VkPipelineShaderStageCreateInfo * pStages",
        "type": "VkPipelineShaderStageCreateInfo",
        "rawType": "const VkPipelineShaderStageCreateInfo *",
        "name": "pStages",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "stageCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " array."
        }
      },
      {
        "text": "uint32_t groupCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRayTracingShaderGroupCreateInfoNV"
            }
          ],
          "description": " {#0#} structures describing the set of the shader stages to be included in each shader group in the ray tracing pipeline."
        }
      },
      {
        "text": "const VkRayTracingShaderGroupCreateInfoNV * pGroups",
        "type": "VkRayTracingShaderGroupCreateInfoNV",
        "rawType": "const VkRayTracingShaderGroupCreateInfoNV *",
        "name": "pGroups",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "groupCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " array."
        }
      },
      {
        "text": "uint32_t maxRecursionDepth",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxRecursionDepth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum recursion that will be called from this pipeline."
        }
      },
      {
        "text": "VkPipelineLayout layout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the description of binding locations used by both the pipeline and descriptor sets used with the pipeline."
        }
      },
      {
        "text": "VkPipeline basePipelineHandle",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "basePipelineHandle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is a pipeline to derive from."
        }
      },
      {
        "text": "int32_t basePipelineIndex",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "basePipelineIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV",
    "extensions": [
      "VkPipelineCreationFeedbackCreateInfoEXT"
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying parameters of a newly created ray tracing pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkGeometryTrianglesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBuffer vertexData",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "vertexData",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " containing vertex data for this geometry."
        }
      },
      {
        "text": "VkDeviceSize vertexOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "vertexOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t vertexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of valid vertices."
        }
      },
      {
        "text": "VkDeviceSize vertexStride",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "vertexStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the stride in bytes between each vertex."
        }
      },
      {
        "text": "VkFormat vertexFormat",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "vertexFormat",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the format of each vertex element."
        }
      },
      {
        "text": "VkBuffer indexData",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "indexData",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " containing index data for this geometry."
        }
      },
      {
        "text": "VkDeviceSize indexOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "indexOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t indexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "indexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of indices to include in this geometry."
        }
      },
      {
        "text": "VkIndexType indexType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "indexType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkIndexType",
        "enumRawType": "VkIndexType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the format of each index."
        }
      },
      {
        "text": "VkBuffer transformData",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "transformData",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " of the transform information described above."
        }
      },
      {
        "text": "VkDeviceSize transformOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "transformOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying a triangle geometry in a bottom-level acceleration structure"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkGeometryAABBNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBuffer aabbData",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "aabbData",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the buffer containing axis-aligned bounding box data."
        }
      },
      {
        "text": "uint32_t numAABBs",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "numAABBs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of AABBs in this geometry."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying axis-aligned bounding box geometry in a bottom-level acceleration structure"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkGeometryDataNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkGeometryTrianglesNV triangles",
        "type": "VkGeometryTrianglesNV",
        "rawType": "VkGeometryTrianglesNV",
        "name": "triangles",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkGeometryNV"
            },
            {
              "kind": "ename",
              "value": "VK_GEOMETRY_TYPE_TRIANGLES_NV"
            },
            {
              "kind": "pname",
              "value": "geometryType"
            }
          ],
          "description": " contains triangle data if {#0#}::{#2#} is {#1#}."
        }
      },
      {
        "text": "VkGeometryAABBNV aabbs",
        "type": "VkGeometryAABBNV",
        "rawType": "VkGeometryAABBNV",
        "name": "aabbs",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkGeometryNV"
            },
            {
              "kind": "ename",
              "value": "VK_GEOMETRY_TYPE_AABBS_NV"
            },
            {
              "kind": "pname",
              "value": "geometryType"
            }
          ],
          "description": " contains axis-aligned bounding box data if {#0#}::{#2#} is {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying geometry in a bottom-level acceleration structure"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkGeometryNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkGeometryTypeNV geometryType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "geometryType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkGeometryTypeNV",
        "enumRawType": "VkGeometryTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkGeometryNV"
            }
          ],
          "description": " describes which type of geometry this {#0#} refers to."
        }
      },
      {
        "text": "VkGeometryDataNV geometry",
        "type": "VkGeometryDataNV",
        "rawType": "VkGeometryDataNV",
        "name": "geometry",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkGeometryDataNV"
            }
          ],
          "description": " contains the geometry data as described in {#0#}."
        }
      },
      {
        "text": "VkGeometryFlagsNV flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkGeometryFlagBitsNV",
        "bitmaskRawType": "VkGeometryFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " has flags describing options for this geometry."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_GEOMETRY_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying a geometry in a bottom-level acceleration structure"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAccelerationStructureInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAccelerationStructureTypeNV type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAccelerationStructureTypeNV",
        "enumRawType": "VkAccelerationStructureTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkAccelerationStructureTypeNV"
            }
          ],
          "description": " is a {#0#} value specifying the type of acceleration structure that will be created."
        }
      },
      {
        "text": "VkBuildAccelerationStructureFlagsNV flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkBuildAccelerationStructureFlagBitsNV",
        "bitmaskRawType": "VkBuildAccelerationStructureFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkBuildAccelerationStructureFlagBitsNV"
            }
          ],
          "description": " is a bitmask of {#0#} specifying additional parameters of the acceleration structure."
        }
      },
      {
        "text": "uint32_t instanceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "instanceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of instances that will be in the new acceleration structure."
        }
      },
      {
        "text": "uint32_t geometryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "geometryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkGeometryNV"
            }
          ],
          "description": " {#0#} structures containing the scene data being passed into the acceleration structure."
        }
      },
      {
        "text": "const VkGeometryNV * pGeometries",
        "type": "VkGeometryNV",
        "rawType": "const VkGeometryNV *",
        "name": "pGeometries",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "geometryCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying the parameters of acceleration structure object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAccelerationStructureCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceSize compactedSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "compactedSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdWriteAccelerationStructuresPropertiesNV"
            }
          ],
          "description": " is the size from the result of {#0#} if this acceleration structure is going to be the target of a compacting copy."
        }
      },
      {
        "text": "VkAccelerationStructureInfoNV info",
        "type": "VkAccelerationStructureInfoNV",
        "rawType": "VkAccelerationStructureInfoNV",
        "name": "info",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAccelerationStructureInfoNV"
            }
          ],
          "description": " is the {#0#} structure specifying further parameters of the created acceleration structure."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying the parameters of a newly created acceleration structure object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBindAccelerationStructureMemoryInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAccelerationStructureNV accelerationStructure",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "accelerationStructure",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the acceleration structure to be attached to memory."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is a {#0#} object describing the device memory to attach."
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryRequirements"
            },
            {
              "kind": "pname",
              "value": "size"
            },
            {
              "kind": "pname",
              "value": "memory"
            },
            {
              "kind": "pname",
              "value": "memoryOffset"
            }
          ],
          "description": " is the start offset of the region of memory that is to be bound to the acceleration structure. The number of bytes returned in the {#0#}::{#1#} member in {#2#}, starting from {#3#} bytes, will be bound to the specified acceleration structure."
        }
      },
      {
        "text": "uint32_t deviceIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDeviceIndices"
            }
          ],
          "description": " is the number of elements in {#0#}."
        }
      },
      {
        "text": "const uint32_t * pDeviceIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDeviceIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "deviceIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of device indices."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying acceleration structure memory binding"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkWriteDescriptorSetAccelerationStructureNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t accelerationStructureCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "accelerationStructureCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pAccelerationStructures"
            }
          ],
          "description": " is the number of elements in {#0#}."
        }
      },
      {
        "text": "const VkAccelerationStructureNV * pAccelerationStructures",
        "type": "VkAccelerationStructureNV",
        "rawType": "const VkAccelerationStructureNV *",
        "name": "pAccelerationStructures",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "accelerationStructureCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " are the acceleration structures to update."
        }
      }
    ],
    "extends": [
      "VkWriteDescriptorSet"
    ],
    "sType": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying acceleration structure descriptor info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkAccelerationStructureMemoryRequirementsInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAccelerationStructureMemoryRequirementsTypeNV type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkAccelerationStructureMemoryRequirementsTypeNV",
        "enumRawType": "VkAccelerationStructureMemoryRequirementsTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV"
            },
            {
              "kind": "ename",
              "value": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV"
            },
            {
              "kind": "ename",
              "value": "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV"
            }
          ],
          "description": " selects the type of memory requirement being queried. {#0#} returns the memory requirements for the object itself. {#1#} returns the memory requirements for the scratch memory when doing a build. {#2#} returns the memory requirements for the scratch memory when doing an update."
        }
      },
      {
        "text": "VkAccelerationStructureNV accelerationStructure",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "accelerationStructure",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the acceleration structure to be queried for memory requirements."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Structure specifying acceleration to query for memory requirements"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceRayTracingPropertiesNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t shaderGroupHandleSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderGroupHandleSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " size in bytes of the shader header."
        }
      },
      {
        "text": "uint32_t maxRecursionDepth",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxRecursionDepth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of levels of recursion allowed in a trace command."
        }
      },
      {
        "text": "uint32_t maxShaderGroupStride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxShaderGroupStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum stride in bytes allowed between shader groups in the SBT."
        }
      },
      {
        "text": "uint32_t shaderGroupBaseAlignment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderGroupBaseAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the required alignment in bytes for the base of the SBTs."
        }
      },
      {
        "text": "uint64_t maxGeometryCount",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxGeometryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of geometries in the bottom level acceleration structure."
        }
      },
      {
        "text": "uint64_t maxInstanceCount",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxInstanceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of instances in the top level acceleration structure."
        }
      },
      {
        "text": "uint64_t maxTriangleCount",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "maxTriangleCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of triangles in all geometries in the bottom level acceleration structure."
        }
      },
      {
        "text": "uint32_t maxDescriptorSetAccelerationStructures",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDescriptorSetAccelerationStructures",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of acceleration structure descriptors that are allowed in a descriptor set."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Properties of the physical device for ray tracing"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDrmFormatModifierPropertiesListEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t drmFormatModifierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drmFormatModifierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "format"
            }
          ],
          "description": " is an inout parameter related to the number of modifiers compatible with the {#0#}, as described below."
        }
      },
      {
        "text": "VkDrmFormatModifierPropertiesEXT * pDrmFormatModifierProperties",
        "type": "VkDrmFormatModifierPropertiesEXT",
        "rawType": "VkDrmFormatModifierPropertiesEXT *",
        "name": "pDrmFormatModifierProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "drmFormatModifierCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDrmFormatModifierPropertiesEXT"
            }
          ],
          "description": " is either <i>null</i> or an array of {#0#} structures."
        }
      }
    ],
    "extends": [
      "VkFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT",
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Structure specifying the list of DRM format modifiers supported for a format"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDrmFormatModifierPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "uint64_t drmFormatModifier",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "drmFormatModifier",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a _Linux DRM format modifier_."
        }
      },
      {
        "text": "uint32_t drmFormatModifierPlaneCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drmFormatModifierPlaneCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "format"
            },
            {
              "kind": "pname",
              "value": "drmFormatModifier"
            }
          ],
          "description": " is the number of _memory planes_ in any image created with {#0#} and {#1#}. An image's _memory planecount_ is distinct from its _format planecount_, as explained below."
        }
      },
      {
        "text": "VkFormatFeatureFlags drmFormatModifierTilingFeatures",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "drmFormatModifierTilingFeatures",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkFormatFeatureFlagBits",
        "bitmaskRawType": "VkFormatFeatureFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFormatFeatureFlagBits"
            },
            {
              "kind": "pname",
              "value": "format"
            },
            {
              "kind": "pname",
              "value": "drmFormatModifier"
            }
          ],
          "description": " is a bitmask of {#0#} that are supported by any image created with {#1#} and {#2#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Structure specifying properties of a format when combined with a DRM format modifier"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceImageDrmFormatModifierInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint64_t drmFormatModifier",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "drmFormatModifier",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageDrmFormatModifierExplicitCreateInfoEXT"
            },
            {
              "kind": "slink",
              "value": "VkImageDrmFormatModifierListCreateInfoEXT"
            },
            {
              "kind": "pname",
              "value": "modifier"
            },
            {
              "kind": "pname",
              "value": "pModifiers"
            }
          ],
          "description": " is the image's _Linux DRM format modifier_, corresponding to {#0#}::{#2#} or to {#1#}::{#3#}."
        }
      },
      {
        "text": "VkSharingMode sharingMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sharingMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSharingMode",
        "enumRawType": "VkSharingMode",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies how the image will be accessed by multiple queue families."
        }
      },
      {
        "text": "uint32_t queueFamilyIndexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pQueueFamilyIndices"
            }
          ],
          "description": " is the number of entries in the {#0#} array."
        }
      },
      {
        "text": "const uint32_t * pQueueFamilyIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pQueueFamilyIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "queueFamilyIndexCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SHARING_MODE_CONCURRENT"
            },
            {
              "kind": "pname",
              "value": "sharingMode"
            }
          ],
          "description": " is a list of queue families that will access the image (ignored if {#1#} is not {#0#})."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceImageFormatInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure specifying a DRM format modifier as image creation parameter"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageDrmFormatModifierListCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t drmFormatModifierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drmFormatModifierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDrmFormatModifiers"
            }
          ],
          "description": " is the length of the {#0#} array."
        }
      },
      {
        "text": "const uint64_t * pDrmFormatModifiers",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pDrmFormatModifiers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "drmFormatModifierCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is an array of _Linux DRM format modifiers_."
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that an image must be created with a DRM format modifier from the provided list"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageDrmFormatModifierExplicitCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint64_t drmFormatModifier",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "drmFormatModifier",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the _Linux DRM format modifier_ with which the image will be created."
        }
      },
      {
        "text": "uint32_t drmFormatModifierPlaneCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drmFormatModifierPlaneCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDrmFormatModifierPropertiesEXT"
            },
            {
              "kind": "pname",
              "value": "pPlaneLayouts"
            }
          ],
          "description": " is the number of _memory planes_ in the image (as reported by {#0#}) as well as the length of the {#1#} array."
        }
      },
      {
        "text": "const VkSubresourceLayout * pPlaneLayouts",
        "type": "VkSubresourceLayout",
        "rawType": "const VkSubresourceLayout *",
        "name": "pPlaneLayouts",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "drmFormatModifierPlaneCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubresourceLayout"
            }
          ],
          "description": " is an array of {#0#} structures describing the image's _memory planes_."
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify that an image be created with the provided DRM format modifier and explicit memory layout"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageDrmFormatModifierPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint64_t drmFormatModifier",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "drmFormatModifier",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " returns the image's <<glossary-drm-format-modifier,Linux DRM format modifier>>."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Properties of an image\\"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageStencilUsageCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImageUsageFlags stencilUsage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stencilUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageUsageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} describing the intended usage of the stencil aspect of the image."
        }
      }
    ],
    "extends": [
      "VkImageCreateInfo",
      "VkPhysicalDeviceImageFormatInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Specify separate usage flags for the stencil aspect of a depth-stencil image"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkDeviceMemoryOverallocationCreateInfoAMD",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkMemoryOverallocationBehaviorAMD overallocationBehavior",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "overallocationBehavior",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkMemoryOverallocationBehaviorAMD",
        "enumRawType": "VkMemoryOverallocationBehaviorAMD",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the desired overallocation behavior."
        }
      }
    ],
    "extends": [
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD",
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Specify memory overallocation behavior for a Vulkan device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fragmentDensityMap",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentDensityMap",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkRenderPassCreateInfo"
            },
            {
              "kind": "sname",
              "value": "VkRenderPassFragmentDensityMapCreateInfoEXT"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_UNUSED"
            },
            {
              "kind": "pname",
              "value": "pNext"
            },
            {
              "kind": "pname",
              "value": "fragmentDensityMapAttachment"
            }
          ],
          "description": " specifies whether the implementation supports render passes with a fragment density map attachment. If this feature is not enabled and the {#4#} chain of {#1#} contains {#2#}, {#5#} {#0#} be {#3#}."
        }
      },
      {
        "text": "VkBool32 fragmentDensityMapDynamic",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentDensityMapDynamic",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageViewCreateInfo"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " specifies whether the implementation supports dynamic fragment density map image views. If this feature is not enabled, {#2#} {#0#} not be included in {#1#}::{#3#}."
        }
      },
      {
        "text": "VkBool32 fragmentDensityMapNonSubsampledImages",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentDensityMapNonSubsampledImages",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies whether the implementation supports regular non-subsampled image attachments with fragment density map render passes. If this feature is not enabled, render passes with a <<renderpass-fragmentdensitymapattachment,fragment density map attachment>> {#0#} only have <<resources-subsampledimages,subsampled attachments>> bound."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing fragment density map features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFragmentDensityMapPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkExtent2D minFragmentDensityTexelSize",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "minFragmentDensityTexelSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the minimum <<glossary-fragment-density-texel-size,fragment density texel size>>."
        }
      },
      {
        "text": "VkExtent2D maxFragmentDensityTexelSize",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D",
        "name": "maxFragmentDensityTexelSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkBool32 fragmentDensityInvocations",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentDensityInvocations",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing fragment density map properties that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassFragmentDensityMapCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkAttachmentReference fragmentDensityMapAttachment",
        "type": "VkAttachmentReference",
        "rawType": "VkAttachmentReference",
        "name": "fragmentDensityMapAttachment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the fragment density map to use for the render pass."
        }
      }
    ],
    "extends": [
      "VkRenderPassCreateInfo",
      "VkRenderPassCreateInfo2KHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure containing fragment density map attachment for render pass"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 scalarBlockLayout",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "scalarBlockLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates that the implementation supports the layout of resource blocks in shaders using <<interfaces-scalar-block-layout, scalar alignment>>."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure indicating support for scalar block layouts"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceProtectedCapabilitiesKHR",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 supportsProtected",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "supportsProtected",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSurfaceInfo2KHR"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR"
            },
            {
              "kind": "pname",
              "value": "surface"
            },
            {
              "kind": "pname",
              "value": "supportsProtected"
            },
            {
              "kind": "pname",
              "value": "surface"
            }
          ],
          "description": " specifies whether a protected swapchain created from {#2#}::{#5#} for a particular windowing system {#0#} be displayed on screen or not. If {#6#} is {#3#}, then creation of swapchains with the {#4#} flag set {#1#} be supported for {#7#}."
        }
      }
    ],
    "extends": [
      "VkSurfaceCapabilities2KHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure describing capability of a surface to be protected"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 uniformBufferStandardLayout",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "uniformBufferStandardLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure indicating support for std430-like packing in uniform buffers"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 depthClipEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthClipEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPipelineRasterizationStateCreateInfo"
            },
            {
              "kind": "slink",
              "value": "VkPipelineRasterizationDepthClipStateCreateInfoEXT"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "pname",
              "value": "depthClampEnable"
            }
          ],
          "description": " indicates that the implementation supports setting the depth clipping operation explicitly via the {#1#} pipeline state. Otherwise depth clipping is only enabled when {#0#}::{#3#} is set to {#2#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure indicating support for explicit enable of depth clip"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineRasterizationDepthClipStateCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT",
        "bitmaskRawType": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkBool32 depthClipEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depthClipEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " controls whether depth clipping is enabled as described in <<vertexpostproc-clipping, Primitive Clipping>>."
        }
      }
    ],
    "extends": [
      "VkPipelineRasterizationStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying depth clipping state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMemoryBudgetPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceSize heapBudget [ VK_MAX_MEMORY_HEAPS ]",
        "type": "uint64_t",
        "rawType": "VkDeviceSize [ VK_MAX_MEMORY_HEAPS ]",
        "name": "heapBudget",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      },
      {
        "text": "VkDeviceSize heapUsage [ VK_MAX_MEMORY_HEAPS ]",
        "type": "uint64_t",
        "rawType": "VkDeviceSize [ VK_MAX_MEMORY_HEAPS ]",
        "name": "heapUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isArray": true,
        "length": "16",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true
      }
    ],
    "extends": [
      "VkPhysicalDeviceMemoryProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Structure specifying physical device memory budget and usage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 memoryPriority",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryPriority",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryPriorityAllocateInfoEXT"
            }
          ],
          "description": " indicates that the implementation supports memory priorities specified at memory allocation time via {#0#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing memory priority features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkMemoryPriorityAllocateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "float priority",
        "type": "float",
        "rawType": "float",
        "name": "priority",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a floating-point value between `0` and `1`, indicating the priority of the allocation relative to other memory allocations. Larger values are higher priority. The granularity of the priorities is implementation-dependent."
        }
      }
    ],
    "extends": [
      "VkMemoryAllocateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Specify a memory allocation priority"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 bufferDeviceAddress",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferDeviceAddress",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 bufferDeviceAddressCaptureReplay",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferDeviceAddressCaptureReplay",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 bufferDeviceAddressMultiDevice",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferDeviceAddressMultiDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing buffer address features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceBufferAddressFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 bufferDeviceAddress",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferDeviceAddress",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 bufferDeviceAddressCaptureReplay",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferDeviceAddressCaptureReplay",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkBool32 bufferDeviceAddressMultiDevice",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferDeviceAddressMultiDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "alias": "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferDeviceAddressInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " specifies the buffer whose address is being queried."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Structure specifying the buffer to query an address for"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkBufferDeviceAddressCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceAddress deviceAddress",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "deviceAddress",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceAddress",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the device address requested for the buffer."
        }
      }
    ],
    "extends": [
      "VkBufferCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Request a specific address for a buffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceImageViewImageFormatInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImageViewType imageViewType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageViewType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageViewType",
        "enumRawType": "VkImageViewType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkImageViewType"
            }
          ],
          "description": " is a {#0#} value specifying the type of the image view."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceImageFormatInfo2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure for providing image view type"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFilterCubicImageViewImageFormatPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 filterCubic",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "filterCubic",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " tells if image format, image type and image view type {#0#} be used with cubic filtering. This field is set by the implementation. User-specified value is ignored."
        }
      },
      {
        "text": "VkBool32 filterCubicMinmax",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "filterCubicMinmax",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " tells if image format, image type and image view type {#0#} be used with cubic filtering and minmax filtering. This field is set by the implementation. User-specified value is ignored."
        }
      }
    ],
    "extends": [
      "VkImageFormatProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Structure for querying cubic filtering capabilities of an image view type"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceImagelessFramebufferFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 imagelessFramebuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imagelessFramebuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPassAttachmentBeginInfoKHR"
            }
          ],
          "description": " indicates that the implementation supports specifying the image view for attachments at render pass begin time via {#0#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure indicating support for imageless framebuffers"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFramebufferAttachmentsCreateInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t attachmentImageInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentImageInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of attachments being described."
        }
      },
      {
        "text": "const VkFramebufferAttachmentImageInfoKHR * pAttachmentImageInfos",
        "type": "VkFramebufferAttachmentImageInfoKHR",
        "rawType": "const VkFramebufferAttachmentImageInfoKHR *",
        "name": "pAttachmentImageInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "attachmentImageInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFramebufferAttachmentImageInfoKHR"
            }
          ],
          "description": " is an array of {#0#} instances, each of which describes a number of parameters of the corresponding attachment in a render pass instance."
        }
      }
    ],
    "extends": [
      "VkFramebufferCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying parameters of images that will be used with a framebuffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFramebufferAttachmentImageInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImageCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageCreateFlagBits",
        "bitmaskRawType": "VkImageCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "elink",
              "value": "VkImageCreateFlagBits"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " is a bitmask of {#1#}, matching the value of {#0#}::{#2#} used to create an image that will be used with this framebuffer."
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "elink",
              "value": "VkImageUsageFlagBits"
            },
            {
              "kind": "pname",
              "value": "usage"
            }
          ],
          "description": " is a bitmask of {#1#}, matching the value of {#0#}::{#2#} used to create an image used with this framebuffer."
        }
      },
      {
        "text": "uint32_t width",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "width",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the width of the image view used for rendering."
        }
      },
      {
        "text": "uint32_t height",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "height",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the height of the image view used for rendering."
        }
      },
      {
        "text": "uint32_t layerCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "layerCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t viewFormatCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewFormatCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const VkFormat * pViewFormats",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pViewFormats",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkFormat",
        "enumRawType": "const VkFormat *",
        "isArray": true,
        "length": "viewFormatCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkImageFormatListCreateInfoKHR"
            }
          ],
          "description": " is an array which lists of all formats which {#0#} be used when creating views of the image, matching the value of {#1#}::pViewFormats used to create an image used with this framebuffer."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying parameters of an image that will be used with a framebuffer"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkRenderPassAttachmentBeginInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t attachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of attachments."
        }
      },
      {
        "text": "const VkImageView * pAttachments",
        "type": "VkImageView",
        "rawType": "const VkImageView *",
        "name": "pAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "attachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkImageView"
            }
          ],
          "description": " is an array of {#0#} handles, each of which will be used as the corresponding attachment in the render pass instance."
        }
      }
    ],
    "extends": [
      "VkRenderPassBeginInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Structure specifying images to be used as framebuffer attachments"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 textureCompressionASTC_HDR",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "textureCompressionASTC_HDR",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_FORMAT_FEATURE_BLIT_SRC_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT"
            },
            {
              "kind": "pname",
              "value": "optimalTilingFeatures"
            }
          ],
          "description": " indicates whether all of the ASTC HDR compressed texture formats are supported. If this feature is enabled, then the {#1#}, {#2#} and {#3#} features {#0#} be supported in {#4#} for the following formats:+"
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing ASTC HDR features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 cooperativeMatrix",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "cooperativeMatrix",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "CooperativeMatrixNV"
            }
          ],
          "description": " indicates that the implementation supports the {#0#} SPIR-V capability."
        }
      },
      {
        "text": "VkBool32 cooperativeMatrixRobustBufferAccess",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "cooperativeMatrixRobustBufferAccess",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "OpCooperativeMatrixLoadNV"
            },
            {
              "kind": "code",
              "value": "OpCooperativeMatrixStoreNV"
            }
          ],
          "description": " indicates that the implementation supports robust buffer access for SPIR-V {#0#} and {#1#} instructions."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing cooperative matrix features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceCooperativeMatrixPropertiesNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkShaderStageFlags cooperativeMatrixSupportedStages",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "cooperativeMatrixSupportedStages",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_SHADER_STAGE_COMPUTE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUEUE_COMPUTE_BIT"
            },
            {
              "kind": "elink",
              "value": "VkShaderStageFlagBits"
            },
            {
              "kind": "pname",
              "value": "cooperativeMatrixSupportedStages"
            }
          ],
          "description": " is a bitfield of {#2#} describing the shader stages that cooperative matrix instructions are supported in. {#3#} will have the {#0#} bit set if any of the physical device's queues support {#1#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing cooperative matrix properties supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkCooperativeMatrixPropertiesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t MSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "MSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t NSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "NSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t KSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "KSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkComponentTypeNV AType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "AType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentTypeNV",
        "enumRawType": "VkComponentTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkComponentTypeNV BType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "BType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentTypeNV",
        "enumRawType": "VkComponentTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkComponentTypeNV CType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "CType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentTypeNV",
        "enumRawType": "VkComponentTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkComponentTypeNV DType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "DType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkComponentTypeNV",
        "enumRawType": "VkComponentTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkScopeNV scope",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "scope",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkScopeNV",
        "enumRawType": "VkScopeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV",
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Structure specifying cooperative matrix properties"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 ycbcrImageArrays",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "ycbcrImageArrays",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates that the implementation supports creating images with a format that requires <<formats-requiring-sampler-ycbcr-conversion, Y'C~B~C~R~ conversion>> and has multiple array layers."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing extended Y"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkImageViewHandleInfoNVX",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkImageView imageView",
        "type": "VkImageView",
        "rawType": "VkImageView",
        "name": "imageView",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the image view to query."
        }
      },
      {
        "text": "VkDescriptorType descriptorType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "descriptorType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDescriptorType",
        "enumRawType": "VkDescriptorType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of descriptor for which to query a handle."
        }
      },
      {
        "text": "VkSampler sampler",
        "type": "VkSampler",
        "rawType": "VkSampler",
        "name": "sampler",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the sampler to combine with the image view when generating the handle."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX",
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Structure specifying the image view for handle queries"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPresentFrameTokenGGP",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "GgpFrameToken frameToken",
        "type": "GgpFrameToken",
        "rawType": "GgpFrameToken",
        "name": "frameToken",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the Google Games Platform frame token."
        }
      }
    ],
    "extends": [
      "VkPresentInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP",
    "documentation": {
      "macros": [],
      "category": "VK_GGP_frame_token",
      "description": "The Google Games Platform frame token"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineCreationFeedbackEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkPipelineCreationFeedbackFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCreationFeedbackFlagBitsEXT",
        "bitmaskRawType": "VkPipelineCreationFeedbackFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineCreationFeedbackFlagBitsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} providing feedback about the creation of a pipeline or of a pipeline stage."
        }
      },
      {
        "text": "uint64_t duration",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "duration",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the duration spent creating a pipeline or pipeline stage in nanoseconds."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_pipeline_creation_feedback",
      "description": "Feedback about the creation of a pipeline or pipeline stage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineCreationFeedbackCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCreationFeedbackEXT * pPipelineCreationFeedback",
        "type": "VkPipelineCreationFeedbackEXT",
        "rawType": "VkPipelineCreationFeedbackEXT *",
        "name": "pPipelineCreationFeedback",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineCreationFeedbackEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure."
        }
      },
      {
        "text": "uint32_t pipelineStageCreationFeedbackCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pipelineStageCreationFeedbackCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pPipelineStageCreationFeedbacks"
            }
          ],
          "description": " is the number of elements in {#0#}."
        }
      },
      {
        "text": "VkPipelineCreationFeedbackEXT * pPipelineStageCreationFeedbacks",
        "type": "VkPipelineCreationFeedbackEXT",
        "rawType": "VkPipelineCreationFeedbackEXT *",
        "name": "pPipelineStageCreationFeedbacks",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pipelineStageCreationFeedbackCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineCreationFeedbackEXT"
            },
            {
              "kind": "pname",
              "value": "pipelineStageCreationFeedbackCount"
            }
          ],
          "description": " is an array of {#1#} {#0#} structures."
        }
      }
    ],
    "extends": [
      "VkGraphicsPipelineCreateInfo",
      "VkComputePipelineCreateInfo",
      "VkRayTracingPipelineCreateInfoNV"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_pipeline_creation_feedback",
      "description": "Request for feedback about the creation of a pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceFullScreenExclusiveInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkFullScreenExclusiveEXT fullScreenExclusive",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "fullScreenExclusive",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFullScreenExclusiveEXT",
        "enumRawType": "VkFullScreenExclusiveEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFullScreenExclusiveEXT"
            }
          ],
          "description": " is a {#0#} value specifying the preferred full-screen transition behavior."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceSurfaceInfo2KHR",
      "VkSwapchainCreateInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure specifying the preferred full-screen transition behavior"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceFullScreenExclusiveWin32InfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "HMONITOR hmonitor",
        "type": "HMONITOR",
        "rawType": "HMONITOR",
        "name": "hmonitor",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "HMONITOR"
            }
          ],
          "description": " is the Win32 {#0#} handle identifying the display to create the surface with."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceSurfaceInfo2KHR",
      "VkSwapchainCreateInfoKHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure specifying additional creation parameters specific to Win32 fullscreen exclusive mode"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkSurfaceCapabilitiesFullScreenExclusiveEXT",
    "needsReflection": true,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 fullScreenExclusiveSupported",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fullScreenExclusiveSupported",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkSurfaceCapabilities2KHR"
    ],
    "sType": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Structure describing full screen exclusive capabilities of a surface"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkHeadlessSurfaceCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkHeadlessSurfaceCreateFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkHeadlessSurfaceCreateFlagsEXT",
        "bitmaskRawType": "VkHeadlessSurfaceCreateFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "VK_EXT_headless_surface",
      "description": "Structure specifying parameters of a newly created headless surface object"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 coverageReductionMode",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "coverageReductionMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the implementation supports coverage reduction modes. See <<fragops-coverage-reduction, Coverage Reduction>>."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the coverage reduction mode features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineCoverageReductionStateCreateInfoNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCoverageReductionStateCreateFlagsNV flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCoverageReductionStateCreateFlagsNV",
        "bitmaskRawType": "VkPipelineCoverageReductionStateCreateFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "VkCoverageReductionModeNV coverageReductionMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "coverageReductionMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCoverageReductionModeNV",
        "enumRawType": "VkCoverageReductionModeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCoverageReductionModeNV"
            }
          ],
          "description": " is a {#0#} value controlling how the _color sample mask_ is generated from the coverage mask."
        }
      }
    ],
    "extends": [
      "VkPipelineMultisampleStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying parameters controlling coverage reduction"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkFramebufferMixedSamplesCombinationNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkCoverageReductionModeNV coverageReductionMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "coverageReductionMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCoverageReductionModeNV",
        "enumRawType": "VkCoverageReductionModeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCoverageReductionModeNV"
            }
          ],
          "description": " is a {#0#} value specifying the coverage reduction mode."
        }
      },
      {
        "text": "VkSampleCountFlagBits rasterizationSamples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "rasterizationSamples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of rasterization samples in the supported combination."
        }
      },
      {
        "text": "VkSampleCountFlags depthStencilSamples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "depthStencilSamples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of samples in the depth stencil attachment in the supported combination. A value of 0 indicates the combination does not have a depth stencil attachment."
        }
      },
      {
        "text": "VkSampleCountFlags colorSamples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "colorSamples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " specifies the number of color samples in a color attachment in the supported combination. A value of 0 indicates the combination does not have a color attachment."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV",
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Structure specifying a supported sample count combination"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderIntegerFunctions2",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderIntegerFunctions2",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ShaderIntegerFunctions2INTEL"
            }
          ],
          "description": " indicates that the implementation supports the {#0#} SPIR-V capability."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing shader integer functions that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPerformanceValueINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkPerformanceValueTypeINTEL type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPerformanceValueTypeINTEL",
        "enumRawType": "VkPerformanceValueTypeINTEL",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPerformanceValueTypeINTEL"
            }
          ],
          "description": " is a {#0#} value specifying the type of the returned data."
        }
      },
      {
        "text": "VkPerformanceValueDataINTEL data",
        "type": "VkPerformanceValueDataINTEL",
        "rawType": "VkPerformanceValueDataINTEL",
        "name": "data",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPerformanceValueDataINTEL"
            }
          ],
          "description": " is a {#0#} union specifying the value of the returned data."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Container for value and types of parameters that can be queried"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkInitializePerformanceApiInfoINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a reference for application data."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL",
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Structure specifying parameters of initialize of the device"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkQueryPoolCreateInfoINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkQueryPoolSamplingModeINTEL performanceCountersSampling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "performanceCountersSampling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkQueryPoolSamplingModeINTEL",
        "enumRawType": "VkQueryPoolSamplingModeINTEL",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " describe how performance queries should be captured."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL",
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Structure specifying parameters to create a pool of performance queries"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPerformanceMarkerInfoINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint64_t marker",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "marker",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the marker value that will be recorded into the opaque query results."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL",
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Structure specifying performance markers"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPerformanceStreamMarkerInfoINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t marker",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "marker",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the marker value that will be recorded into the reports consumed by an external application."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL",
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Structure specifying stream performance markers"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPerformanceOverrideInfoINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPerformanceOverrideTypeINTEL type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPerformanceOverrideTypeINTEL",
        "enumRawType": "VkPerformanceOverrideTypeINTEL",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPerformanceOverrideTypeINTEL"
            }
          ],
          "description": " is the particular {#0#} to set."
        }
      },
      {
        "text": "VkBool32 enable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "enable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " defines whether the override is enabled."
        }
      },
      {
        "text": "uint64_t parameter",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "parameter",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a potential required parameter for the override."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL",
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Performance override info"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPerformanceConfigurationAcquireInfoINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPerformanceConfigurationTypeINTEL type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPerformanceConfigurationTypeINTEL",
        "enumRawType": "VkPerformanceConfigurationTypeINTEL",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPerformanceConfigurationTypeINTEL"
            }
          ],
          "description": " is one of the {#0#} type of performance configuration that will be acquired."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL",
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Acquire a configuration to capture performance data"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderClockFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkBool32 shaderSubgroupClock",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSubgroupClock",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "Subgroup"
            }
          ],
          "description": " indicates whether shaders {#0#} support {#1#} scoped clock reads."
        }
      },
      {
        "text": "VkBool32 shaderDeviceClock",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDeviceClock",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "code",
              "value": "Device"
            }
          ],
          "description": " indicates whether shaders {#0#} support {#1#} scoped clock reads."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing features supported by VK_KHR_shader_clock"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 indexTypeUint8",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "indexTypeUint8",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdBindIndexBuffer"
            },
            {
              "kind": "ename",
              "value": "VK_INDEX_TYPE_UINT8_EXT"
            }
          ],
          "description": " indicates that {#1#} can be used with {#0#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing whether uint8 index type can be used"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t shaderSMCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSMCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of SMs on the device."
        }
      },
      {
        "text": "uint32_t shaderWarpsPerSM",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderWarpsPerSM",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of simultaneously executing warps on an SM."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing shader SM Builtins properties supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderSMBuiltins",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderSMBuiltins",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ShaderSMBuiltinsNV"
            }
          ],
          "description": " indicates whether the implementation supports the SPIR-V {#0#} capability."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the shader SM Builtins features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fragmentShaderSampleInterlock",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentShaderSampleInterlock",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fragmentShaderPixelInterlock",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentShaderPixelInterlock",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 fragmentShaderShadingRateInterlock",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fragmentShaderShadingRateInterlock",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing fragment shader interlock features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 pipelineExecutableInfo",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "pipelineExecutableInfo",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing whether pipeline executable properties are available"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPipeline"
            }
          ],
          "description": " is a {#0#} handle."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Structure describing a pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineExecutablePropertiesKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkShaderStageFlags stages",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stages",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkShaderStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} indicating which shader stages (if any) were principally used as inputs to compile this pipeline executable."
        }
      },
      {
        "text": "char name [ VK_MAX_DESCRIPTION_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DESCRIPTION_SIZE ]",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "char description [ VK_MAX_DESCRIPTION_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DESCRIPTION_SIZE ]",
        "name": "description",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint32_t subgroupSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subgroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the subgroup size with which this executable is dispatched."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Structure describing a pipeline executable"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineExecutableInfoKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the pipeline to query."
        }
      },
      {
        "text": "uint32_t executableIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "executableIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkGetPipelineExecutablePropertiesKHR"
            }
          ],
          "description": " is the index of the executable to query in the array of executable properties returned by {#0#}."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Structure describing a pipeline executable to query for associated statistics or internal representations"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineExecutableStatisticKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "char name [ VK_MAX_DESCRIPTION_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DESCRIPTION_SIZE ]",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "char description [ VK_MAX_DESCRIPTION_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DESCRIPTION_SIZE ]",
        "name": "description",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkPipelineExecutableStatisticFormatKHR format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineExecutableStatisticFormatKHR",
        "enumRawType": "VkPipelineExecutableStatisticFormatKHR",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineExecutableStatisticFormatKHR"
            },
            {
              "kind": "pname",
              "value": "value"
            }
          ],
          "description": " is a {#0#} value specifying the format of the data found in {#1#}."
        }
      },
      {
        "text": "VkPipelineExecutableStatisticValueKHR value",
        "type": "VkPipelineExecutableStatisticValueKHR",
        "rawType": "VkPipelineExecutableStatisticValueKHR",
        "name": "value",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " is the value of this statistic."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Structure describing a compile-time pipeline executable statistic"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineExecutableInternalRepresentationKHR",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "char name [ VK_MAX_DESCRIPTION_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DESCRIPTION_SIZE ]",
        "name": "name",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "char description [ VK_MAX_DESCRIPTION_SIZE ]",
        "type": "char",
        "rawType": "char [ VK_MAX_DESCRIPTION_SIZE ]",
        "name": "description",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "256",
        "isStaticArray": true,
        "isString": true,
        "jsType": "String",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 isText",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "isText",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "isText"
            },
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " specifies whether the returned data is text or opaque data. If {#1#} is {#0#} then the data returned in {#2#} is text and is guaranteed to be a string."
        }
      },
      {
        "text": "size_t dataSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "dataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number related to the size, in bytes, of the internal representation data, as described below."
        }
      },
      {
        "text": "void * pData",
        "type": "void",
        "rawType": "void *",
        "name": "pData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is either <i>null</i> or a reference to an block of data into which the implementation will write the textual form of the internal representation."
        }
      }
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR",
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Structure describing the textual form of a pipeline executable internal representation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 shaderDemoteToHelperInvocation",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shaderDemoteToHelperInvocation",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the shader demote to helper invocations features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 texelBufferAlignment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "texelBufferAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceLimits"
            },
            {
              "kind": "pname",
              "value": "minTexelBufferOffsetAlignment"
            }
          ],
          "description": " indicates whether the implementation uses more specific alignment requirements advertised in {#0#} rather than {#1#}::{#2#}."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the texel buffer alignment features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkDeviceSize storageTexelBufferOffsetAlignmentBytes",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "storageTexelBufferOffsetAlignmentBytes",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a byte alignment that is sufficient for a storage texel buffer of any format."
        }
      },
      {
        "text": "VkBool32 storageTexelBufferOffsetSingleTexelAlignment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "storageTexelBufferOffsetSingleTexelAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether single texel alignment is sufficient for a storage texel buffer of any format."
        }
      },
      {
        "text": "VkDeviceSize uniformTexelBufferOffsetAlignmentBytes",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "uniformTexelBufferOffsetAlignmentBytes",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a byte alignment that is sufficient for a uniform texel buffer of any format."
        }
      },
      {
        "text": "VkBool32 uniformTexelBufferOffsetSingleTexelAlignment",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "uniformTexelBufferOffsetSingleTexelAlignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether single texel alignment is sufficient for a uniform texel buffer of any format."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing the texel buffer alignment requirements supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 subgroupSizeControl",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "subgroupSizeControl",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT"
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT"
            }
          ],
          "description": " indicates whether the implementation supports controlling shader subgroup sizes via the {#1#} flag and the {#0#} structure."
        }
      },
      {
        "text": "VkBool32 computeFullSubgroups",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "computeFullSubgroups",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT"
            }
          ],
          "description": " indicates whether the implementation supports requiring full subgroups in compute shaders via the {#0#} flag."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the subgroup size control features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t minSubgroupSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "minSubgroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_QUEUE_GRAPHICS_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUEUE_COMPUTE_BIT"
            },
            {
              "kind": "pname",
              "value": "minSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "minSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "minSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "maxSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "minSubgroupSize"
            }
          ],
          "description": " is the minimum subgroup size supported by this device. {#2#} is at least one if any of the physical device's queues support {#0#} or {#1#}. {#3#} is a power-of-two. {#4#} is less than or equal to {#5#}. {#6#} is less than or equal to <<limits-subgroup-size,subgroupSize>>."
        }
      },
      {
        "text": "uint32_t maxSubgroupSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxSubgroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_QUEUE_GRAPHICS_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_QUEUE_COMPUTE_BIT"
            },
            {
              "kind": "pname",
              "value": "maxSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "maxSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "maxSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "minSubgroupSize"
            },
            {
              "kind": "pname",
              "value": "maxSubgroupSize"
            }
          ],
          "description": " is the maximum subgroup size supported by this device. {#2#} is at least one if any of the physical device's queues support {#0#} or {#1#}. {#3#} is a power-of-two. {#4#} is greater than or equal to {#5#}. {#6#} is greater than or equal to <<limits-subgroup-size,subgroupSize>>."
        }
      },
      {
        "text": "uint32_t maxComputeWorkgroupSubgroups",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxComputeWorkgroupSubgroups",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the maximum number of subgroups supported by the implementation within a workgroup."
        }
      },
      {
        "text": "VkShaderStageFlags requiredSubgroupSizeStages",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "requiredSubgroupSizeStages",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a bitfield of what shader stages support having a required subgroup size specified."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing the control subgroup size properties of an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t requiredSubgroupSize",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "requiredSubgroupSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is a number value that specifies the required subgroup size for the newly created pipeline shader stage."
        }
      }
    ],
    "extends": [
      "VkPipelineShaderStageCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Structure specifying the required subgroup size of a newly created pipeline shader stage"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceLineRasterizationFeaturesEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 rectangularLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "rectangularLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the implementation supports <<primsrast-lines,rectangular line rasterization>>."
        }
      },
      {
        "text": "VkBool32 bresenhamLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bresenhamLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the implementation supports <<primsrast-lines-bresenham,Bresenham-style line rasterization>>."
        }
      },
      {
        "text": "VkBool32 smoothLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "smoothLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates whether the implementation supports <<primsrast-lines-smooth,smooth line rasterization>>."
        }
      },
      {
        "text": "VkBool32 stippledRectangularLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stippledRectangularLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceLimits"
            },
            {
              "kind": "ename",
              "value": "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "strictLines"
            }
          ],
          "description": " indicates whether the implementation supports <<primsrast-lines-stipple,stippled line rasterization>> with {#1#} lines, or with {#2#} lines if {#0#}::{#4#} is {#3#}."
        }
      },
      {
        "text": "VkBool32 stippledBresenhamLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stippledBresenhamLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT"
            }
          ],
          "description": " indicates whether the implementation supports <<primsrast-lines-stipple,stippled line rasterization>> with {#0#} lines."
        }
      },
      {
        "text": "VkBool32 stippledSmoothLines",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stippledSmoothLines",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT"
            }
          ],
          "description": " indicates whether the implementation supports <<primsrast-lines-stipple,stippled line rasterization>> with {#0#} lines."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing the line rasterization features that can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceLineRasterizationPropertiesEXT",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "uint32_t lineSubPixelPrecisionBits",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "lineSubPixelPrecisionBits",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the number of bits of subpixel precision in framebuffer coordinates [eq]#x~f~# and [eq]#y~f~# when rasterizing <<primsrast-lines,line segments>>."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceProperties2"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT",
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Structure describing line rasterization properties supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineRasterizationLineStateCreateInfoEXT",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkLineRasterizationModeEXT lineRasterizationMode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "lineRasterizationMode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkLineRasterizationModeEXT",
        "enumRawType": "VkLineRasterizationModeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkLineRasterizationModeEXT"
            }
          ],
          "description": " is a {#0#} value selecting the style of line rasterization."
        }
      },
      {
        "text": "VkBool32 stippledLineEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stippledLineEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " enables <<primsrast-lines-stipple, stippled line rasterization>>."
        }
      },
      {
        "text": "uint32_t lineStippleFactor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "lineStippleFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the repeat factor used in stippled line rasterization."
        }
      },
      {
        "text": "uint16_t lineStipplePattern",
        "type": "uint16_t",
        "rawType": "uint16_t",
        "name": "lineStipplePattern",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the bit pattern used in stippled line rasterization."
        }
      }
    ],
    "extends": [
      "VkPipelineRasterizationStateCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT",
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Structure specifying parameters of a newly created pipeline line rasterization state"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineCompilerControlCreateInfoAMD",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is the type of this structure."
        }
      },
      {
        "text": "const void * pNext",
        "type": "void",
        "rawType": "const void *",
        "name": "pNext",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " is <i>null</i> or a reference to an extension-specific structure."
        }
      },
      {
        "text": "VkPipelineCompilerControlFlagsAMD compilerControlFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "compilerControlFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineCompilerControlFlagBitsAMD",
        "bitmaskRawType": "VkPipelineCompilerControlFlagsAMD",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineCompilerControlFlagBitsAMD"
            }
          ],
          "description": " is a bitmask of {#0#} affecting how the pipeline will be compiled."
        }
      }
    ],
    "extends": [
      "VkGraphicsPipelineCreateInfo",
      "VkComputePipelineCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD",
    "documentation": {
      "macros": [],
      "category": "VK_AMD_pipeline_compiler_control",
      "description": "Structure used to pass compilation control flags to a pipeline"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPhysicalDeviceCoherentMemoryFeaturesAMD",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkStructureType sType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkStructureType",
        "enumRawType": "VkStructureType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "void * pNext",
        "type": "void",
        "rawType": "void *",
        "name": "pNext",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "jsType": "ArrayBuffer",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 deviceCoherentMemory",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceCoherentMemory",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [],
          "description": " indicates that the implementation supports <<VkMemoryPropertyFlagBits,device coherent memory>>."
        }
      }
    ],
    "extends": [
      "VkPhysicalDeviceFeatures2",
      "VkDeviceCreateInfo"
    ],
    "sType": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD",
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Structure describing whether device coherent memory can be supported by an implementation"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkClearColorValue",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "float float32 [4]",
        "type": "float",
        "rawType": "float [4]",
        "name": "float32",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "4",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "etext",
              "value": "SINT"
            },
            {
              "kind": "etext",
              "value": "UINT"
            }
          ],
          "description": " are the color clear values when the format of the image or attachment is one of the formats in the <<formats-numericformat>> table other than signed integer ({#0#}) or unsigned integer ({#1#}). Floating point values are automatically converted to the format of the image, with the clear value being treated as linear if the image is sRGB."
        }
      },
      {
        "text": "int32_t int32 [4]",
        "type": "int32_t",
        "rawType": "int32_t [4]",
        "name": "int32",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "4",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "etext",
              "value": "SINT"
            },
            {
              "kind": "undefined",
              "value": ""
            }
          ],
          "description": " are the color clear values when the format of the image or attachment is signed integer ({#0#}). Signed integer values are converted to the format of the image by casting to the smaller type (with negative 32-bit values mapping to negative values in the smaller type). If the integer clear value is not representable in the target type (e.g. would overflow in conversion to that type), the clear value is {#1#}."
        }
      },
      {
        "text": "uint32_t uint32 [4]",
        "type": "uint32_t",
        "rawType": "uint32_t [4]",
        "name": "uint32",
        "isConstant": false,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "4",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [
            {
              "kind": "etext",
              "value": "UINT"
            }
          ],
          "description": " are the color clear values when the format of the image or attachment is unsigned integer ({#0#}). Unsigned integer values are converted to the format of the image by casting to the integer type with fewer bits."
        }
      }
    ],
    "isUnionType": true,
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Structure specifying a clear color value"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkClearValue",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "VkClearColorValue color",
        "type": "VkClearColorValue",
        "rawType": "VkClearColorValue",
        "name": "color",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " specifies the color image clear values to use when clearing a color image or attachment."
        }
      },
      {
        "text": "VkClearDepthStencilValue depthStencil",
        "type": "VkClearDepthStencilValue",
        "rawType": "VkClearDepthStencilValue",
        "name": "depthStencil",
        "isConstant": false,
        "dereferenceCount": 0,
        "isStructType": true,
        "jsType": "Object",
        "kind": "STRUCT_MEMBER",
        "needsInitializationAtInstantiation": true,
        "documentation": {
          "macros": [],
          "description": " specifies the depth and stencil clear values to use when clearing a depth/stencil image or attachment."
        }
      }
    ],
    "isUnionType": true,
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Structure specifying a clear value"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPerformanceValueDataINTEL",
    "needsReflection": false,
    "returnedonly": false,
    "children": [
      {
        "text": "uint32_t value32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "value32",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "uint64_t value64",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "value64",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "float valueFloat",
        "type": "float",
        "rawType": "float",
        "name": "valueFloat",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "VkBool32 valueBool",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "valueBool",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER"
      },
      {
        "text": "const char * valueString",
        "type": "char",
        "rawType": "const char *",
        "name": "valueString",
        "isConstant": true,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER"
      }
    ],
    "isUnionType": true,
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Values returned for the parameters"
    }
  },
  {
    "kind": "STRUCT",
    "name": "VkPipelineExecutableStatisticValueKHR",
    "needsReflection": true,
    "returnedonly": true,
    "children": [
      {
        "text": "VkBool32 b32",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "b32",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VkPipelineExecutableStatisticFormatKHR"
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR"
            }
          ],
          "description": " is the 32-bit boolean value if the {#0#} is {#1#}."
        }
      },
      {
        "text": "int64_t i64",
        "type": "int64_t",
        "rawType": "int64_t",
        "name": "i64",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VkPipelineExecutableStatisticFormatKHR"
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR"
            }
          ],
          "description": " is the signed 64-bit integer value if the {#0#} is {#1#}."
        }
      },
      {
        "text": "uint64_t u64",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "u64",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VkPipelineExecutableStatisticFormatKHR"
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR"
            }
          ],
          "description": " is the unsigned 64-bit integer value if the {#0#} is {#1#}."
        }
      },
      {
        "text": "double f64",
        "type": "double",
        "rawType": "double",
        "name": "f64",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "STRUCT_MEMBER",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VkPipelineExecutableStatisticFormatKHR"
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR"
            }
          ],
          "description": " is the 64-bit floating-point value if the {#0#} is {#1#}."
        }
      }
    ],
    "isUnionType": true,
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "A union describing a pipeline executable statistic"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkCullModeFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_CULL_MODE_NONE",
        "documentation": {
          "macros": [],
          "description": " specifies that no triangles are discarded"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_CULL_MODE_FRONT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that front-facing triangles are discarded"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_CULL_MODE_BACK_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that back-facing triangles are discarded"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x00000003",
        "name": "VK_CULL_MODE_FRONT_AND_BACK",
        "documentation": {
          "macros": [],
          "description": " specifies that all triangles are discarded."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Bitmask controlling triangle culling"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkQueueFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_QUEUE_GRAPHICS_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queues in this queue family support graphics operations."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_QUEUE_COMPUTE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queues in this queue family support compute operations."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_QUEUE_TRANSFER_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queues in this queue family support transfer operations."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_QUEUE_SPARSE_BINDING_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that queues in this queue family support sparse memory management operations (see <<sparsememory,Sparse Resources>>). If any of the sparse resource features are enabled, then at least one queue family {#0#} support this bit."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10",
        "name": "VK_QUEUE_PROTECTED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT"
            }
          ],
          "description": " is set, then the queues in this queue family support the {#1#} bit. (see <<memory-protected-memory,Protected Memory>>). If the protected memory physical device feature is supported, then at least one queue family of at least one physical device exposed by the implementation {#0#} support this bit."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40",
        "name": "VK_QUEUE_RESERVED_6_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20",
        "name": "VK_QUEUE_RESERVED_5_BIT_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Bitmask specifying capabilities of queues in a queue family"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkRenderPassCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_RENDER_PASS_CREATE_RESERVED_0_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_RENDER_PASS_RESERVED_BIT_1_QCOM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDeviceQueueCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " specifies that the device queue is a protected-capable queue. If the protected memory feature is not enabled, the {#1#} bit of {#2#} {#0#} not be set."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Bitmask specifying behavior of the queue"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkMemoryPropertyFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_MEMORY_HEAP_DEVICE_LOCAL_BIT"
            }
          ],
          "description": " bit specifies that memory allocated with this type is the most efficient for device access. This property will be set if and only if the memory type belongs to a heap with the {#0#} set."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkMapMemory"
            }
          ],
          "description": " bit specifies that memory allocated with this type {#0#} be mapped for host access using {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_MEMORY_PROPERTY_HOST_COHERENT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkFlushMappedMemoryRanges"
            },
            {
              "kind": "flink",
              "value": "vkInvalidateMappedMemoryRanges"
            }
          ],
          "description": " bit specifies that the host cache management commands {#0#} and {#1#} are not needed to flush host writes to the device or make device writes visible to the host, respectively."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_MEMORY_PROPERTY_HOST_CACHED_BIT",
        "documentation": {
          "macros": [],
          "description": " bit specifies that memory allocated with this type is cached on the host. Host memory accesses to uncached memory are slower than to cached memory, however uncached memory is always host coherent."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT"
            }
          ],
          "description": " bit specifies that the memory type only allows device access to the memory. Memory types {#1#} not have both {#2#} and {#3#} set. Additionally, the object's backing memory {#0#} be provided by the implementation lazily as specified in <<memory-device-lazy_allocation, Lazily Allocated Memory>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20",
        "name": "VK_MEMORY_PROPERTY_PROTECTED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_MEMORY_PROPERTY_PROTECTED_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_MEMORY_PROPERTY_HOST_COHERENT_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_MEMORY_PROPERTY_HOST_CACHED_BIT"
            }
          ],
          "description": " bit specifies that the memory type only allows device access to the memory, and allows protected queue operations to access the memory. Memory types {#0#} not have {#1#} set and any of {#2#} set, or {#3#} set, or {#4#} set."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40",
        "name": "VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80",
        "name": "VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Bitmask specifying properties for a memory type"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkMemoryHeapFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_MEMORY_HEAP_DEVICE_LOCAL_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that the heap corresponds to device local memory. Device local memory {#0#} have different performance characteristics than host local memory, and {#1#} support different memory property flags."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that in a logical device representing more than one physical device, there is a per-physical device instance of the heap memory. By default, an allocation from such a heap will be replicated to each physical device's instance of the heap."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Bitmask specifying attribute flags for a heap"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkAccessFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_ACCESS_INDIRECT_COMMAND_READ_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies read access to indirect command data read as part of an indirect drawing or dispatch command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_ACCESS_INDEX_READ_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdBindIndexBuffer"
            }
          ],
          "description": " specifies read access to an index buffer as part of an indexed drawing command, bound by {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdBindVertexBuffers"
            }
          ],
          "description": " specifies read access to a vertex buffer as part of a drawing command, bound by {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_ACCESS_UNIFORM_READ_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies read access to a <<descriptorsets-uniformbuffer, uniform buffer>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_ACCESS_INPUT_ATTACHMENT_READ_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies read access to an <<renderpass, input attachment>> within a render pass during fragment shading."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_ACCESS_SHADER_READ_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies read access to a <<descriptorsets-storagebuffer, storage buffer>>, <<descriptorsets-physical-storage-buffer, physical storage buffer>>,"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_ACCESS_SHADER_WRITE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_ACCESS_COLOR_ATTACHMENT_READ_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x100",
        "name": "VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x200",
        "name": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x400",
        "name": "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x800",
        "name": "VK_ACCESS_TRANSFER_READ_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1000",
        "name": "VK_ACCESS_TRANSFER_WRITE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2000",
        "name": "VK_ACCESS_HOST_READ_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4000",
        "name": "VK_ACCESS_HOST_WRITE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8000",
        "name": "VK_ACCESS_MEMORY_READ_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10000",
        "name": "VK_ACCESS_MEMORY_WRITE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40000000",
        "name": "VK_ACCESS_RESERVED_30_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "-0x80000000",
        "name": "VK_ACCESS_RESERVED_31_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10000000",
        "name": "VK_ACCESS_RESERVED_28_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20000000",
        "name": "VK_ACCESS_RESERVED_29_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000000",
        "name": "VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4000000",
        "name": "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8000000",
        "name": "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100000",
        "name": "VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20000",
        "name": "VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40000",
        "name": "VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80000",
        "name": "VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x800000",
        "name": "VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200000",
        "name": "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400000",
        "name": "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1000000",
        "name": "VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Bitmask specifying memory access types that will participate in a memory dependency"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkBufferUsageFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_BUFFER_USAGE_TRANSFER_SRC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_STAGE_TRANSFER_BIT"
            }
          ],
          "description": " specifies that the buffer {#0#} be used as the source of a _transfer command_ (see the definition of <<synchronization-pipeline-stages-transfer, {#1#}>>)."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_BUFFER_USAGE_TRANSFER_DST_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that the buffer {#0#} be used as the destination of a transfer command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkBufferView"
            },
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER"
            }
          ],
          "description": " specifies that the buffer {#0#} be used to create a {#1#} suitable for occupying a {#2#} slot of type {#3#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkBufferView"
            },
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER"
            }
          ],
          "description": " specifies that the buffer {#0#} be used to create a {#1#} suitable for occupying a {#2#} slot of type {#3#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkDescriptorBufferInfo"
            },
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC"
            }
          ],
          "description": " specifies that the buffer {#0#} be used in a {#1#} suitable for occupying a {#2#} slot either of type {#3#} or {#4#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_BUFFER_USAGE_STORAGE_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkDescriptorBufferInfo"
            },
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC"
            }
          ],
          "description": " specifies that the buffer {#0#} be used in a {#1#} suitable for occupying a {#2#} slot either of type {#3#} or {#4#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_BUFFER_USAGE_INDEX_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdBindIndexBuffer"
            },
            {
              "kind": "pname",
              "value": "buffer"
            }
          ],
          "description": " specifies that the buffer is suitable for passing as the {#1#} parameter to {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_BUFFER_USAGE_VERTEX_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdBindVertexBuffers"
            },
            {
              "kind": "pname",
              "value": "pBuffers"
            }
          ],
          "description": " specifies that the buffer is suitable for passing as an element of the {#1#} array to {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x100",
        "name": "VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdDrawIndirect"
            },
            {
              "kind": "fname",
              "value": "vkCmdDrawIndexedIndirect"
            },
            {
              "kind": "fname",
              "value": "vkCmdDrawMeshTasksIndirectNV"
            },
            {
              "kind": "fname",
              "value": "vkCmdDrawMeshTasksIndirectCountNV"
            },
            {
              "kind": "pname",
              "value": "buffer"
            }
          ],
          "description": " specifies that the buffer is suitable for passing as the {#4#} parameter to {#0#}, {#1#}, {#2#}, {#3#},"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8000",
        "name": "VK_BUFFER_USAGE_RESERVED_15_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10000",
        "name": "VK_BUFFER_USAGE_RESERVED_16_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000",
        "name": "VK_BUFFER_USAGE_RESERVED_13_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4000",
        "name": "VK_BUFFER_USAGE_RESERVED_14_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x800",
        "name": "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1000",
        "name": "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200",
        "name": "VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400",
        "name": "VK_BUFFER_USAGE_RAY_TRACING_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20000",
        "name": "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bitmask specifying allowed usage of a buffer"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkBufferCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_BUFFER_CREATE_SPARSE_BINDING_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the buffer will be backed using sparse memory binding."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_BUFFER_CREATE_SPARSE_BINDING_BIT"
            }
          ],
          "description": " specifies that the buffer {#0#} be partially backed using sparse memory binding. Buffers created with this flag {#1#} also be created with the {#2#} flag."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_BUFFER_CREATE_SPARSE_ALIASED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_BUFFER_CREATE_SPARSE_BINDING_BIT"
            }
          ],
          "description": " specifies that the buffer will be backed using sparse memory binding with memory ranges that might also simultaneously be backing another buffer (or another portion of the same buffer). Buffers created with this flag {#0#} also be created with the {#1#} flag."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8",
        "name": "VK_BUFFER_CREATE_PROTECTED_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the buffer is a protected buffer."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10",
        "name": "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bitmask specifying additional parameters of a buffer"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkShaderStageFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SHADER_STAGE_VERTEX_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the vertex stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the tessellation control stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the tessellation evaluation stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_SHADER_STAGE_GEOMETRY_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the geometry stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_SHADER_STAGE_FRAGMENT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the fragment stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_SHADER_STAGE_COMPUTE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the compute stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x0000001F",
        "name": "VK_SHADER_STAGE_ALL_GRAPHICS"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x7FFFFFFF",
        "name": "VK_SHADER_STAGE_ALL"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100",
        "name": "VK_SHADER_STAGE_RAYGEN_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200",
        "name": "VK_SHADER_STAGE_ANY_HIT_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400",
        "name": "VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x800",
        "name": "VK_SHADER_STAGE_MISS_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1000",
        "name": "VK_SHADER_STAGE_INTERSECTION_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000",
        "name": "VK_SHADER_STAGE_CALLABLE_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40",
        "name": "VK_SHADER_STAGE_TASK_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " specifies the task stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80",
        "name": "VK_SHADER_STAGE_MESH_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " specifies the mesh stage."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Bitmask specifying a pipeline stage"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkImageUsageFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_IMAGE_USAGE_TRANSFER_SRC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that the image {#0#} be used as the source of a transfer command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_IMAGE_USAGE_TRANSFER_DST_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that the image {#0#} be used as the destination of a transfer command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_IMAGE_USAGE_SAMPLED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageView"
            },
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"
            }
          ],
          "description": " specifies that the image {#0#} be used to create a {#1#} suitable for occupying a {#2#} slot either of type {#3#} or {#4#}, and be sampled by a shader."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_IMAGE_USAGE_STORAGE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageView"
            },
            {
              "kind": "sname",
              "value": "VkDescriptorSet"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE"
            }
          ],
          "description": " specifies that the image {#0#} be used to create a {#1#} suitable for occupying a {#2#} slot of type {#3#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageView"
            },
            {
              "kind": "sname",
              "value": "VkFramebuffer"
            }
          ],
          "description": " specifies that the image {#0#} be used to create a {#1#} suitable for use as a color or resolve attachment in a {#2#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageView"
            }
          ],
          "description": " specifies that the image {#0#} be used to create a {#1#} suitable for use as a depth/stencil or depth/stencil resolve"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000",
        "name": "VK_IMAGE_USAGE_RESERVED_13_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4000",
        "name": "VK_IMAGE_USAGE_RESERVED_14_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8000",
        "name": "VK_IMAGE_USAGE_RESERVED_15_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400",
        "name": "VK_IMAGE_USAGE_RESERVED_10_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x800",
        "name": "VK_IMAGE_USAGE_RESERVED_11_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1000",
        "name": "VK_IMAGE_USAGE_RESERVED_12_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100",
        "name": "VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200",
        "name": "VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bitmask specifying intended usage of an image"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkImageCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_IMAGE_CREATE_SPARSE_BINDING_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the image will be backed using sparse memory binding."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_CREATE_SPARSE_BINDING_BIT"
            }
          ],
          "description": " specifies that the image {#0#} be partially backed using sparse memory binding. Images created with this flag {#1#} also be created with the {#2#} flag."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_IMAGE_CREATE_SPARSE_ALIASED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_CREATE_SPARSE_BINDING_BIT"
            }
          ],
          "description": " specifies that the image will be backed using sparse memory binding with memory ranges that might also simultaneously be backing another image (or another portion of the same image). Images created with this flag {#0#} also be created with the {#1#} flag"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "sname",
              "value": "VkImageView"
            },
            {
              "kind": "sname",
              "value": "VkImageView"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT"
            }
          ],
          "description": " specifies that the image {#0#} be used to create a {#1#} with a different format from the image. For <<formats-requiring-sampler-ycbcr-conversion,multi-planar>> formats, {#3#} specifies that a {#2#} can be created of a _plane_ of the image."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400",
        "name": "VK_IMAGE_CREATE_ALIAS_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40",
        "name": "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20",
        "name": "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80",
        "name": "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100",
        "name": "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x800",
        "name": "VK_IMAGE_CREATE_PROTECTED_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200",
        "name": "VK_IMAGE_CREATE_DISJOINT_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000",
        "name": "VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1000",
        "name": "VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4000",
        "name": "VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bitmask specifying additional parameters of an image"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkImageViewCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkCmdBeginRenderPass"
            }
          ],
          "description": " prohibits the implementation from accessing the fragment density map by the host during {#0#} as the contents are expected to change after recording"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bitmask specifying additional parameters of an image view"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSamplerCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " specifies that the sampler will read from an image created with {#1#} containing {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that the implementation {#0#} use approximations when reconstructing a full color value for texture access from a subsampled image."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Bitmask specifying additional parameters of sampler"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkPipelineCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that the created pipeline will not be optimized. Using this flag {#0#} reduce the time taken to create the pipeline."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateGraphicsPipelines"
            },
            {
              "kind": "flink",
              "value": "vkCreateComputePipelines"
            }
          ],
          "description": " specifies that the pipeline to be created is allowed to be the parent of a pipeline that will be created in a subsequent call to {#0#} or {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_PIPELINE_CREATE_DERIVATIVE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the pipeline to be created will be a child of a previously created parent pipeline.ifdef::VK_VERSION_1_1,VK_KHR_multiview[]"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8",
        "name": "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ViewIndex"
            },
            {
              "kind": "code",
              "value": "DeviceIndex"
            }
          ],
          "description": " specifies that any shader input variables decorated as {#0#} will be assigned values as if they were decorated as {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10",
        "name": "VK_PIPELINE_CREATE_DISPATCH_BASE"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20",
        "name": "VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40",
        "name": "VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80",
        "name": "VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Bitmask controlling how a pipeline is created"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkPipelineShaderStageCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4",
        "name": "VK_PIPELINE_SHADER_STAGE_CREATE_RESERVED_2_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "code",
              "value": "SubgroupSize"
            }
          ],
          "description": " specifies that the <<interfaces-builtin-variables-sgs,{#1#}>> {#0#} vary in the shader stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that the subgroup sizes {#0#} be launched with all invocations active in the compute stage."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Bitmask controlling how a pipeline shader stage is created"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkColorComponentFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_COLOR_COMPONENT_R_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the [eq]#R# value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_COLOR_COMPONENT_G_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the [eq]#G# value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_COLOR_COMPONENT_B_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the [eq]#B# value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_COLOR_COMPONENT_A_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the [eq]#A# value is written to the color attachment for the appropriate sample. Otherwise, the value in memory is unmodified."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "The Framebuffer",
      "description": "Bitmask controlling which components are written to the framebuffer"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkFenceCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_FENCE_CREATE_SIGNALED_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the fence object is created in the signaled state. Otherwise, it is created in the unsignaled state."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Bitmask specifying initial state and behavior of a fence"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSemaphoreCreateFlagBits",
    "children": [],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkFormatFeatureFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that an image view {#0#} be <<descriptorsets-sampledimage, sampled from>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that an image view {#0#} be used as a <<descriptorsets-storageimage, storage images>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that an image view {#0#} be used as storage image that supports atomic operations."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that an image view {#0#} be used as a framebuffer color attachment and as an input attachment."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x100",
        "name": "VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that an image view {#0#} be used as a framebuffer color attachment that supports blending and as an input attachment."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x200",
        "name": "VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that an image view {#0#} be used as a framebuffer depth/stencil attachment and as an input attachment."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x400",
        "name": "VK_FORMAT_FEATURE_BLIT_SRC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "vkCmdBlitImage"
            },
            {
              "kind": "pname",
              "value": "srcImage"
            }
          ],
          "description": " specifies that an image {#0#} be used as {#2#} for the {#1#} command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x800",
        "name": "VK_FORMAT_FEATURE_BLIT_DST_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "vkCmdBlitImage"
            },
            {
              "kind": "pname",
              "value": "dstImage"
            }
          ],
          "description": " specifies that an image {#0#} be used as {#2#} for the {#1#} command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1000",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdBlitImage"
            },
            {
              "kind": "ename",
              "value": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_FILTER_LINEAR"
            },
            {
              "kind": "ename",
              "value": "VK_SAMPLER_MIPMAP_MODE_LINEAR"
            },
            {
              "kind": "ename",
              "value": "VK_FORMAT_FEATURE_BLIT_SRC_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_FILTER_LINEAR"
            },
            {
              "kind": "ename",
              "value": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_FORMAT_FEATURE_BLIT_SRC_BIT"
            },
            {
              "kind": "pname",
              "value": "magFilter"
            },
            {
              "kind": "pname",
              "value": "minFilter"
            },
            {
              "kind": "pname",
              "value": "mipmapMode"
            },
            {
              "kind": "pname",
              "value": "srcImage"
            },
            {
              "kind": "pname",
              "value": "filter"
            }
          ],
          "description": " specifies that if {#6#} is also set, an image view {#0#} be used with a sampler that has either of {#13#} or {#14#} set to {#7#}, or {#15#} set to {#8#}. If {#9#} is also set, an image can be used as the {#16#} to {#5#} with a {#17#} of {#10#}. This bit {#2#} only be exposed for formats that also support the {#11#} or {#12#}.+If the format being queried is a depth/stencil format, this bit onlyspecifies that the depth aspect (not the stencil aspect) of an image of thisformat supports linear filtering, and that linear filtering of the depthaspect is supported whether depth compare is enabled in the sampler or not.If this bit is not present, linear filtering with depth compare disabled isunsupported and linear filtering with depth compare enabled is supported,but {#1#} compute the filtered value in an implementation-dependent mannerwhich differs from the normal rules of linear filtering.The resulting value {#3#} be in the range [eq]#[0,1]# and {#4#} beproportional to, or a weighted average of, the number of comparison passesor failures."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4000",
        "name": "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8000",
        "name": "VK_FORMAT_FEATURE_TRANSFER_DST_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20000",
        "name": "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40000",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80000",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100000",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200000",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400000",
        "name": "VK_FORMAT_FEATURE_DISJOINT_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x800000",
        "name": "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8000000",
        "name": "VK_FORMAT_FEATURE_RESERVED_27_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10000000",
        "name": "VK_FORMAT_FEATURE_RESERVED_28_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000000",
        "name": "VK_FORMAT_FEATURE_RESERVED_25_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4000000",
        "name": "VK_FORMAT_FEATURE_RESERVED_26_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10000",
        "name": "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1000000",
        "name": "VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Bitmask specifying features supported by a buffer"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkQueryControlFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_QUERY_CONTROL_PRECISE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the precision of <<queries-occlusion, occlusion queries>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Bitmask specifying constraints on a query"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkQueryResultFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_QUERY_RESULT_64_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the results will be written as an array of 64-bit unsigned integer values. If this bit is not set, the results will be written as an array of 32-bit unsigned integer values."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_QUERY_RESULT_WAIT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that Vulkan will wait for each query's status to become available before retrieving its results."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_QUERY_RESULT_WITH_AVAILABILITY_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the availability status accompanies the results."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_QUERY_RESULT_PARTIAL_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that returning partial results is acceptable."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Bitmask specifying how and when query results are returned"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkCommandBufferUsageFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that each recording of the command buffer will only be submitted once, and the command buffer will be reset and recorded again between each submission."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that a secondary command buffer is considered to be entirely inside a render pass. If this is a primary command buffer, then this bit is ignored."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that a command buffer {#0#} be resubmitted to a queue while it is in the _pending state_, and recorded into multiple primary command buffers."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Bitmask specifying usage behavior for command buffer"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkQueryPipelineStatisticFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that queries managed by the pool will count the number of vertices processed by the <<drawing,input assembly>> stage. Vertices corresponding to incomplete primitives {#0#} contribute to the count."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that queries managed by the pool will count the number of primitives processed by the <<drawing,input assembly>> stage. If primitive restart is enabled, restarting the primitive topology has no effect on the count. Incomplete primitives {#0#} be counted."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queries managed by the pool will count the number of vertex shader invocations. This counter's value is incremented each time a vertex shader is <<shaders-vertex-execution,invoked>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queries managed by the pool will count the number of geometry shader invocations. This counter's value is incremented each time a geometry shader is <<shaders-geometry-execution,invoked>>. In the case of <<geometry-invocations,instanced geometry shaders>>, the geometry shader invocations count is incremented for each separate instanced invocation."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "OpEndPrimitive"
            },
            {
              "kind": "code",
              "value": "OpEndStreamPrimitive"
            }
          ],
          "description": " specifies that queries managed by the pool will count the number of primitives generated by geometry shader invocations. The counter's value is incremented each time the geometry shader emits a primitive. Restarting primitive topology using the SPIR-V instructions {#0#} or {#1#} has no effect on the geometry shader output primitives count."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queries managed by the pool will count the number of primitives processed by the <<vertexpostproc-clipping,Primitive Clipping>> stage of the pipeline. The counter's value is incremented each time a primitive reaches the primitive clipping stage."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that queries managed by the pool will count the number of primitives output by the <<vertexpostproc-clipping,Primitive Clipping>> stage of the pipeline. The counter's value is incremented each time a primitive passes the primitive clipping stage. The actual number of primitives output by the primitive clipping stage for a particular input primitive is implementation-dependent but {#0#} satisfy the following conditions:"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queries managed by the pool will count the number of fragment shader invocations. The counter's value is incremented each time the fragment shader is <<shaders-fragment-execution,invoked>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x100",
        "name": "VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queries managed by the pool will count the number of patches processed by the tessellation control shader. The counter's value is incremented once for each patch for which a tessellation control shader is <<shaders-tessellation-control-execution,invoked>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x200",
        "name": "VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that queries managed by the pool will count the number of invocations of the tessellation evaluation shader. The counter's value is incremented each time the tessellation evaluation shader is <<shaders-tessellation-evaluation-execution,invoked>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x400",
        "name": "VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that queries managed by the pool will count the number of compute shader invocations. The counter's value is incremented every time the compute shader is invoked. Implementations {#0#} skip the execution of certain compute shader invocations or execute additional compute shader invocations for implementation-dependent reasons as long as the results of rendering otherwise remain unchanged."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Bitmask specifying queried pipeline statistics"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkImageAspectFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_IMAGE_ASPECT_COLOR_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the color aspect."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_IMAGE_ASPECT_DEPTH_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the depth aspect."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_IMAGE_ASPECT_STENCIL_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the stencil aspect."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_IMAGE_ASPECT_METADATA_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the metadata aspect, used for sparse <<sparsememory, sparse resource>> operations."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x10",
        "name": "VK_IMAGE_ASPECT_PLANE_0_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies plane 0 of a _multi-planar_ image format."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20",
        "name": "VK_IMAGE_ASPECT_PLANE_1_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies plane 1 of a _multi-planar_ image format."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40",
        "name": "VK_IMAGE_ASPECT_PLANE_2_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies plane 2 of a _multi-planar_ image format."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400",
        "name": "VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bitmask specifying which aspects of an image are included in a view"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSparseImageFormatFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the image uses a single mip tail region for all array layers."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the first mip level whose dimensions are not integer multiples of the corresponding dimensions of the sparse image block begins the mip tail region."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "imageGranularity"
            }
          ],
          "description": " specifies that the image uses non-standard sparse image block dimensions, and the {#0#} values do not match the standard sparse image block dimensions for the given format."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Bitmask specifying additional information about a sparse image resource"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSparseMemoryBindFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SPARSE_MEMORY_BIND_METADATA_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the memory being bound is only for the metadata aspect."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Bitmask specifying usage of a sparse memory binding operation"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkPipelineStageFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies the stage of the pipeline where any commands are initially received by the queue."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdProcessCommandsNVX"
            }
          ],
          "description": " specifies the stage of the pipeline where Draw/DispatchIndirect data structures are consumed. This stage also includes reading commands written by {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_PIPELINE_STAGE_VERTEX_INPUT_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_PIPELINE_STAGE_VERTEX_SHADER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x100",
        "name": "VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x200",
        "name": "VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x400",
        "name": "VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x800",
        "name": "VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1000",
        "name": "VK_PIPELINE_STAGE_TRANSFER_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2000",
        "name": "VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4000",
        "name": "VK_PIPELINE_STAGE_HOST_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8000",
        "name": "VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10000",
        "name": "VK_PIPELINE_STAGE_ALL_COMMANDS_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8000000",
        "name": "VK_PIPELINE_STAGE_RESERVED_27_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4000000",
        "name": "VK_PIPELINE_STAGE_RESERVED_26_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1000000",
        "name": "VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x40000",
        "name": "VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x20000",
        "name": "VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400000",
        "name": "VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200000",
        "name": "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2000000",
        "name": "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80000",
        "name": "VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100000",
        "name": "VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x800000",
        "name": "VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Bitmask specifying pipeline stages"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkCommandPoolCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_COMMAND_POOL_CREATE_TRANSIENT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies that command buffers allocated from the pool will be short-lived, meaning that they will be reset or freed in a relatively short timeframe. This flag {#0#} be used by the implementation to control memory allocation behavior within the pool."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkResetCommandBuffer"
            },
            {
              "kind": "flink",
              "value": "vkBeginCommandBuffer"
            },
            {
              "kind": "fname",
              "value": "vkResetCommandBuffer"
            }
          ],
          "description": " allows any command buffer allocated from a pool to be individually reset to the <<commandbuffers-lifecycle, initial state>>; either by calling {#1#}, or via the implicit reset when calling {#2#}. If this flag is not set on a pool, then {#3#} {#0#} not be called for any command buffer allocated from that pool."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4",
        "name": "VK_COMMAND_POOL_CREATE_PROTECTED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_COMMAND_POOL_CREATE_PROTECTED_BIT"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " specifies that command buffers allocated from the pool are protected command buffers. If the protected memory feature is not enabled, the {#1#} bit of {#2#} {#0#} not be set."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Bitmask specifying usage behavior for a command pool"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkCommandPoolResetFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that resetting a command pool recycles all of the resources from the command pool back to the system."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Bitmask controlling behavior of a command pool reset"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkCommandBufferResetFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "commandBuffer"
            }
          ],
          "description": " specifies that most or all memory resources currently owned by the command buffer {#1#} be returned to the parent command pool. If this flag is not set, then the command buffer {#0#} hold onto memory resources and reuse them when recording commands. {#2#} is moved to the <<commandbuffers-lifecycle, initial state>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Bitmask controlling behavior of a command buffer reset"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSampleCountFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SAMPLE_COUNT_1_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_SAMPLE_COUNT_2_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_SAMPLE_COUNT_4_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_SAMPLE_COUNT_8_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_SAMPLE_COUNT_16_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_SAMPLE_COUNT_32_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_SAMPLE_COUNT_64_BIT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Bitmask specifying sample counts supported for an image used for storage operations"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkAttachmentDescriptionFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that the attachment aliases the same device memory as other attachments."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Bitmask specifying additional properties of an attachment"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkStencilFaceFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_STENCIL_FACE_FRONT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that only the front set of stencil state is updated."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_STENCIL_FACE_BACK_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that only the back set of stencil state is updated."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x00000003",
        "name": "VK_STENCIL_FACE_FRONT_AND_BACK",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_STENCIL_FACE_FRONT_BIT"
            },
            {
              "kind": "ename",
              "value": "VK_STENCIL_FACE_BACK_BIT"
            }
          ],
          "description": " is the combination of {#0#} and {#1#}, and specifies that both sets of stencil state are updated."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "ALIAS",
        "value": "(int32_t)VK_STENCIL_FACE_FRONT_AND_BACK",
        "name": "VK_STENCIL_FRONT_AND_BACK"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Bitmask specifying sets of stencil state for which to update the compare mask"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDescriptorPoolCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkAllocateDescriptorSets"
            },
            {
              "kind": "flink",
              "value": "vkFreeDescriptorSets"
            },
            {
              "kind": "flink",
              "value": "vkResetDescriptorPool"
            },
            {
              "kind": "flink",
              "value": "vkAllocateDescriptorSets"
            },
            {
              "kind": "flink",
              "value": "vkResetDescriptorPool"
            }
          ],
          "description": " specifies that descriptor sets {#0#} return their individual allocations to the pool, i.e. all of {#2#}, {#3#}, and {#4#} are allowed. Otherwise, descriptor sets allocated from the pool {#1#} not be individually freed back to the pool, i.e. only {#5#} and {#6#} are allowed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT"
            },
            {
              "kind": "ename",
              "value": "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT"
            }
          ],
          "description": " specifies that descriptor sets allocated from this pool {#0#} include bindings with the {#1#} bit set. It is valid to allocate descriptor sets that have bindings that do not set the {#2#} bit from a pool that has {#3#} set."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Bitmask specifying certain supported operations on a descriptor pool"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDependencyFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DEPENDENCY_BY_REGION_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that dependencies will be <<synchronization-framebuffer-regions, framebuffer-local>>."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4",
        "name": "VK_DEPENDENCY_DEVICE_GROUP_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_DEPENDENCY_VIEW_LOCAL_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies that a <<synchronization-pipeline-barriers-subpass-self-dependencies, subpass has more than one view>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Bitmask specifying how execution and memory dependencies are formed"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSemaphoreWaitFlagBitsKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SEMAPHORE_WAIT_ANY_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSemaphoreWaitInfoKHR"
            },
            {
              "kind": "sname",
              "value": "VkSemaphoreWaitInfoKHR"
            },
            {
              "kind": "sname",
              "value": "VkSemaphoreWaitInfoKHR"
            },
            {
              "kind": "sname",
              "value": "VkSemaphoreWaitInfoKHR"
            },
            {
              "kind": "ename",
              "value": "VK_SEMAPHORE_WAIT_ANY_BIT_KHR"
            },
            {
              "kind": "pname",
              "value": "pSemaphores"
            },
            {
              "kind": "pname",
              "value": "pValues"
            },
            {
              "kind": "pname",
              "value": "pSemaphores"
            },
            {
              "kind": "pname",
              "value": "pValues"
            }
          ],
          "description": " specifies that the semaphore wait condition is that at least one of the semaphores in {#0#}::{#5#} has reached the value specified by the corresponding element of {#1#}::{#6#}. If {#4#} is not set, the semaphore wait condition is that all of the semaphores in {#2#}::{#7#} have reached the value specified by the corresponding element of {#3#}::{#8#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Bitmask specifying additional parameters of a semaphore wait operation"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDisplayPlaneAlphaFlagBitsKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that the source image will be treated as opaque."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that a global alpha value {#0#} be specified that will be applied to all pixels in the source image."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that the alpha value will be determined by the alpha channel of the source image's pixels. If the source format contains no alpha values, no blending will be applied. The source alpha values are not premultiplied into the source image's other color channels."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR"
            }
          ],
          "description": " is equivalent to {#0#}, except the source alpha values are assumed to be premultiplied into the source image's other color channels."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Alpha blending type"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkCompositeAlphaFlagBitsKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "alpha compositing modes supported on a device"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSurfaceTransformFlagBitsKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is presented without being transformed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is rotated 90 degrees clockwise."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is rotated 180 degrees clockwise."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is rotated 270 degrees clockwise."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is mirrored horizontally."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is mirrored horizontally, then rotated 90 degrees clockwise."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is mirrored horizontally, then rotated 180 degrees clockwise."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that image content is mirrored horizontally, then rotated 270 degrees clockwise."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x100",
        "name": "VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR",
        "documentation": {
          "macros": [],
          "description": " specifies that the presentation transform is not specified, and is instead determined by platform-specific considerations and mechanisms outside Vulkan."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "presentation transforms supported on a device"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSwapchainImageUsageFlagBitsANDROID",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SWAPCHAIN_IMAGE_USAGE_SHARED_BIT_ANDROID",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDebugReportFlagBitsEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DEBUG_REPORT_INFORMATION_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies an informational message such as resource details that may be handy when debugging an application."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_DEBUG_REPORT_WARNING_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies use of Vulkan that {#0#} expose an app bug. Such cases may not be immediately harmful, such as a fragment shader outputting to a location with no attachment. Other cases {#1#} point to behavior that is almost certainly bad when unintended such as using an image whose memory has not been filled. In general if you see a warning but you know that the behavior is intended/desired, then simply ignore the warning."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdClearColorImage"
            },
            {
              "kind": "slink",
              "value": "VkAttachmentDescription"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_LOAD_OP_CLEAR"
            },
            {
              "kind": "pname",
              "value": "loadOp"
            }
          ],
          "description": " specifies a potentially non-optimal use of Vulkan, e.g. using {#0#} when setting {#1#}::{#3#} to {#2#} would have worked."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_DEBUG_REPORT_ERROR_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that the application has violated a valid usage condition of the specification."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_DEBUG_REPORT_DEBUG_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies diagnostic information from the implementation and layers."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_report",
      "description": "Bitmask specifying events which cause a debug report callback"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalMemoryHandleTypeFlagBitsNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkGetMemoryWin32HandleNV"
            }
          ],
          "description": " specifies a handle to memory returned by {#0#}, or one duplicated from such a handle using `DuplicateHandle()`."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkGetMemoryWin32HandleNV"
            }
          ],
          "description": " specifies a handle to memory returned by {#0#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " specifies a valid NT handle to memory returned by `IDXGIResource1::CreateSharedHandle`, or a handle duplicated from such a handle using `DuplicateHandle()`."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " specifies a handle to memory returned by `IDXGIResource::GetSharedHandle()`."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory_win32",
      "description": "Bitmask specifying external memory handle types"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalMemoryFeatureFlagBitsNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that external memory of the specified type {#0#} be created as a dedicated allocation when used in the manner specified."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " specifies that the implementation supports exporting handles of the specified type."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " specifies that the implementation supports importing handles of the specified type."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory_capabilities",
      "description": "Bitmask specifying external memory features"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSubgroupFeatureFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SUBGROUP_FEATURE_BASIC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniform"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_SUBGROUP_FEATURE_VOTE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformVote"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_SUBGROUP_FEATURE_ARITHMETIC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformArithmetic"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_SUBGROUP_FEATURE_BALLOT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformBallot"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_SUBGROUP_FEATURE_SHUFFLE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformShuffle"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformShuffleRelative"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_SUBGROUP_FEATURE_CLUSTERED_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformClustered"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x80",
        "name": "VK_SUBGROUP_FEATURE_QUAD_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformQuad"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100",
        "name": "VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "GroupNonUniformPartitionedNV"
            }
          ],
          "description": " specifies the device will accept SPIR-V shader modules containing the {#0#} capability."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Enum describing what subgroup operations are supported"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkIndirectCommandsLayoutUsageFlagBitsNVX",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that the processing of sequences {#0#} happen at an implementation-dependent order, which is not guaranteed to be coherent across multiple invocations."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX",
        "documentation": {
          "macros": [],
          "description": " specifies that there is likely a high difference between allocated number of sequences and actually used."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX",
        "documentation": {
          "macros": [],
          "description": " specifies that there are likely many draw or dispatch calls that are zero-sized (zero grid dimension, no primitives to render)."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkBuffer"
            }
          ],
          "description": " specifies that the input data for the sequences is not implicitly indexed from 0..sequencesUsed but a user provided {#0#} encoding the index is provided."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Bitmask specifying allowed usage of an indirect commands layout"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkObjectEntryUsageFlagBitsNVX",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_PIPELINE_BIND_POINT_GRAPHICS"
            }
          ],
          "description": " specifies that the resource is bound to {#0#}"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_PIPELINE_BIND_POINT_COMPUTE"
            }
          ],
          "description": " specifies that the resource is bound to {#0#}"
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Bitmask specifying allowed usage of an object entry"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDescriptorSetLayoutCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdPushDescriptorSetKHR"
            }
          ],
          "description": " specifies that descriptor sets {#0#} not be allocated using this layout, and descriptors are instead pushed by {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Bitmask specifying descriptor set layout properties"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalMemoryHandleTypeFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "dup"
            },
            {
              "kind": "code",
              "value": "dup2"
            },
            {
              "kind": "code",
              "value": "close"
            },
            {
              "kind": "code",
              "value": "dup3"
            },
            {
              "kind": "code",
              "value": "SCM_RIGHTS"
            }
          ],
          "description": " specifies a POSIX file descriptor handle that has only limited valid usage outside of Vulkan and other compatible APIs. It {#0#} be compatible with the POSIX system calls {#2#}, {#3#}, {#4#}, and the non-standard system call {#5#}. Additionally, it {#1#} be transportable over a socket using an {#6#} control message. It owns a reference to the underlying memory resource represented by its Vulkan memory object."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DuplicateHandle"
            },
            {
              "kind": "code",
              "value": "CloseHandle"
            },
            {
              "kind": "code",
              "value": "CompareObjectHandles"
            },
            {
              "kind": "code",
              "value": "GetHandleInformation"
            },
            {
              "kind": "code",
              "value": "SetHandleInformation"
            }
          ],
          "description": " specifies an NT handle that has only limited valid usage outside of Vulkan and other compatible APIs. It {#0#} be compatible with the functions {#1#}, {#2#}, {#3#}, {#4#}, and {#5#}. It owns a reference to the underlying memory resource represented by its Vulkan memory object."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies a global share handle that has only limited valid usage outside of Vulkan and other compatible APIs. It is not compatible with any native APIs. It does not own a reference to the underlying memory resource represented its Vulkan memory object, and will therefore become invalid when all Vulkan memory objects associated with it are destroyed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "IDXGIResource1"
            },
            {
              "kind": "code",
              "value": "CreateSharedHandle"
            }
          ],
          "description": " specifies an NT handle returned by {#0#}::{#1#} referring to a Direct3D 10 or 11 texture resource. It owns a reference to the memory used by the Direct3D resource."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "IDXGIResource"
            },
            {
              "kind": "code",
              "value": "GetSharedHandle"
            }
          ],
          "description": " specifies a global share handle returned by {#0#}::{#1#} referring to a Direct3D 10 or 11 texture resource. It does not own a reference to the underlying Direct3D resource, and will therefore become invalid when all Vulkan memory objects and Direct3D resources associated with it are destroyed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x20",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ID3D12Device"
            },
            {
              "kind": "code",
              "value": "CreateSharedHandle"
            }
          ],
          "description": " specifies an NT handle returned by {#0#}::{#1#} referring to a Direct3D 12 heap resource. It owns a reference to the resources used by the Direct3D heap."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x40",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ID3D12Device"
            },
            {
              "kind": "code",
              "value": "CreateSharedHandle"
            }
          ],
          "description": " specifies an NT handle returned by {#0#}::{#1#} referring to a Direct3D 12 committed resource. It owns a reference to the memory used by the Direct3D resource."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x200",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x400",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x80",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies a host reference returned by a host memory allocation command. It does not own a reference to the underlying memory resource, and will therefore become invalid if the host memory is freed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x100",
        "name": "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies a host reference to _host mapped foreign memory_. It does not own a reference to the underlying memory resource, and will therefore become invalid if the foreign memory is unmapped or otherwise becomes no longer available."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Bit specifying external memory handle types"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalMemoryFeatureFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkMemoryDedicatedRequirements"
            },
            {
              "kind": "slink",
              "value": "VkMemoryDedicatedAllocateInfo"
            }
          ],
          "description": " specifies that images or buffers created with the specified parameters and handle type {#0#} use the mechanisms defined by {#1#} and {#2#} to create (or import) a dedicated allocation for the image or buffer."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that handles of this type {#0#} be exported from Vulkan memory objects."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that handles of this type {#0#} be imported as Vulkan memory objects."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Bitmask specifying features of an external memory handle type"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalSemaphoreHandleTypeFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "dup"
            },
            {
              "kind": "code",
              "value": "dup2"
            },
            {
              "kind": "code",
              "value": "close"
            },
            {
              "kind": "code",
              "value": "dup3"
            },
            {
              "kind": "code",
              "value": "SCM_RIGHTS"
            }
          ],
          "description": " specifies a POSIX file descriptor handle that has only limited valid usage outside of Vulkan and other compatible APIs. It {#0#} be compatible with the POSIX system calls {#2#}, {#3#}, {#4#}, and the non-standard system call {#5#}. Additionally, it {#1#} be transportable over a socket using an {#6#} control message. It owns a reference to the underlying synchronization primitive represented by its Vulkan semaphore object."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DuplicateHandle"
            },
            {
              "kind": "code",
              "value": "CloseHandle"
            },
            {
              "kind": "code",
              "value": "CompareObjectHandles"
            },
            {
              "kind": "code",
              "value": "GetHandleInformation"
            },
            {
              "kind": "code",
              "value": "SetHandleInformation"
            }
          ],
          "description": " specifies an NT handle that has only limited valid usage outside of Vulkan and other compatible APIs. It {#0#} be compatible with the functions {#1#}, {#2#}, {#3#}, {#4#}, and {#5#}. It owns a reference to the underlying synchronization primitive represented by its Vulkan semaphore object."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies a global share handle that has only limited valid usage outside of Vulkan and other compatible APIs. It is not compatible with any native APIs. It does not own a reference to the underlying synchronization primitive represented its Vulkan semaphore object, and will therefore become invalid when all Vulkan semaphore objects associated with it are destroyed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "ID3D12Device"
            },
            {
              "kind": "code",
              "value": "CreateSharedHandle"
            }
          ],
          "description": " specifies an NT handle returned by {#0#}::{#1#} referring to a Direct3D 12 fence. It owns a reference to the underlying synchronization primitive associated with the Direct3D fence."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies a POSIX file descriptor handle to a Linux Sync File or Android Fence object. It can be used with any native API accepting a valid sync file or fence as input. It owns a reference to the underlying synchronization primitive associated with the file descriptor. Implementations which support importing this handle type {#0#} accept any type of sync or fence FD supported by the native system they are running on."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Bitmask of valid external semaphore handle types"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalSemaphoreFeatureFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Bitfield describing features of an external semaphore handle type"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSemaphoreImportFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "handleType"
            }
          ],
          "description": " specifies that the semaphore payload will be imported only temporarily, as described in <<synchronization-semaphores-importing,Importing Semaphore Payloads>>, regardless of the permanence of {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Bitmask specifying additional parameters of semaphore payload import"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalFenceHandleTypeFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "dup"
            },
            {
              "kind": "code",
              "value": "dup2"
            },
            {
              "kind": "code",
              "value": "close"
            },
            {
              "kind": "code",
              "value": "dup3"
            },
            {
              "kind": "code",
              "value": "SCM_RIGHTS"
            }
          ],
          "description": " specifies a POSIX file descriptor handle that has only limited valid usage outside of Vulkan and other compatible APIs. It {#0#} be compatible with the POSIX system calls {#2#}, {#3#}, {#4#}, and the non-standard system call {#5#}. Additionally, it {#1#} be transportable over a socket using an {#6#} control message. It owns a reference to the underlying synchronization primitive represented by its Vulkan fence object."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "code",
              "value": "DuplicateHandle"
            },
            {
              "kind": "code",
              "value": "CloseHandle"
            },
            {
              "kind": "code",
              "value": "CompareObjectHandles"
            },
            {
              "kind": "code",
              "value": "GetHandleInformation"
            },
            {
              "kind": "code",
              "value": "SetHandleInformation"
            }
          ],
          "description": " specifies an NT handle that has only limited valid usage outside of Vulkan and other compatible APIs. It {#0#} be compatible with the functions {#1#}, {#2#}, {#3#}, {#4#}, and {#5#}. It owns a reference to the underlying synchronization primitive represented by its Vulkan fence object."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        "documentation": {
          "macros": [],
          "description": " specifies a global share handle that has only limited valid usage outside of Vulkan and other compatible APIs. It is not compatible with any native APIs. It does not own a reference to the underlying synchronization primitive represented by its Vulkan fence object, and will therefore become invalid when all Vulkan fence objects associated with it are destroyed."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies a POSIX file descriptor handle to a Linux Sync File or Android Fence. It can be used with any native API accepting a valid sync file or fence as input. It owns a reference to the underlying synchronization primitive associated with the file descriptor. Implementations which support importing this handle type {#0#} accept any type of sync or fence FD supported by the native system they are running on."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Bitmask of valid external fence handle types"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkExternalFenceFeatureFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Bitfield describing features of an external fence handle type"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkFenceImportFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_FENCE_IMPORT_TEMPORARY_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "handleType"
            }
          ],
          "description": " specifies that the fence payload will be imported only temporarily, as described in <<synchronization-fences-importing,Importing Fence Payloads>>, regardless of the permanence of {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Bitmask specifying additional parameters of fence payload import"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSurfaceCounterFlagBitsEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_SURFACE_COUNTER_VBLANK_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies a counter incrementing once every time a vertical blanking period occurs on the display associated with the surface."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_surface_counter",
      "description": "Surface-relative counter types"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkPeerMemoryFeatureFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyBuffer"
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyImage"
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyBufferToImage"
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyImageToBuffer"
            }
          ],
          "description": " specifies that the memory {#0#} be accessed as the source of a {#1#}, {#2#}, {#3#}, or {#4#} command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyBuffer"
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyImage"
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyBufferToImage"
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyImageToBuffer"
            }
          ],
          "description": " specifies that the memory {#0#} be accessed as the destination of a {#1#}, {#2#}, {#3#}, or {#4#} command."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that the memory {#0#} be read as any memory access type."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that the memory {#0#} be written as any memory access type. Shader atomics are considered to be writes."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Bitmask specifying supported peer memory features"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkMemoryAllocateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryAllocateFlagsInfo"
            },
            {
              "kind": "pname",
              "value": "deviceMask"
            }
          ],
          "description": " specifies that memory will be allocated for the devices in {#0#}::{#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Bitmask specifying flags for a device memory allocation"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDeviceGroupPresentModeFlagBitsKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that any physical device with a presentation engine {#0#} present its own swapchain images."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "presentMask"
            }
          ],
          "description": " specifies that any physical device with a presentation engine {#0#} present swapchain images from any physical device in its {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "presentMask"
            }
          ],
          "description": " specifies that any physical device with a presentation engine {#0#} present the sum of swapchain images from any physical devices in its {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that multiple physical devices with a presentation engine {#0#} each present their own swapchain images."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Bitmask specifying supported device group present modes"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSwapchainCreateFlagBitsKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkImageSwapchainCreateInfoKHR"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT"
            },
            {
              "kind": "pname",
              "value": "swapchain"
            }
          ],
          "description": " specifies that images created from the swapchain (i.e. with the {#3#} member of {#1#} set to this swapchain's handle) {#0#} use {#2#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4",
        "name": "VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Bitmask controlling swapchain creation"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkSubpassDescriptionFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " specifies that shaders compiled for this subpass write the attributes for all views in a single invocation of each vertex processing stage. All pipelines compiled against a subpass that includes this bit {#0#} write per-view attributes to the `"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x2",
        "name": "VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " specifies that shaders compiled for this subpass use per-view positions which only differ in value in the x component. Per-view viewport mask {#0#} also be used."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x4",
        "name": "VK_SUBPASS_DESCRIPTION_RESERVED_2_BIT_QCOM"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x8",
        "name": "VK_SUBPASS_DESCRIPTION_RESERVED_3_BIT_QCOM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Bitmask specifying usage of a subpass"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDebugUtilsMessageSeverityFlagBitsEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies the most verbose output indicating all diagnostic messages from the Vulkan loader, layers, and drivers should be captured."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies an informational message such as resource details that may be handy when debugging an application."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x100",
        "name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " specifies use of Vulkan that {#0#} expose an app bug. Such cases may not be immediately harmful, such as a fragment shader outputting to a location with no attachment. Other cases {#1#} point to behavior that is almost certainly bad when unintended such as using an image whose memory has not been filled. In general if you see a warning but you know that the behavior is intended/desired, then simply ignore the warning."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1000",
        "name": "VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that the application has violated a valid usage condition of the specification."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Bitmask specifying which severities of events cause a debug messenger callback"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDebugUtilsMessageTypeFlagBitsEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that some general event has occurred. This is typically a non-specification, non-performance event."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " specifies that something has occurred during validation against the Vulkan specification that may indicate invalid behavior."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdClearColorImage"
            },
            {
              "kind": "slink",
              "value": "VkAttachmentDescription"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_LOAD_OP_CLEAR"
            },
            {
              "kind": "pname",
              "value": "loadOp"
            }
          ],
          "description": " specifies a potentially non-optimal use of Vulkan, e.g. using {#0#} when setting {#1#}::{#3#} to {#2#} would have worked."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Bitmask specifying which types of events cause a debug messenger callback"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkDescriptorBindingFlagBitsEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkUpdateDescriptorSetWithTemplateKHR"
            }
          ],
          "description": " indicates that if descriptors in this binding are updated between when the descriptor set is bound in a command buffer and when that command buffer is submitted to a queue, then the submission will use the most recently set descriptors for this binding and the updates do not invalidate the command buffer. Descriptor bindings created with this flag are also partially exempt from the external synchronization requirement in {#0#} and"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Bitmask specifying descriptor set layout binding properties"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkConditionalRenderingFlagBitsEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "buffer"
            },
            {
              "kind": "pname",
              "value": "offset"
            }
          ],
          "description": " specifies the condition used to determine whether to discard rendering commands or not. That is, if the 32-bit predicate read from {#0#} memory at {#1#} is zero, the rendering commands are not discarded, and if non zero, then they are discarded."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Specify the behavior of conditional rendering"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkResolveModeFlagBitsKHR",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0",
        "name": "VK_RESOLVE_MODE_NONE_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_RESOLVE_MODE_AVERAGE_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_RESOLVE_MODE_MIN_BIT_KHR"
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_RESOLVE_MODE_MAX_BIT_KHR"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Bitmask indicating supported depth and stencil resolve modes"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkGeometryInstanceFlagBitsNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " disables face culling for this instance."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " indicates that the front face of the triangle for culling purposes is the face that is counter clockwise in object space relative to the ray origin. Because the facing is determined in object space, an instance transform matrix does not change the winding, but a geometry transform does."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_GEOMETRY_OPAQUE_BIT_NV"
            },
            {
              "kind": "code",
              "value": "gl_RayFlagsNoOpaqueNV"
            }
          ],
          "description": " causes this instance to act as though {#1#} were specified on all geometries referenced by this instance. This behavior {#0#} be overridden by the ray flag {#2#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_GEOMETRY_OPAQUE_BIT_NV"
            },
            {
              "kind": "code",
              "value": "gl_RayFlagsOpaqueNV"
            }
          ],
          "description": " causes this instance to act as though {#1#} were not specified on all geometries referenced by this instance. This behavior {#0#} be overridden by the ray flag {#2#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Instance flag bits"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkGeometryFlagBitsNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_GEOMETRY_OPAQUE_BIT_NV",
        "documentation": {
          "macros": [],
          "description": " indicates that this geometry does not invoke the any-hit shaders even if present in a hit group."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " indicates that the implementation {#1#} only call the any-hit shader a single time for each primitive in this geometry. If this bit is absent an implementation {#0#} invoke the any-hit shader more than once for this geometry."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Bitmask specifying additional parameters for a geometry"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkBuildAccelerationStructureFlagBitsNV",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdBuildAccelerationStructureNV"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "update"
            }
          ],
          "description": " indicates that the specified acceleration structure {#0#} be updated with {#3#} of {#2#} in {#1#}."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdCopyAccelerationStructureNV"
            },
            {
              "kind": "ename",
              "value": "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV"
            },
            {
              "kind": "pname",
              "value": "mode"
            }
          ],
          "description": " indicates that the specified acceleration structure {#0#} act as the source for {#1#} with {#3#} of {#2#} to produce a compacted acceleration structure."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            }
          ],
          "description": " indicates that the given acceleration structure build {#0#} prioritize trace performance over build time."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x8",
        "name": "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            }
          ],
          "description": " indicates that the given acceleration structure build {#0#} prioritize build time over trace performance."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x10",
        "name": "VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            }
          ],
          "description": " indicates that this acceleration structure {#0#} minimize the size of the scratch memory and the final result build, potentially at the expense of build time or trace performance."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Bitmask specifying additional parameters for acceleration structure builds"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkFramebufferCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFramebufferAttachmentImageInfoKHR"
            }
          ],
          "description": " specifies that image views are not specified, and only attachment compatibility information will be provided via an instance of {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Bitmask specifying framebuffer properties"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkPipelineCreationFeedbackFlagBitsEXT",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x1",
        "name": "VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT",
        "documentation": {
          "macros": [],
          "description": " indicates that the feedback information is valid."
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x2",
        "name": "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT",
        "documentation": {
          "macros": [
            {
              "kind": "should",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCreateGraphicsPipelines"
            },
            {
              "kind": "flink",
              "value": "vkCreateRayTracingPipelinesNV"
            },
            {
              "kind": "ename",
              "value": "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXTbit"
            },
            {
              "kind": "pname",
              "value": "pipelineCache"
            },
            {
              "kind": "pname",
              "value": "pipelineCache"
            }
          ],
          "description": " indicates that a readily usable pipeline or pipeline stage was found in the {#4#} specified by the application in the pipeline creation command.+An implementation {#0#} set the{#3#} if it was able to avoid the large majority of pipeline or pipeline stagecreation work by using the {#5#} parameter of{#1#},{#2#},"
        }
      },
      {
        "kind": "ENUM_MEMBER",
        "type": "BITPOS",
        "value": "0x4",
        "name": "VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_pipeline_creation_feedback",
      "description": "Bitmask specifying pipeline or pipeline stage creation feedback"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkShaderCorePropertiesFlagBitsAMD",
    "children": [],
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Bitmask specifying shader core properties"
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkShaderModuleCreateFlagBits",
    "children": [
      {
        "kind": "ENUM_MEMBER",
        "type": "VALUE",
        "value": "0x1",
        "name": "VK_SHADER_MODULE_CREATE_RESERVED_0_BIT_NV",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "kind": "ENUM",
    "type": "BITMASK",
    "name": "VkPipelineCompilerControlFlagBitsAMD",
    "children": [],
    "documentation": {
      "macros": [],
      "category": "VK_AMD_pipeline_compiler_control",
      "description": "Enum specifying available compilation control flags"
    }
  },
  {
    "text": "VkResult vkCreateInstance",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateInstance",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "const VkInstanceCreateInfo * pCreateInfo",
        "type": "VkInstanceCreateInfo",
        "rawType": "const VkInstanceCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkInstanceCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure controlling creation of the instance."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkInstance * pInstance",
        "type": "VkInstance",
        "rawType": "VkInstance *",
        "name": "pInstance",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkInstance"
            }
          ],
          "description": " references a {#0#} handle in which the resulting instance is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Create a new Vulkan instance"
    }
  },
  {
    "text": "void vkDestroyInstance",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyInstance",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the instance to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Destroy an instance of Vulkan"
    }
  },
  {
    "text": "VkResult vkEnumeratePhysicalDevices",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEnumeratePhysicalDevices",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateInstance"
            }
          ],
          "description": " is a handle to a Vulkan instance previously created with {#0#}."
        }
      },
      {
        "text": "uint32_t * pPhysicalDeviceCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPhysicalDeviceCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of physical devices available or queried, as described below."
        }
      },
      {
        "text": "VkPhysicalDevice * pPhysicalDevices",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice *",
        "name": "pPhysicalDevices",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "isArray": true,
        "length": "pPhysicalDeviceCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPhysicalDevice"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} handles."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Enumerates the physical devices accessible to a Vulkan instance"
    }
  },
  {
    "text": "PFN_vkVoidFunction vkGetDeviceProcAddr",
    "type": "PFN_vkVoidFunction",
    "rawType": "PFN_vkVoidFunction",
    "name": "vkGetDeviceProcAddr",
    "isConstant": false,
    "dereferenceCount": 0,
    "isFunction": true,
    "jsType": "Function",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const char * pName",
        "type": "char",
        "rawType": "const char *",
        "name": "pName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Return a function reference for a command"
    }
  },
  {
    "text": "PFN_vkVoidFunction vkGetInstanceProcAddr",
    "type": "PFN_vkVoidFunction",
    "rawType": "PFN_vkVoidFunction",
    "name": "vkGetInstanceProcAddr",
    "isConstant": false,
    "dereferenceCount": 0,
    "isFunction": true,
    "jsType": "Function",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance that the function reference will be compatible with, or <i>null</i> for commands not dependent on any instance."
        }
      },
      {
        "text": "const char * pName",
        "type": "char",
        "rawType": "const char *",
        "name": "pName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the name of the command to obtain."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Return a function reference for a command"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle to the physical device whose properties will be queried."
        }
      },
      {
        "text": "VkPhysicalDeviceProperties * pProperties",
        "type": "VkPhysicalDeviceProperties",
        "rawType": "VkPhysicalDeviceProperties *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceProperties"
            }
          ],
          "description": " is a reference to a {#0#} structure in which properties are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Returns properties of a physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceQueueFamilyProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceQueueFamilyProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle to the physical device whose properties will be queried."
        }
      },
      {
        "text": "uint32_t * pQueueFamilyPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pQueueFamilyPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of queue families available or queried, as described below."
        }
      },
      {
        "text": "VkQueueFamilyProperties * pQueueFamilyProperties",
        "type": "VkQueueFamilyProperties",
        "rawType": "VkQueueFamilyProperties *",
        "name": "pQueueFamilyProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pQueueFamilyPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkQueueFamilyProperties"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Reports properties of the queues of the specified physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceMemoryProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceMemoryProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle to the device to query."
        }
      },
      {
        "text": "VkPhysicalDeviceMemoryProperties * pMemoryProperties",
        "type": "VkPhysicalDeviceMemoryProperties",
        "rawType": "VkPhysicalDeviceMemoryProperties *",
        "name": "pMemoryProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceMemoryProperties"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the properties are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Reports memory information for the specified physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceFeatures",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceFeatures",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the supported features."
        }
      },
      {
        "text": "VkPhysicalDeviceFeatures * pFeatures",
        "type": "VkPhysicalDeviceFeatures",
        "rawType": "VkPhysicalDeviceFeatures *",
        "name": "pFeatures",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceFeatures"
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the physical device features are returned. For each feature, a value of {#1#} specifies that the feature is supported on this physical device, and {#2#} specifies that the feature is not supported."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Reports capabilities of a physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceFormatProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceFormatProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the format properties."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the format whose properties are queried."
        }
      },
      {
        "text": "VkFormatProperties * pFormatProperties",
        "type": "VkFormatProperties",
        "rawType": "VkFormatProperties *",
        "name": "pFormatProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFormatProperties"
            },
            {
              "kind": "pname",
              "value": "format"
            }
          ],
          "description": " is a reference to a {#0#} structure in which physical device properties for {#1#} are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Lists physical device\\"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceImageFormatProperties",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceImageFormatProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the image capabilities."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "elink",
              "value": "VkFormat"
            },
            {
              "kind": "pname",
              "value": "format"
            }
          ],
          "description": " is a {#1#} value specifying the image format, corresponding to {#0#}::{#2#}."
        }
      },
      {
        "text": "VkImageType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "elink",
              "value": "VkImageType"
            },
            {
              "kind": "pname",
              "value": "imageType"
            }
          ],
          "description": " is a {#1#} value specifying the image type, corresponding to {#0#}::{#2#}."
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "elink",
              "value": "VkImageTiling"
            },
            {
              "kind": "pname",
              "value": "tiling"
            }
          ],
          "description": " is a {#1#} value specifying the image tiling, corresponding to {#0#}::{#2#}."
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "elink",
              "value": "VkImageUsageFlagBits"
            },
            {
              "kind": "pname",
              "value": "usage"
            }
          ],
          "description": " is a bitmask of {#1#} specifying the intended usage of the image, corresponding to {#0#}::{#2#}."
        }
      },
      {
        "text": "VkImageCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageCreateFlagBits",
        "bitmaskRawType": "VkImageCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "elink",
              "value": "VkImageCreateFlagBits"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " is a bitmask of {#1#} specifying additional parameters of the image, corresponding to {#0#}::{#2#}."
        }
      },
      {
        "text": "VkImageFormatProperties * pImageFormatProperties",
        "type": "VkImageFormatProperties",
        "rawType": "VkImageFormatProperties *",
        "name": "pImageFormatProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageFormatProperties"
            }
          ],
          "description": " is a reference to a {#0#} structure in which capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Lists physical device\\"
    }
  },
  {
    "text": "VkResult vkCreateDevice",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDevice",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "vkEnumeratePhysicalDevices"
            }
          ],
          "description": " {#0#} be one of the device handles returned from a call to {#1#} (see <<devsandqueues-physical-device-enumeration, Physical Device Enumeration>>)."
        }
      },
      {
        "text": "const VkDeviceCreateInfo * pCreateInfo",
        "type": "VkDeviceCreateInfo",
        "rawType": "const VkDeviceCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about how to create the device."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkDevice * pDevice",
        "type": "VkDevice",
        "rawType": "VkDevice *",
        "name": "pDevice",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDevice"
            }
          ],
          "description": " is a reference to a handle in which the created {#0#} is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Create a new device instance"
    }
  },
  {
    "text": "void vkDestroyDevice",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyDevice",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Destroy a logical device"
    }
  },
  {
    "text": "VkResult vkEnumerateInstanceVersion",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEnumerateInstanceVersion",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "uint32_t * pApiVersion",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pApiVersion",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "uint32_t"
            }
          ],
          "description": " is a reference to a {#0#}, which is the version of Vulkan supported by instance-level functionality, encoded as described in <<extendingvulkan-coreversions-versionnumbers>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Initialization",
      "description": "Query instance-level version before instance creation"
    }
  },
  {
    "text": "VkResult vkEnumerateInstanceLayerProperties",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEnumerateInstanceLayerProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of layer properties available or queried, as described below."
        }
      },
      {
        "text": "VkLayerProperties * pProperties",
        "type": "VkLayerProperties",
        "rawType": "VkLayerProperties *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkLayerProperties"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Extending Vulkan",
      "description": "Returns up to requested number of global layer properties"
    }
  },
  {
    "text": "VkResult vkEnumerateInstanceExtensionProperties",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEnumerateInstanceExtensionProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "const char * pLayerName",
        "type": "char",
        "rawType": "const char *",
        "name": "pLayerName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is either <i>null</i> or a reference to a string naming the layer to retrieve extensions from."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of extension properties available or queried, as described below."
        }
      },
      {
        "text": "VkExtensionProperties * pProperties",
        "type": "VkExtensionProperties",
        "rawType": "VkExtensionProperties *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExtensionProperties"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Extending Vulkan",
      "description": "Returns up to requested number of global extension properties"
    }
  },
  {
    "text": "VkResult vkEnumerateDeviceLayerProperties",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEnumerateDeviceLayerProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of layer properties available or queried."
        }
      },
      {
        "text": "VkLayerProperties * pProperties",
        "type": "VkLayerProperties",
        "rawType": "VkLayerProperties *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkLayerProperties"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Extending Vulkan",
      "description": "Returns properties of available physical device layers"
    }
  },
  {
    "text": "VkResult vkEnumerateDeviceExtensionProperties",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEnumerateDeviceExtensionProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device that will be queried."
        }
      },
      {
        "text": "const char * pLayerName",
        "type": "char",
        "rawType": "const char *",
        "name": "pLayerName",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is either <i>null</i> or a reference to a string naming the layer to retrieve extensions from."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkEnumerateInstanceExtensionProperties"
            },
            {
              "kind": "pname",
              "value": "pPropertyCount"
            }
          ],
          "description": " is a reference to a number related to the number of extension properties available or queried, and is treated in the same fashion as the {#0#}::{#1#} parameter."
        }
      },
      {
        "text": "VkExtensionProperties * pProperties",
        "type": "VkExtensionProperties",
        "rawType": "VkExtensionProperties *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExtensionProperties"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Extending Vulkan",
      "description": "Returns properties of available physical device extensions"
    }
  },
  {
    "text": "void vkGetDeviceQueue",
    "type": "void",
    "rawType": "void",
    "name": "vkGetDeviceQueue",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the queue."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the queue family to which the queue belongs."
        }
      },
      {
        "text": "uint32_t queueIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index within this queue family of the queue to retrieve."
        }
      },
      {
        "text": "VkQueue * pQueue",
        "type": "VkQueue",
        "rawType": "VkQueue *",
        "name": "pQueue",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkQueue"
            }
          ],
          "description": " is a reference to a {#0#} object that will be filled with the handle for the requested queue."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Get a queue handle from a device"
    }
  },
  {
    "text": "VkResult vkQueueSubmit",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkQueueSubmit",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue that the command buffers will be submitted to."
        }
      },
      {
        "text": "uint32_t submitCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "submitCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkSubmitInfo * pSubmits",
        "type": "VkSubmitInfo",
        "rawType": "const VkSubmitInfo *",
        "name": "pSubmits",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "submitCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubmitInfo"
            }
          ],
          "description": " is an array of {#0#} structures, each specifying a command buffer submission batch."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "optional",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "fence"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is an {#0#} handle to a fence to be signaled once all submitted command buffers have completed execution. If {#1#} is not {#2#}, it defines a <<synchronization-fences-signaling, fence signal operation>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Submits a sequence of semaphores or command buffers to a queue"
    }
  },
  {
    "text": "VkResult vkQueueWaitIdle",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkQueueWaitIdle",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue on which to wait."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Wait for a queue to become idle"
    }
  },
  {
    "text": "VkResult vkDeviceWaitIdle",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkDeviceWaitIdle",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device to idle."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Wait for a device to become idle"
    }
  },
  {
    "text": "VkResult vkAllocateMemory",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAllocateMemory",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkMemoryAllocateInfo * pAllocateInfo",
        "type": "VkMemoryAllocateInfo",
        "rawType": "const VkMemoryAllocateInfo *",
        "name": "pAllocateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkDeviceMemory * pMemory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory *",
        "name": "pMemory",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Allocate device memory"
    }
  },
  {
    "text": "void vkFreeMemory",
    "type": "void",
    "rawType": "void",
    "name": "vkFreeMemory",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is the {#0#} object to be freed."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Free device memory"
    }
  },
  {
    "text": "VkResult vkMapMemory",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkMapMemory",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is the {#0#} object to be mapped."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a zero-based byte offset from the beginning of the memory object."
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "pname",
              "value": "offset"
            }
          ],
          "description": " is the size of the memory range to map, or {#0#} to map from {#1#} to the end of the allocation."
        }
      },
      {
        "text": "VkMemoryMapFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkMemoryMapFlags",
        "bitmaskRawType": "VkMemoryMapFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      },
      {
        "text": "void ** ppData",
        "type": "void",
        "rawType": "void **",
        "name": "ppData",
        "isConstant": false,
        "dereferenceCount": 2,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a `void "
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Map a memory object into application address space"
    }
  },
  {
    "text": "void vkUnmapMemory",
    "type": "void",
    "rawType": "void",
    "name": "vkUnmapMemory",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the memory object to be unmapped."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Unmap a previously mapped memory object"
    }
  },
  {
    "text": "VkResult vkFlushMappedMemoryRanges",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkFlushMappedMemoryRanges",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory ranges."
        }
      },
      {
        "text": "uint32_t memoryRangeCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryRangeCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkMappedMemoryRange * pMemoryRanges",
        "type": "VkMappedMemoryRange",
        "rawType": "const VkMappedMemoryRange *",
        "name": "pMemoryRanges",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "memoryRangeCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMappedMemoryRange"
            }
          ],
          "description": " is an array of {#0#} structures describing the memory ranges to flush."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Flush mapped memory ranges"
    }
  },
  {
    "text": "VkResult vkInvalidateMappedMemoryRanges",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkInvalidateMappedMemoryRanges",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory ranges."
        }
      },
      {
        "text": "uint32_t memoryRangeCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryRangeCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkMappedMemoryRange * pMemoryRanges",
        "type": "VkMappedMemoryRange",
        "rawType": "const VkMappedMemoryRange *",
        "name": "pMemoryRanges",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "memoryRangeCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMappedMemoryRange"
            }
          ],
          "description": " is an array of {#0#} structures describing the memory ranges to invalidate."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Invalidate ranges of mapped memory objects"
    }
  },
  {
    "text": "void vkGetDeviceMemoryCommitment",
    "type": "void",
    "rawType": "void",
    "name": "vkGetDeviceMemoryCommitment",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the memory object being queried."
        }
      },
      {
        "text": "VkDeviceSize * pCommittedMemoryInBytes",
        "type": "uint64_t",
        "rawType": "uint64_t *",
        "name": "pCommittedMemoryInBytes",
        "isConstant": false,
        "dereferenceCount": 1,
        "baseType": "VkDeviceSize",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "basetype",
              "value": "VkDeviceSize"
            }
          ],
          "description": " is a reference to a {#0#} value in which the number of bytes currently committed is returned, on success."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Query the current commitment for a VkDeviceMemory"
    }
  },
  {
    "text": "void vkGetBufferMemoryRequirements",
    "type": "void",
    "rawType": "void",
    "name": "vkGetBufferMemoryRequirements",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the buffer."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer to query."
        }
      },
      {
        "text": "VkMemoryRequirements * pMemoryRequirements",
        "type": "VkMemoryRequirements",
        "rawType": "VkMemoryRequirements *",
        "name": "pMemoryRequirements",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryRequirements"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the memory requirements of the buffer object are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Returns the memory requirements for specified Vulkan object"
    }
  },
  {
    "text": "VkResult vkBindBufferMemory",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkBindBufferMemory",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the buffer and memory."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer to be attached to memory."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkMemoryRequirements"
            },
            {
              "kind": "pname",
              "value": "size"
            },
            {
              "kind": "pname",
              "value": "memory"
            },
            {
              "kind": "pname",
              "value": "memoryOffset"
            }
          ],
          "description": " which is to be bound to the buffer. The number of bytes returned in the {#0#}::{#1#} member in {#2#}, starting from {#3#} bytes, will be bound to the specified buffer."
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bind device memory to a buffer object"
    }
  },
  {
    "text": "void vkGetImageMemoryRequirements",
    "type": "void",
    "rawType": "void",
    "name": "vkGetImageMemoryRequirements",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image to query."
        }
      },
      {
        "text": "VkMemoryRequirements * pMemoryRequirements",
        "type": "VkMemoryRequirements",
        "rawType": "VkMemoryRequirements *",
        "name": "pMemoryRequirements",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryRequirements"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the memory requirements of the image object are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Returns the memory requirements for specified Vulkan object"
    }
  },
  {
    "text": "VkResult vkBindImageMemory",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkBindImageMemory",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image and memory."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkMemoryRequirements"
            },
            {
              "kind": "pname",
              "value": "size"
            },
            {
              "kind": "pname",
              "value": "memory"
            },
            {
              "kind": "pname",
              "value": "memoryOffset"
            }
          ],
          "description": " which is to be bound to the image. The number of bytes returned in the {#0#}::{#1#} member in {#2#}, starting from {#3#} bytes, will be bound to the specified image."
        }
      },
      {
        "text": "VkDeviceSize memoryOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "memoryOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bind device memory to an image object"
    }
  },
  {
    "text": "void vkGetImageSparseMemoryRequirements",
    "type": "void",
    "rawType": "void",
    "name": "vkGetImageSparseMemoryRequirements",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImage"
            }
          ],
          "description": " is the {#0#} object to get the memory requirements for."
        }
      },
      {
        "text": "uint32_t * pSparseMemoryRequirementCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pSparseMemoryRequirementCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of sparse memory requirements available or queried, as described below."
        }
      },
      {
        "text": "VkSparseImageMemoryRequirements * pSparseMemoryRequirements",
        "type": "VkSparseImageMemoryRequirements",
        "rawType": "VkSparseImageMemoryRequirements *",
        "name": "pSparseMemoryRequirements",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pSparseMemoryRequirementCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSparseImageMemoryRequirements"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Query the memory requirements for a sparse image"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceSparseImageFormatProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceSparseImageFormatProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the sparse image capabilities."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image format."
        }
      },
      {
        "text": "VkImageType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the dimensionality of image."
        }
      },
      {
        "text": "VkSampleCountFlagBits samples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSampleCountFlagBits"
            }
          ],
          "description": " is the number of samples per texel as defined in {#0#}."
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a bitmask describing the intended usage of the image."
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the tiling arrangement of the texel blocks in memory."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of sparse format properties available or queried, as described below."
        }
      },
      {
        "text": "VkSparseImageFormatProperties * pProperties",
        "type": "VkSparseImageFormatProperties",
        "rawType": "VkSparseImageFormatProperties *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseImageFormatProperties"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Retrieve properties of an image format applied to sparse images"
    }
  },
  {
    "text": "VkResult vkQueueBindSparse",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkQueueBindSparse",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue that the sparse binding operations will be submitted to."
        }
      },
      {
        "text": "uint32_t bindInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkBindSparseInfo * pBindInfo",
        "type": "VkBindSparseInfo",
        "rawType": "const VkBindSparseInfo *",
        "name": "pBindInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBindSparseInfo"
            }
          ],
          "description": " is an array of {#0#} structures, each specifying a sparse binding submission batch."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "optional",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "fence"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is an {#0#} handle to a fence to be signaled. If {#1#} is not {#2#}, it defines a <<synchronization-fences-signaling, fence signal operation>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Bind device memory to a sparse resource object"
    }
  },
  {
    "text": "VkResult vkCreateFence",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateFence",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the fence."
        }
      },
      {
        "text": "const VkFenceCreateInfo * pCreateInfo",
        "type": "VkFenceCreateInfo",
        "rawType": "const VkFenceCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkFenceCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about how the fence is to be created."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkFence * pFence",
        "type": "VkFence",
        "rawType": "VkFence *",
        "name": "pFence",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a handle in which the resulting fence object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Create a new fence object"
    }
  },
  {
    "text": "void vkDestroyFence",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyFence",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the fence."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the fence to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Destroy a fence object"
    }
  },
  {
    "text": "VkResult vkResetFences",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkResetFences",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the fences."
        }
      },
      {
        "text": "uint32_t fenceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fenceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of fences to reset."
        }
      },
      {
        "text": "const VkFence * pFences",
        "type": "VkFence",
        "rawType": "const VkFence *",
        "name": "pFences",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "fenceCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of fence handles to reset."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Resets one or more fence objects"
    }
  },
  {
    "text": "VkResult vkGetFenceStatus",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetFenceStatus",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the fence."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the fence to query."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Return the status of a fence"
    }
  },
  {
    "text": "VkResult vkWaitForFences",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkWaitForFences",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the fences."
        }
      },
      {
        "text": "uint32_t fenceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "fenceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " fence handles."
        }
      },
      {
        "text": "const VkFence * pFences",
        "type": "VkFence",
        "rawType": "const VkFence *",
        "name": "pFences",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "fenceCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkBool32 waitAll",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitAll",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "pname",
              "value": "waitAll"
            },
            {
              "kind": "pname",
              "value": "pFences"
            },
            {
              "kind": "pname",
              "value": "pFences"
            }
          ],
          "description": " is the condition that {#0#} be satisfied to successfully unblock the wait. If {#2#} is {#1#}, then the condition is that all fences in {#3#} are signaled. Otherwise, the condition is that at least one fence in {#4#} is signaled."
        }
      },
      {
        "text": "uint64_t timeout",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "timeout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "timeout"
            }
          ],
          "description": " is the timeout period in units of nanoseconds. {#2#} is adjusted to the closest value allowed by the implementation-dependent timeout accuracy, which {#0#} be substantially longer than one nanosecond, and {#1#} be longer than the requested period."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Wait for one or more fences to become signaled"
    }
  },
  {
    "text": "VkResult vkCreateSemaphore",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateSemaphore",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the semaphore."
        }
      },
      {
        "text": "const VkSemaphoreCreateInfo * pCreateInfo",
        "type": "VkSemaphoreCreateInfo",
        "rawType": "const VkSemaphoreCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSemaphoreCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about how the semaphore is to be created."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkSemaphore * pSemaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore *",
        "name": "pSemaphore",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a handle in which the resulting semaphore object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Create a new queue semaphore object"
    }
  },
  {
    "text": "void vkDestroySemaphore",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroySemaphore",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the semaphore."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the semaphore to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Destroy a semaphore object"
    }
  },
  {
    "text": "VkResult vkCreateEvent",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateEvent",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the event."
        }
      },
      {
        "text": "const VkEventCreateInfo * pCreateInfo",
        "type": "VkEventCreateInfo",
        "rawType": "const VkEventCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkEventCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about how the event is to be created."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkEvent * pEvent",
        "type": "VkEvent",
        "rawType": "VkEvent *",
        "name": "pEvent",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a handle in which the resulting event object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Create a new event object"
    }
  },
  {
    "text": "void vkDestroyEvent",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyEvent",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the event."
        }
      },
      {
        "text": "VkEvent event",
        "type": "VkEvent",
        "rawType": "VkEvent",
        "name": "event",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the event to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Destroy an event object"
    }
  },
  {
    "text": "VkResult vkGetEventStatus",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetEventStatus",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the event."
        }
      },
      {
        "text": "VkEvent event",
        "type": "VkEvent",
        "rawType": "VkEvent",
        "name": "event",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the event to query."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Retrieve the status of an event object"
    }
  },
  {
    "text": "VkResult vkSetEvent",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkSetEvent",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the event."
        }
      },
      {
        "text": "VkEvent event",
        "type": "VkEvent",
        "rawType": "VkEvent",
        "name": "event",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the event to set."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Set an event to signaled state"
    }
  },
  {
    "text": "VkResult vkResetEvent",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkResetEvent",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the event."
        }
      },
      {
        "text": "VkEvent event",
        "type": "VkEvent",
        "rawType": "VkEvent",
        "name": "event",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the event to reset."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Reset an event to non-signaled state"
    }
  },
  {
    "text": "VkResult vkCreateQueryPool",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateQueryPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the query pool."
        }
      },
      {
        "text": "const VkQueryPoolCreateInfo * pCreateInfo",
        "type": "VkQueryPoolCreateInfo",
        "rawType": "const VkQueryPoolCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkQueryPoolCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing the number and type of queries to be managed by the pool."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkQueryPool * pQueryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool *",
        "name": "pQueryPool",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkQueryPool"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting query pool object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Create a new query pool object"
    }
  },
  {
    "text": "void vkDestroyQueryPool",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyQueryPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the query pool."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Destroy a query pool object"
    }
  },
  {
    "text": "VkResult vkGetQueryPoolResults",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetQueryPoolResults",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the query pool."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool managing the queries containing the desired results."
        }
      },
      {
        "text": "uint32_t firstQuery",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstQuery",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the initial query index."
        }
      },
      {
        "text": "uint32_t queryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of queries to read."
        }
      },
      {
        "text": "size_t dataSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "dataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " is the size in bytes of the buffer pointed to by {#0#}."
        }
      },
      {
        "text": "void * pData",
        "type": "void",
        "rawType": "void *",
        "name": "pData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a user-allocated buffer where the results will be written"
        }
      },
      {
        "text": "VkDeviceSize stride",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " is the stride in bytes between results for individual queries within {#0#}."
        }
      },
      {
        "text": "VkQueryResultFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryResultFlagBits",
        "bitmaskRawType": "VkQueryResultFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkQueryResultFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying how and when results are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Copy results of queries in a query pool to a host memory region"
    }
  },
  {
    "text": "void vkResetQueryPoolEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkResetQueryPoolEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the query pool."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the query pool managing the queries being reset."
        }
      },
      {
        "text": "uint32_t firstQuery",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstQuery",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the initial query index to reset."
        }
      },
      {
        "text": "uint32_t queryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of queries to reset."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Reset queries in a query pool"
    }
  },
  {
    "text": "VkResult vkCreateBuffer",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the buffer object."
        }
      },
      {
        "text": "const VkBufferCreateInfo * pCreateInfo",
        "type": "VkBufferCreateInfo",
        "rawType": "const VkBufferCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkBufferCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting creation of the buffer."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkBuffer * pBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer *",
        "name": "pBuffer",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBuffer"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting buffer object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Create a new buffer object"
    }
  },
  {
    "text": "void vkDestroyBuffer",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the buffer."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Destroy a buffer object"
    }
  },
  {
    "text": "VkResult vkCreateBufferView",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateBufferView",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the buffer view."
        }
      },
      {
        "text": "const VkBufferViewCreateInfo * pCreateInfo",
        "type": "VkBufferViewCreateInfo",
        "rawType": "const VkBufferViewCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkBufferViewCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters to be used to create the buffer."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkBufferView * pView",
        "type": "VkBufferView",
        "rawType": "VkBufferView *",
        "name": "pView",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBufferView"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting buffer view object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Create a new buffer view object"
    }
  },
  {
    "text": "void vkDestroyBufferView",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyBufferView",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the buffer view."
        }
      },
      {
        "text": "VkBufferView bufferView",
        "type": "VkBufferView",
        "rawType": "VkBufferView",
        "name": "bufferView",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer view to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Destroy a buffer view object"
    }
  },
  {
    "text": "VkResult vkCreateImage",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the image."
        }
      },
      {
        "text": "const VkImageCreateInfo * pCreateInfo",
        "type": "VkImageCreateInfo",
        "rawType": "const VkImageCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkImageCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters to be used to create the image."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkImage * pImage",
        "type": "VkImage",
        "rawType": "VkImage *",
        "name": "pImage",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImage"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting image object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Create a new image object"
    }
  },
  {
    "text": "void vkDestroyImage",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the image."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Destroy an image object"
    }
  },
  {
    "text": "void vkGetImageSubresourceLayout",
    "type": "void",
    "rawType": "void",
    "name": "vkGetImageSubresourceLayout",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image whose layout is being queried."
        }
      },
      {
        "text": "const VkImageSubresource * pSubresource",
        "type": "VkImageSubresource",
        "rawType": "const VkImageSubresource *",
        "name": "pSubresource",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageSubresource"
            }
          ],
          "description": " is a reference to a {#0#} structure selecting a specific image for the image subresource."
        }
      },
      {
        "text": "VkSubresourceLayout * pLayout",
        "type": "VkSubresourceLayout",
        "rawType": "VkSubresourceLayout *",
        "name": "pLayout",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubresourceLayout"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the layout is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Retrieve information about an image subresource"
    }
  },
  {
    "text": "VkResult vkCreateImageView",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateImageView",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the image view."
        }
      },
      {
        "text": "const VkImageViewCreateInfo * pCreateInfo",
        "type": "VkImageViewCreateInfo",
        "rawType": "const VkImageViewCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkImageViewCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters to be used to create the image view."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkImageView * pView",
        "type": "VkImageView",
        "rawType": "VkImageView *",
        "name": "pView",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageView"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting image view object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Create an image view from an existing image"
    }
  },
  {
    "text": "void vkDestroyImageView",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyImageView",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the image view."
        }
      },
      {
        "text": "VkImageView imageView",
        "type": "VkImageView",
        "rawType": "VkImageView",
        "name": "imageView",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image view to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Destroy an image view object"
    }
  },
  {
    "text": "VkResult vkCreateShaderModule",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateShaderModule",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the shader module."
        }
      },
      {
        "text": "const VkShaderModuleCreateInfo * pCreateInfo",
        "type": "VkShaderModuleCreateInfo",
        "rawType": "const VkShaderModuleCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkShaderModuleCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkShaderModule * pShaderModule",
        "type": "VkShaderModule",
        "rawType": "VkShaderModule *",
        "name": "pShaderModule",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkShaderModule"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting shader module object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Creates a new shader module object"
    }
  },
  {
    "text": "void vkDestroyShaderModule",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyShaderModule",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the shader module."
        }
      },
      {
        "text": "VkShaderModule shaderModule",
        "type": "VkShaderModule",
        "rawType": "VkShaderModule",
        "name": "shaderModule",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the shader module to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Destroy a shader module"
    }
  },
  {
    "text": "VkResult vkCreatePipelineCache",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreatePipelineCache",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the pipeline cache object."
        }
      },
      {
        "text": "const VkPipelineCacheCreateInfo * pCreateInfo",
        "type": "VkPipelineCacheCreateInfo",
        "rawType": "const VkPipelineCacheCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineCacheCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure containing initial parameters for the pipeline cache object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkPipelineCache * pPipelineCache",
        "type": "VkPipelineCache",
        "rawType": "VkPipelineCache *",
        "name": "pPipelineCache",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineCache"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting pipeline cache object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Creates a new pipeline cache"
    }
  },
  {
    "text": "void vkDestroyPipelineCache",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyPipelineCache",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the pipeline cache object."
        }
      },
      {
        "text": "VkPipelineCache pipelineCache",
        "type": "VkPipelineCache",
        "rawType": "VkPipelineCache",
        "name": "pipelineCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the pipeline cache to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Destroy a pipeline cache object"
    }
  },
  {
    "text": "VkResult vkGetPipelineCacheData",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPipelineCacheData",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the pipeline cache."
        }
      },
      {
        "text": "VkPipelineCache pipelineCache",
        "type": "VkPipelineCache",
        "rawType": "VkPipelineCache",
        "name": "pipelineCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the pipeline cache to retrieve data from."
        }
      },
      {
        "text": "size_t * pDataSize",
        "type": "size_t",
        "rawType": "size_t *",
        "name": "pDataSize",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "size_t"
            }
          ],
          "description": " is a reference to a {#0#} value related to the amount of data in the pipeline cache, as described below."
        }
      },
      {
        "text": "void * pData",
        "type": "void",
        "rawType": "void *",
        "name": "pData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "pDataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is either <i>null</i> or a reference to a buffer."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Get the data store from a pipeline cache"
    }
  },
  {
    "text": "VkResult vkMergePipelineCaches",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkMergePipelineCaches",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the pipeline cache objects."
        }
      },
      {
        "text": "VkPipelineCache dstCache",
        "type": "VkPipelineCache",
        "rawType": "VkPipelineCache",
        "name": "dstCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the pipeline cache to merge results into."
        }
      },
      {
        "text": "uint32_t srcCacheCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcCacheCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkPipelineCache * pSrcCaches",
        "type": "VkPipelineCache",
        "rawType": "const VkPipelineCache *",
        "name": "pSrcCaches",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "srcCacheCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "dstCache"
            },
            {
              "kind": "pname",
              "value": "dstCache"
            }
          ],
          "description": " is an array of pipeline cache handles, which will be merged into {#0#}. The previous contents of {#1#} are included after the merge."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Combine the data stores of pipeline caches"
    }
  },
  {
    "text": "VkResult vkCreateGraphicsPipelines",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateGraphicsPipelines",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the graphics pipelines."
        }
      },
      {
        "text": "VkPipelineCache pipelineCache",
        "type": "VkPipelineCache",
        "rawType": "VkPipelineCache",
        "name": "pipelineCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is either {#0#}, indicating that pipeline caching is disabled; or the handle of a valid <<pipelines-cache,pipeline cache>> object, in which case use of that cache is enabled for the duration of the command."
        }
      },
      {
        "text": "uint32_t createInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "createInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkGraphicsPipelineCreateInfo * pCreateInfos",
        "type": "VkGraphicsPipelineCreateInfo",
        "rawType": "const VkGraphicsPipelineCreateInfo *",
        "name": "pCreateInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "createInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkGraphicsPipelineCreateInfo"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkPipeline * pPipelines",
        "type": "VkPipeline",
        "rawType": "VkPipeline *",
        "name": "pPipelines",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "createInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipeline"
            }
          ],
          "description": " is an array of {#0#} handles in which the resulting graphics pipeline objects are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Create graphics pipelines"
    }
  },
  {
    "text": "VkResult vkCreateComputePipelines",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateComputePipelines",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the compute pipelines."
        }
      },
      {
        "text": "VkPipelineCache pipelineCache",
        "type": "VkPipelineCache",
        "rawType": "VkPipelineCache",
        "name": "pipelineCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is either {#0#}, indicating that pipeline caching is disabled; or the handle of a valid <<pipelines-cache,pipeline cache>> object, in which case use of that cache is enabled for the duration of the command."
        }
      },
      {
        "text": "uint32_t createInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "createInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkComputePipelineCreateInfo * pCreateInfos",
        "type": "VkComputePipelineCreateInfo",
        "rawType": "const VkComputePipelineCreateInfo *",
        "name": "pCreateInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "createInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkComputePipelineCreateInfo"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkPipeline * pPipelines",
        "type": "VkPipeline",
        "rawType": "VkPipeline *",
        "name": "pPipelines",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "createInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateGraphicsPipelines"
            },
            {
              "kind": "slink",
              "value": "VkPipeline"
            },
            {
              "kind": "pname",
              "value": "pPipelines"
            },
            {
              "kind": "pname",
              "value": "pCreateInfos"
            }
          ],
          "description": " is an array of {#1#} handles in which the resulting compute pipeline objects are returned.+[NOTE].editing-note====TODO (Jon) - Should we say something like \"`the i'th element of the{#2#} array is created based on the corresponding element of the{#3#} array`\"? Also for {#0#} below.===="
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Creates a new compute pipeline object"
    }
  },
  {
    "text": "void vkDestroyPipeline",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyPipeline",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the pipeline."
        }
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the pipeline to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Destroy a pipeline object"
    }
  },
  {
    "text": "VkResult vkCreatePipelineLayout",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreatePipelineLayout",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the pipeline layout."
        }
      },
      {
        "text": "const VkPipelineLayoutCreateInfo * pCreateInfo",
        "type": "VkPipelineLayoutCreateInfo",
        "rawType": "const VkPipelineLayoutCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineLayoutCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the state of the pipeline layout object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkPipelineLayout * pPipelineLayout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout *",
        "name": "pPipelineLayout",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineLayout"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting pipeline layout object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Creates a new pipeline layout object"
    }
  },
  {
    "text": "void vkDestroyPipelineLayout",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyPipelineLayout",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the pipeline layout."
        }
      },
      {
        "text": "VkPipelineLayout pipelineLayout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "pipelineLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the pipeline layout to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Destroy a pipeline layout object"
    }
  },
  {
    "text": "VkResult vkCreateSampler",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateSampler",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the sampler."
        }
      },
      {
        "text": "const VkSamplerCreateInfo * pCreateInfo",
        "type": "VkSamplerCreateInfo",
        "rawType": "const VkSamplerCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSamplerCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the state of the sampler object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkSampler * pSampler",
        "type": "VkSampler",
        "rawType": "VkSampler *",
        "name": "pSampler",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSampler"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting sampler object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Create a new sampler object"
    }
  },
  {
    "text": "void vkDestroySampler",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroySampler",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the sampler."
        }
      },
      {
        "text": "VkSampler sampler",
        "type": "VkSampler",
        "rawType": "VkSampler",
        "name": "sampler",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the sampler to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Destroy a sampler object"
    }
  },
  {
    "text": "VkResult vkCreateDescriptorSetLayout",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDescriptorSetLayout",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the descriptor set layout."
        }
      },
      {
        "text": "const VkDescriptorSetLayoutCreateInfo * pCreateInfo",
        "type": "VkDescriptorSetLayoutCreateInfo",
        "rawType": "const VkDescriptorSetLayoutCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSetLayoutCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the state of the descriptor set layout object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkDescriptorSetLayout * pSetLayout",
        "type": "VkDescriptorSetLayout",
        "rawType": "VkDescriptorSetLayout *",
        "name": "pSetLayout",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSetLayout"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting descriptor set layout object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Create a new descriptor set layout"
    }
  },
  {
    "text": "void vkDestroyDescriptorSetLayout",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyDescriptorSetLayout",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the descriptor set layout."
        }
      },
      {
        "text": "VkDescriptorSetLayout descriptorSetLayout",
        "type": "VkDescriptorSetLayout",
        "rawType": "VkDescriptorSetLayout",
        "name": "descriptorSetLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the descriptor set layout to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Destroy a descriptor set layout object"
    }
  },
  {
    "text": "VkResult vkCreateDescriptorPool",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDescriptorPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the descriptor pool."
        }
      },
      {
        "text": "const VkDescriptorPoolCreateInfo * pCreateInfo",
        "type": "VkDescriptorPoolCreateInfo",
        "rawType": "const VkDescriptorPoolCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorPoolCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the state of the descriptor pool object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkDescriptorPool * pDescriptorPool",
        "type": "VkDescriptorPool",
        "rawType": "VkDescriptorPool *",
        "name": "pDescriptorPool",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorPool"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting descriptor pool object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Creates a descriptor pool object"
    }
  },
  {
    "text": "void vkDestroyDescriptorPool",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyDescriptorPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the descriptor pool."
        }
      },
      {
        "text": "VkDescriptorPool descriptorPool",
        "type": "VkDescriptorPool",
        "rawType": "VkDescriptorPool",
        "name": "descriptorPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the descriptor pool to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Destroy a descriptor pool object"
    }
  },
  {
    "text": "VkResult vkResetDescriptorPool",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkResetDescriptorPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the descriptor pool."
        }
      },
      {
        "text": "VkDescriptorPool descriptorPool",
        "type": "VkDescriptorPool",
        "rawType": "VkDescriptorPool",
        "name": "descriptorPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the descriptor pool to be reset."
        }
      },
      {
        "text": "VkDescriptorPoolResetFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDescriptorPoolResetFlags",
        "bitmaskRawType": "VkDescriptorPoolResetFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Resets a descriptor pool object"
    }
  },
  {
    "text": "VkResult vkAllocateDescriptorSets",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAllocateDescriptorSets",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the descriptor pool."
        }
      },
      {
        "text": "const VkDescriptorSetAllocateInfo * pAllocateInfo",
        "type": "VkDescriptorSetAllocateInfo",
        "rawType": "const VkDescriptorSetAllocateInfo *",
        "name": "pAllocateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSetAllocateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure describing parameters of the allocation."
        }
      },
      {
        "text": "VkDescriptorSet * pDescriptorSets",
        "type": "VkDescriptorSet",
        "rawType": "VkDescriptorSet *",
        "name": "pDescriptorSets",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "isArray": true,
        "length": "pAllocateInfo::descriptorSetCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSet"
            }
          ],
          "description": " is an array of {#0#} handles in which the resulting descriptor set objects are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Allocate one or more descriptor sets"
    }
  },
  {
    "text": "VkResult vkFreeDescriptorSets",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkFreeDescriptorSets",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the descriptor pool."
        }
      },
      {
        "text": "VkDescriptorPool descriptorPool",
        "type": "VkDescriptorPool",
        "rawType": "VkDescriptorPool",
        "name": "descriptorPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the descriptor pool from which the descriptor sets were allocated."
        }
      },
      {
        "text": "uint32_t descriptorSetCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorSetCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDescriptorSets"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkDescriptorSet * pDescriptorSets",
        "type": "VkDescriptorSet",
        "rawType": "const VkDescriptorSet *",
        "name": "pDescriptorSets",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "isArray": true,
        "length": "descriptorSetCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSet"
            }
          ],
          "description": " is an array of handles to {#0#} objects."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Free one or more descriptor sets"
    }
  },
  {
    "text": "void vkUpdateDescriptorSets",
    "type": "void",
    "rawType": "void",
    "name": "vkUpdateDescriptorSets",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that updates the descriptor sets."
        }
      },
      {
        "text": "uint32_t descriptorWriteCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorWriteCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDescriptorWrites"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkWriteDescriptorSet * pDescriptorWrites",
        "type": "VkWriteDescriptorSet",
        "rawType": "const VkWriteDescriptorSet *",
        "name": "pDescriptorWrites",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "descriptorWriteCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkWriteDescriptorSet"
            }
          ],
          "description": " is an array of {#0#} structures describing the descriptor sets to write to."
        }
      },
      {
        "text": "uint32_t descriptorCopyCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorCopyCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDescriptorCopies"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkCopyDescriptorSet * pDescriptorCopies",
        "type": "VkCopyDescriptorSet",
        "rawType": "const VkCopyDescriptorSet *",
        "name": "pDescriptorCopies",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "descriptorCopyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCopyDescriptorSet"
            }
          ],
          "description": " is an array of {#0#} structures describing the descriptor sets to copy between."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Update the contents of a descriptor set object"
    }
  },
  {
    "text": "VkResult vkCreateFramebuffer",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateFramebuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the framebuffer."
        }
      },
      {
        "text": "const VkFramebufferCreateInfo * pCreateInfo",
        "type": "VkFramebufferCreateInfo",
        "rawType": "const VkFramebufferCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFramebufferCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure describing additional information about framebuffer creation."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkFramebuffer * pFramebuffer",
        "type": "VkFramebuffer",
        "rawType": "VkFramebuffer *",
        "name": "pFramebuffer",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFramebuffer"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting framebuffer object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Create a new framebuffer object"
    }
  },
  {
    "text": "void vkDestroyFramebuffer",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyFramebuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the framebuffer."
        }
      },
      {
        "text": "VkFramebuffer framebuffer",
        "type": "VkFramebuffer",
        "rawType": "VkFramebuffer",
        "name": "framebuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the framebuffer to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Destroy a framebuffer object"
    }
  },
  {
    "text": "VkResult vkCreateRenderPass",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateRenderPass",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the render pass."
        }
      },
      {
        "text": "const VkRenderPassCreateInfo * pCreateInfo",
        "type": "VkRenderPassCreateInfo",
        "rawType": "const VkRenderPassCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPassCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure describing the parameters of the render pass."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkRenderPass * pRenderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass *",
        "name": "pRenderPass",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPass"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting render pass object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Create a new render pass object"
    }
  },
  {
    "text": "void vkDestroyRenderPass",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyRenderPass",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the render pass."
        }
      },
      {
        "text": "VkRenderPass renderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass",
        "name": "renderPass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the render pass to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Destroy a render pass object"
    }
  },
  {
    "text": "void vkGetRenderAreaGranularity",
    "type": "void",
    "rawType": "void",
    "name": "vkGetRenderAreaGranularity",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the render pass."
        }
      },
      {
        "text": "VkRenderPass renderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass",
        "name": "renderPass",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a handle to a render pass."
        }
      },
      {
        "text": "VkExtent2D * pGranularity",
        "type": "VkExtent2D",
        "rawType": "VkExtent2D *",
        "name": "pGranularity",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExtent2D"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the granularity is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Returns the granularity for optimal render area"
    }
  },
  {
    "text": "VkResult vkCreateCommandPool",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateCommandPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the command pool."
        }
      },
      {
        "text": "const VkCommandPoolCreateInfo * pCreateInfo",
        "type": "VkCommandPoolCreateInfo",
        "rawType": "const VkCommandPoolCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCommandPoolCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the state of the command pool object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkCommandPool * pCommandPool",
        "type": "VkCommandPool",
        "rawType": "VkCommandPool *",
        "name": "pCommandPool",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCommandPool"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created pool is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Create a new command pool object"
    }
  },
  {
    "text": "void vkDestroyCommandPool",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyCommandPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the command pool."
        }
      },
      {
        "text": "VkCommandPool commandPool",
        "type": "VkCommandPool",
        "rawType": "VkCommandPool",
        "name": "commandPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the command pool to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Destroy a command pool object"
    }
  },
  {
    "text": "VkResult vkResetCommandPool",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkResetCommandPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the command pool."
        }
      },
      {
        "text": "VkCommandPool commandPool",
        "type": "VkCommandPool",
        "rawType": "VkCommandPool",
        "name": "commandPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command pool to reset."
        }
      },
      {
        "text": "VkCommandPoolResetFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCommandPoolResetFlagBits",
        "bitmaskRawType": "VkCommandPoolResetFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCommandPoolResetFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} controlling the reset operation."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Reset a command pool"
    }
  },
  {
    "text": "VkResult vkAllocateCommandBuffers",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAllocateCommandBuffers",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the command pool."
        }
      },
      {
        "text": "const VkCommandBufferAllocateInfo * pAllocateInfo",
        "type": "VkCommandBufferAllocateInfo",
        "rawType": "const VkCommandBufferAllocateInfo *",
        "name": "pAllocateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkCommandBufferAllocateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure describing parameters of the allocation."
        }
      },
      {
        "text": "VkCommandBuffer * pCommandBuffers",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer *",
        "name": "pCommandBuffers",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "isArray": true,
        "length": "pAllocateInfo::commandBufferCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkCommandBuffer"
            },
            {
              "kind": "pname",
              "value": "commandBufferCount"
            },
            {
              "kind": "pname",
              "value": "pAllocateInfo"
            }
          ],
          "description": " is an array of {#1#} handles in which the resulting command buffer objects are returned. The array {#0#} be at least the length specified by the {#2#} member of {#3#}. Each allocated command buffer begins in the initial state."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Allocate command buffers from an existing command pool"
    }
  },
  {
    "text": "void vkFreeCommandBuffers",
    "type": "void",
    "rawType": "void",
    "name": "vkFreeCommandBuffers",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the command pool."
        }
      },
      {
        "text": "VkCommandPool commandPool",
        "type": "VkCommandPool",
        "rawType": "VkCommandPool",
        "name": "commandPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command pool from which the command buffers were allocated."
        }
      },
      {
        "text": "uint32_t commandBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "commandBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkCommandBuffer * pCommandBuffers",
        "type": "VkCommandBuffer",
        "rawType": "const VkCommandBuffer *",
        "name": "pCommandBuffers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "isArray": true,
        "length": "commandBufferCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of handles of command buffers to free."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Free command buffers"
    }
  },
  {
    "text": "VkResult vkBeginCommandBuffer",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkBeginCommandBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the command buffer which is to be put in the recording state."
        }
      },
      {
        "text": "const VkCommandBufferBeginInfo * pBeginInfo",
        "type": "VkCommandBufferBeginInfo",
        "rawType": "const VkCommandBufferBeginInfo *",
        "name": "pBeginInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCommandBufferBeginInfo"
            }
          ],
          "description": " reference to a {#0#} structure defining additional information about how the command buffer begins recording."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Start recording a command buffer"
    }
  },
  {
    "text": "VkResult vkEndCommandBuffer",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEndCommandBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer to complete recording."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Finish recording a command buffer"
    }
  },
  {
    "text": "VkResult vkResetCommandBuffer",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkResetCommandBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the command buffer to reset. The command buffer {#0#} be in any state other than <<commandbuffers-lifecycle, pending>>, and is moved into the <<commandbuffers-lifecycle, initial state>>."
        }
      },
      {
        "text": "VkCommandBufferResetFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCommandBufferResetFlagBits",
        "bitmaskRawType": "VkCommandBufferResetFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCommandBufferResetFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} controlling the reset operation."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Reset a command buffer to the initial state"
    }
  },
  {
    "text": "void vkCmdBindPipeline",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBindPipeline",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer that the pipeline will be bound to."
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineBindPoint"
            }
          ],
          "description": " is a {#0#} value specifying whether to bind to the compute or graphics bind point. Binding one does not disturb the other."
        }
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the pipeline to be bound."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Pipelines",
      "description": "Bind a pipeline object to a command buffer"
    }
  },
  {
    "text": "void vkCmdSetViewport",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetViewport",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t firstViewport",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstViewport",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first viewport whose parameters are updated by the command."
        }
      },
      {
        "text": "uint32_t viewportCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of viewports whose parameters are updated by the command."
        }
      },
      {
        "text": "const VkViewport * pViewports",
        "type": "VkViewport",
        "rawType": "const VkViewport *",
        "name": "pViewports",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "viewportCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkViewport"
            }
          ],
          "description": " is an array of {#0#} structures specifying viewport parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Set the viewport on a command buffer"
    }
  },
  {
    "text": "void vkCmdSetScissor",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetScissor",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t firstScissor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstScissor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first scissor whose state is updated by the command."
        }
      },
      {
        "text": "uint32_t scissorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "scissorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of scissors whose rectangles are updated by the command."
        }
      },
      {
        "text": "const VkRect2D * pScissors",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pScissors",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "scissorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRect2D"
            }
          ],
          "description": " is an array of {#0#} structures defining scissor rectangles."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Set the dynamic scissor rectangles on a command buffer"
    }
  },
  {
    "text": "void vkCmdSetLineWidth",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetLineWidth",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "float lineWidth",
        "type": "float",
        "rawType": "float",
        "name": "lineWidth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the width of rasterized line segments."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Set the dynamic line width state"
    }
  },
  {
    "text": "void vkCmdSetDepthBias",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetDepthBias",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "float depthBiasConstantFactor",
        "type": "float",
        "rawType": "float",
        "name": "depthBiasConstantFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a scalar factor controlling the constant depth value added to each fragment."
        }
      },
      {
        "text": "float depthBiasClamp",
        "type": "float",
        "rawType": "float",
        "name": "depthBiasClamp",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the maximum (or minimum) depth bias of a fragment."
        }
      },
      {
        "text": "float depthBiasSlopeFactor",
        "type": "float",
        "rawType": "float",
        "name": "depthBiasSlopeFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a scalar factor applied to a fragment's slope in depth bias calculations."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Set the depth bias dynamic state"
    }
  },
  {
    "text": "void vkCmdSetBlendConstants",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetBlendConstants",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "const float blendConstants [4]",
        "type": "float",
        "rawType": "const float [4]",
        "name": "blendConstants",
        "isConstant": true,
        "dereferenceCount": 0,
        "isArray": true,
        "length": "4",
        "isStaticArray": true,
        "isNumericArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of four values specifying the R, G, B, and A components of the blend constant color used in blending, depending on the <<framebuffer-blendfactors,blend factor>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "The Framebuffer",
      "description": "Set the values of blend constants"
    }
  },
  {
    "text": "void vkCmdSetDepthBounds",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetDepthBounds",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "float minDepthBounds",
        "type": "float",
        "rawType": "float",
        "name": "minDepthBounds",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the lower bound of the range of depth values used in the depth bounds test."
        }
      },
      {
        "text": "float maxDepthBounds",
        "type": "float",
        "rawType": "float",
        "name": "maxDepthBounds",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the upper bound of the range."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Set the depth bounds test values for a command buffer"
    }
  },
  {
    "text": "void vkCmdSetStencilCompareMask",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetStencilCompareMask",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkStencilFaceFlags faceMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "faceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkStencilFaceFlagBits",
        "bitmaskRawType": "VkStencilFaceFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkStencilFaceFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the set of stencil state for which to update the compare mask."
        }
      },
      {
        "text": "uint32_t compareMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "compareMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the new value to use as the stencil compare mask."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Set the stencil compare mask dynamic state"
    }
  },
  {
    "text": "void vkCmdSetStencilWriteMask",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetStencilWriteMask",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkStencilFaceFlags faceMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "faceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkStencilFaceFlagBits",
        "bitmaskRawType": "VkStencilFaceFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdSetStencilCompareMask"
            },
            {
              "kind": "elink",
              "value": "VkStencilFaceFlagBits"
            }
          ],
          "description": " is a bitmask of {#1#} specifying the set of stencil state for which to update the write mask, as described above for {#0#}."
        }
      },
      {
        "text": "uint32_t writeMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "writeMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the new value to use as the stencil write mask."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Set the stencil write mask dynamic state"
    }
  },
  {
    "text": "void vkCmdSetStencilReference",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetStencilReference",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkStencilFaceFlags faceMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "faceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkStencilFaceFlagBits",
        "bitmaskRawType": "VkStencilFaceFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdSetStencilCompareMask"
            },
            {
              "kind": "elink",
              "value": "VkStencilFaceFlagBits"
            }
          ],
          "description": " is a bitmask of {#1#} specifying the set of stencil state for which to update the reference value, as described above for {#0#}."
        }
      },
      {
        "text": "uint32_t reference",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "reference",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the new value to use as the stencil reference value."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Set the stencil reference dynamic state"
    }
  },
  {
    "text": "void vkCmdBindDescriptorSets",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBindDescriptorSets",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer that the descriptor sets will be bound to."
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineBindPoint"
            }
          ],
          "description": " is a {#0#} indicating whether the descriptors will be used by graphics pipelines or compute pipelines. There is a separate set of bind reference for each of graphics and compute, so binding one does not disturb the other."
        }
      },
      {
        "text": "VkPipelineLayout layout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineLayout"
            }
          ],
          "description": " is a {#0#} object used to program the bindings."
        }
      },
      {
        "text": "uint32_t firstSet",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstSet",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the set number of the first descriptor set to be bound."
        }
      },
      {
        "text": "uint32_t descriptorSetCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorSetCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDescriptorSets"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkDescriptorSet * pDescriptorSets",
        "type": "VkDescriptorSet",
        "rawType": "const VkDescriptorSet *",
        "name": "pDescriptorSets",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "isArray": true,
        "length": "descriptorSetCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSet"
            }
          ],
          "description": " is an array of handles to {#0#} objects describing the descriptor sets to write to."
        }
      },
      {
        "text": "uint32_t dynamicOffsetCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "dynamicOffsetCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDynamicOffsets"
            }
          ],
          "description": " is the number of dynamic offsets in the {#0#} array."
        }
      },
      {
        "text": "const uint32_t * pDynamicOffsets",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pDynamicOffsets",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dynamicOffsetCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "uint32_t"
            }
          ],
          "description": " is an array of {#0#} values specifying dynamic offsets."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Binds descriptor sets to a command buffer"
    }
  },
  {
    "text": "void vkCmdBindIndexBuffer",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBindIndexBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " used in index buffer address calculations."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkIndexType indexType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "indexType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkIndexType",
        "enumRawType": "VkIndexType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkIndexType"
            }
          ],
          "description": " is a {#0#} value specifying whether indices are treated as 16 bits or 32 bits."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Bind an index buffer to a command buffer"
    }
  },
  {
    "text": "void vkCmdBindVertexBuffers",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBindVertexBuffers",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t firstBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first vertex input binding whose state is updated by the command."
        }
      },
      {
        "text": "uint32_t bindingCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindingCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of vertex input bindings whose state is updated by the command."
        }
      },
      {
        "text": "const VkBuffer * pBuffers",
        "type": "VkBuffer",
        "rawType": "const VkBuffer *",
        "name": "pBuffers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "bindingCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of buffer handles."
        }
      },
      {
        "text": "const VkDeviceSize * pOffsets",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pOffsets",
        "isConstant": true,
        "dereferenceCount": 1,
        "baseType": "VkDeviceSize",
        "isArray": true,
        "length": "bindingCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of buffer offsets."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Processing",
      "description": "Bind vertex buffers to a command buffer"
    }
  },
  {
    "text": "void vkCmdDraw",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDraw",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t vertexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of vertices to draw."
        }
      },
      {
        "text": "uint32_t instanceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "instanceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of instances to draw."
        }
      },
      {
        "text": "uint32_t firstVertex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstVertex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first vertex to draw."
        }
      },
      {
        "text": "uint32_t firstInstance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstInstance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance ID of the first instance to draw."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Draw primitives"
    }
  },
  {
    "text": "void vkCmdDrawIndexed",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawIndexed",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t indexCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "indexCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of vertices to draw."
        }
      },
      {
        "text": "uint32_t instanceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "instanceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of instances to draw."
        }
      },
      {
        "text": "uint32_t firstIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the base index within the index buffer."
        }
      },
      {
        "text": "int32_t vertexOffset",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "vertexOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the value added to the vertex index before indexing into the vertex buffer."
        }
      },
      {
        "text": "uint32_t firstInstance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstInstance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance ID of the first instance to draw."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Issue an indexed draw into a command buffer"
    }
  },
  {
    "text": "void vkCmdDrawIndirect",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawIndirect",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where parameters begin."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t drawCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drawCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the number of draws to execute, and {#0#} be zero."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the byte stride between successive sets of draw parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Issue an indirect draw into a command buffer"
    }
  },
  {
    "text": "void vkCmdDrawIndexedIndirect",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawIndexedIndirect",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where parameters begin."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t drawCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drawCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the number of draws to execute, and {#0#} be zero."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the byte stride between successive sets of draw parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Perform an indexed indirect draw"
    }
  },
  {
    "text": "void vkCmdDispatch",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDispatch",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t groupCountX",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCountX",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the X dimension."
        }
      },
      {
        "text": "uint32_t groupCountY",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCountY",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the Y dimension."
        }
      },
      {
        "text": "uint32_t groupCountZ",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCountZ",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the Z dimension."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Dispatching Commands",
      "description": "Dispatch compute work items"
    }
  },
  {
    "text": "void vkCmdDispatchIndirect",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDispatchIndirect",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where parameters begin."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Dispatching Commands",
      "description": "Dispatch compute work items using indirect parameters"
    }
  },
  {
    "text": "void vkCmdCopyBuffer",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdCopyBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkBuffer srcBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "srcBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the source buffer."
        }
      },
      {
        "text": "VkBuffer dstBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "dstBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the destination buffer."
        }
      },
      {
        "text": "uint32_t regionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "regionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of regions to copy."
        }
      },
      {
        "text": "const VkBufferCopy * pRegions",
        "type": "VkBufferCopy",
        "rawType": "const VkBufferCopy *",
        "name": "pRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "regionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBufferCopy"
            }
          ],
          "description": " is an array of {#0#} structures specifying the regions to copy."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Copy data between buffer regions"
    }
  },
  {
    "text": "void vkCmdCopyImage",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdCopyImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkImage srcImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "srcImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the source image."
        }
      },
      {
        "text": "VkImageLayout srcImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the current layout of the source image subresource."
        }
      },
      {
        "text": "VkImage dstImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "dstImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the destination image."
        }
      },
      {
        "text": "VkImageLayout dstImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the current layout of the destination image subresource."
        }
      },
      {
        "text": "uint32_t regionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "regionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of regions to copy."
        }
      },
      {
        "text": "const VkImageCopy * pRegions",
        "type": "VkImageCopy",
        "rawType": "const VkImageCopy *",
        "name": "pRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "regionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCopy"
            }
          ],
          "description": " is an array of {#0#} structures specifying the regions to copy."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Copy data between images"
    }
  },
  {
    "text": "void vkCmdBlitImage",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBlitImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkImage srcImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "srcImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the source image."
        }
      },
      {
        "text": "VkImageLayout srcImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the layout of the source image subresources for the blit."
        }
      },
      {
        "text": "VkImage dstImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "dstImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the destination image."
        }
      },
      {
        "text": "VkImageLayout dstImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the layout of the destination image subresources for the blit."
        }
      },
      {
        "text": "uint32_t regionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "regionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of regions to blit."
        }
      },
      {
        "text": "const VkImageBlit * pRegions",
        "type": "VkImageBlit",
        "rawType": "const VkImageBlit *",
        "name": "pRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "regionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageBlit"
            }
          ],
          "description": " is an array of {#0#} structures specifying the regions to blit."
        }
      },
      {
        "text": "VkFilter filter",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "filter",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFilter",
        "enumRawType": "VkFilter",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkFilter"
            }
          ],
          "description": " is a {#0#} specifying the filter to apply if the blits require scaling."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Copy regions of an image, potentially performing format conversion,"
    }
  },
  {
    "text": "void vkCmdCopyBufferToImage",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdCopyBufferToImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkBuffer srcBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "srcBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the source buffer."
        }
      },
      {
        "text": "VkImage dstImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "dstImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the destination image."
        }
      },
      {
        "text": "VkImageLayout dstImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the layout of the destination image subresources for the copy."
        }
      },
      {
        "text": "uint32_t regionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "regionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of regions to copy."
        }
      },
      {
        "text": "const VkBufferImageCopy * pRegions",
        "type": "VkBufferImageCopy",
        "rawType": "const VkBufferImageCopy *",
        "name": "pRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "regionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBufferImageCopy"
            }
          ],
          "description": " is an array of {#0#} structures specifying the regions to copy."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Copy data from a buffer into an image"
    }
  },
  {
    "text": "void vkCmdCopyImageToBuffer",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdCopyImageToBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkImage srcImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "srcImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the source image."
        }
      },
      {
        "text": "VkImageLayout srcImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the layout of the source image subresources for the copy."
        }
      },
      {
        "text": "VkBuffer dstBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "dstBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the destination buffer."
        }
      },
      {
        "text": "uint32_t regionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "regionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of regions to copy."
        }
      },
      {
        "text": "const VkBufferImageCopy * pRegions",
        "type": "VkBufferImageCopy",
        "rawType": "const VkBufferImageCopy *",
        "name": "pRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "regionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBufferImageCopy"
            }
          ],
          "description": " is an array of {#0#} structures specifying the regions to copy."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Copy image data into a buffer"
    }
  },
  {
    "text": "void vkCmdUpdateBuffer",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdUpdateBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkBuffer dstBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "dstBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a handle to the buffer to be updated."
        }
      },
      {
        "text": "VkDeviceSize dstOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "dstOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is the byte offset into the buffer to start updating, and {#0#} be a multiple of 4."
        }
      },
      {
        "text": "VkDeviceSize dataSize",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "dataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is the number of bytes to update, and {#0#} be a multiple of 4."
        }
      },
      {
        "text": "const void * pData",
        "type": "void",
        "rawType": "const void *",
        "name": "pData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "dataSize"
            }
          ],
          "description": " is a reference to the source data for the buffer update, and {#0#} be at least {#1#} bytes in size."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Update a buffer\\"
    }
  },
  {
    "text": "void vkCmdFillBuffer",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdFillBuffer",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkBuffer dstBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "dstBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer to be filled."
        }
      },
      {
        "text": "VkDeviceSize dstOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "dstOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is the byte offset into the buffer at which to start filling, and {#0#} be a multiple of 4."
        }
      },
      {
        "text": "VkDeviceSize size",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "pname",
              "value": "offset"
            }
          ],
          "description": " is the number of bytes to fill, and {#0#} be either a multiple of 4, or {#1#} to fill the range from {#3#} to the end of the buffer. If {#2#} is used and the remaining size of the buffer is not a multiple of 4, then the nearest smaller multiple is used."
        }
      },
      {
        "text": "uint32_t data",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "data",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "size"
            }
          ],
          "description": " is the 4-byte word written repeatedly to the buffer to fill {#0#} bytes of data. The data word is written to memory according to the host endianness."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Fill a region of a buffer with a fixed value"
    }
  },
  {
    "text": "void vkCmdClearColorImage",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdClearColorImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image to be cleared."
        }
      },
      {
        "text": "VkImageLayout imageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR"
            }
          ],
          "description": " specifies the current layout of the image subresource ranges to be cleared, and {#0#} be {#1#},"
        }
      },
      {
        "text": "const VkClearColorValue * pColor",
        "type": "VkClearColorValue",
        "rawType": "const VkClearColorValue *",
        "name": "pColor",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t rangeCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "rangeCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkImageSubresourceRange * pRanges",
        "type": "VkImageSubresourceRange",
        "rawType": "const VkImageSubresourceRange *",
        "name": "pRanges",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "rangeCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Clear regions of a color image"
    }
  },
  {
    "text": "void vkCmdClearDepthStencilImage",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdClearDepthStencilImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the image to be cleared."
        }
      },
      {
        "text": "VkImageLayout imageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_LAYOUT_GENERAL"
            },
            {
              "kind": "ename",
              "value": "VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL"
            }
          ],
          "description": " specifies the current layout of the image subresource ranges to be cleared, and {#0#} be {#1#} or {#2#}."
        }
      },
      {
        "text": "const VkClearDepthStencilValue * pDepthStencil",
        "type": "VkClearDepthStencilValue",
        "rawType": "const VkClearDepthStencilValue *",
        "name": "pDepthStencil",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkClearDepthStencilValue"
            }
          ],
          "description": " is a reference to a {#0#} structure containing the values that the depth and stencil image subresource ranges will be cleared to (see <<clears-values>> below)."
        }
      },
      {
        "text": "uint32_t rangeCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "rangeCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pRanges"
            }
          ],
          "description": " is the number of image subresource range structures in {#0#}."
        }
      },
      {
        "text": "const VkImageSubresourceRange * pRanges",
        "type": "VkImageSubresourceRange",
        "rawType": "const VkImageSubresourceRange *",
        "name": "pRanges",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "rangeCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageSubresourceRange"
            }
          ],
          "description": " is an array of {#0#} structures describing a range of mipmap levels, array layers, and aspects to be cleared, as described in <<resources-image-views,Image Views>>."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Fill regions of a combined depth/stencil image"
    }
  },
  {
    "text": "void vkCmdClearAttachments",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdClearAttachments",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t attachmentCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "attachmentCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkClearAttachment * pAttachments",
        "type": "VkClearAttachment",
        "rawType": "const VkClearAttachment *",
        "name": "pAttachments",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "attachmentCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkClearAttachment"
            },
            {
              "kind": "ename",
              "value": "VK_ATTACHMENT_UNUSED"
            }
          ],
          "description": " is an array of {#0#} structures defining the attachments to clear and the clear values to use. If any attachment to be cleared in the current subpass is {#1#}, then the clear has no effect on that attachment."
        }
      },
      {
        "text": "uint32_t rectCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "rectCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkClearRect * pRects",
        "type": "VkClearRect",
        "rawType": "const VkClearRect *",
        "name": "pRects",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "rectCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkClearRect"
            }
          ],
          "description": " is an array of {#0#} structures defining regions within each selected attachment to clear."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Clear Commands",
      "description": "Clear regions within bound framebuffer attachments"
    }
  },
  {
    "text": "void vkCmdResolveImage",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdResolveImage",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkImage srcImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "srcImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the source image."
        }
      },
      {
        "text": "VkImageLayout srcImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the layout of the source image subresources for the resolve."
        }
      },
      {
        "text": "VkImage dstImage",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "dstImage",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the destination image."
        }
      },
      {
        "text": "VkImageLayout dstImageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstImageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the layout of the destination image subresources for the resolve."
        }
      },
      {
        "text": "uint32_t regionCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "regionCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of regions to resolve."
        }
      },
      {
        "text": "const VkImageResolve * pRegions",
        "type": "VkImageResolve",
        "rawType": "const VkImageResolve *",
        "name": "pRegions",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "regionCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageResolve"
            }
          ],
          "description": " is an array of {#0#} structures specifying the regions to resolve."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Copy Commands",
      "description": "Resolve regions of an image"
    }
  },
  {
    "text": "void vkCmdSetEvent",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetEvent",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkEvent event",
        "type": "VkEvent",
        "rawType": "VkEvent",
        "name": "event",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the event that will be signaled."
        }
      },
      {
        "text": "VkPipelineStageFlags stageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "event"
            }
          ],
          "description": " specifies the <<synchronization-pipeline-stages,source stage mask>> used to determine when the {#0#} is signaled."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Set an event object to signaled state"
    }
  },
  {
    "text": "void vkCmdResetEvent",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdResetEvent",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkEvent event",
        "type": "VkEvent",
        "rawType": "VkEvent",
        "name": "event",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the event that will be unsignaled."
        }
      },
      {
        "text": "VkPipelineStageFlags stageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            },
            {
              "kind": "pname",
              "value": "event"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages, source stage mask>> used to determine when the {#1#} is unsignaled."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Reset an event object to non-signaled state"
    }
  },
  {
    "text": "void vkCmdWaitEvents",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdWaitEvents",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t eventCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "eventCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkEvent * pEvents",
        "type": "VkEvent",
        "rawType": "const VkEvent *",
        "name": "pEvents",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "eventCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of event object handles to wait on."
        }
      },
      {
        "text": "VkPipelineStageFlags srcStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages, source stage mask>>."
        }
      },
      {
        "text": "VkPipelineStageFlags dstStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages, destination stage mask>>."
        }
      },
      {
        "text": "uint32_t memoryBarrierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryBarrierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkMemoryBarrier * pMemoryBarriers",
        "type": "VkMemoryBarrier",
        "rawType": "const VkMemoryBarrier *",
        "name": "pMemoryBarriers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "memoryBarrierCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryBarrier"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "uint32_t bufferMemoryBarrierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferMemoryBarrierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pBufferMemoryBarriers"
            }
          ],
          "description": " is the length of the {#0#} array."
        }
      },
      {
        "text": "const VkBufferMemoryBarrier * pBufferMemoryBarriers",
        "type": "VkBufferMemoryBarrier",
        "rawType": "const VkBufferMemoryBarrier *",
        "name": "pBufferMemoryBarriers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bufferMemoryBarrierCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBufferMemoryBarrier"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "uint32_t imageMemoryBarrierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageMemoryBarrierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pImageMemoryBarriers"
            }
          ],
          "description": " is the length of the {#0#} array."
        }
      },
      {
        "text": "const VkImageMemoryBarrier * pImageMemoryBarriers",
        "type": "VkImageMemoryBarrier",
        "rawType": "const VkImageMemoryBarrier *",
        "name": "pImageMemoryBarriers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "imageMemoryBarrierCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageMemoryBarrier"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Wait for one or more events and insert a set of memory"
    }
  },
  {
    "text": "void vkCmdPipelineBarrier",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdPipelineBarrier",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkPipelineStageFlags srcStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "srcStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages-masks, source stage mask>>."
        }
      },
      {
        "text": "VkPipelineStageFlags dstStageMask",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dstStageMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the <<synchronization-pipeline-stages-masks, destination stage mask>>."
        }
      },
      {
        "text": "VkDependencyFlags dependencyFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "dependencyFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDependencyFlagBits",
        "bitmaskRawType": "VkDependencyFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDependencyFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying how execution and memory dependencies are formed."
        }
      },
      {
        "text": "uint32_t memoryBarrierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "memoryBarrierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkMemoryBarrier * pMemoryBarriers",
        "type": "VkMemoryBarrier",
        "rawType": "const VkMemoryBarrier *",
        "name": "pMemoryBarriers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "memoryBarrierCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryBarrier"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "uint32_t bufferMemoryBarrierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bufferMemoryBarrierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pBufferMemoryBarriers"
            }
          ],
          "description": " is the length of the {#0#} array."
        }
      },
      {
        "text": "const VkBufferMemoryBarrier * pBufferMemoryBarriers",
        "type": "VkBufferMemoryBarrier",
        "rawType": "const VkBufferMemoryBarrier *",
        "name": "pBufferMemoryBarriers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bufferMemoryBarrierCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBufferMemoryBarrier"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "uint32_t imageMemoryBarrierCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "imageMemoryBarrierCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pImageMemoryBarriers"
            }
          ],
          "description": " is the length of the {#0#} array."
        }
      },
      {
        "text": "const VkImageMemoryBarrier * pImageMemoryBarriers",
        "type": "VkImageMemoryBarrier",
        "rawType": "const VkImageMemoryBarrier *",
        "name": "pImageMemoryBarriers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "imageMemoryBarrierCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageMemoryBarrier"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Insert a memory dependency"
    }
  },
  {
    "text": "void vkCmdBeginQuery",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBeginQuery",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool that will manage the results of the query."
        }
      },
      {
        "text": "uint32_t query",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "query",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query index within the query pool that will contain the results."
        }
      },
      {
        "text": "VkQueryControlFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryControlFlagBits",
        "bitmaskRawType": "VkQueryControlFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "elink",
              "value": "VkQueryControlFlagBits"
            }
          ],
          "description": " is a bitmask of {#1#} specifying constraints on the types of queries that {#0#} be performed."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Begin a query"
    }
  },
  {
    "text": "void vkCmdEndQuery",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdEndQuery",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool that is managing the results of the query."
        }
      },
      {
        "text": "uint32_t query",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "query",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query index within the query pool where the result is stored."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Ends a query"
    }
  },
  {
    "text": "void vkCmdBeginConditionalRenderingEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBeginConditionalRenderingEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      },
      {
        "text": "const VkConditionalRenderingBeginInfoEXT * pConditionalRenderingBegin",
        "type": "VkConditionalRenderingBeginInfoEXT",
        "rawType": "const VkConditionalRenderingBeginInfoEXT *",
        "name": "pConditionalRenderingBegin",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkConditionalRenderingBeginInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters of conditional rendering."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Define the beginning of a conditional rendering block"
    }
  },
  {
    "text": "void vkCmdEndConditionalRenderingEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdEndConditionalRenderingEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Define the end of a conditional rendering block"
    }
  },
  {
    "text": "void vkCmdResetQueryPool",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdResetQueryPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the query pool managing the queries being reset."
        }
      },
      {
        "text": "uint32_t firstQuery",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstQuery",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the initial query index to reset."
        }
      },
      {
        "text": "uint32_t queryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of queries to reset."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Reset queries in a query pool"
    }
  },
  {
    "text": "void vkCmdWriteTimestamp",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdWriteTimestamp",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkPipelineStageFlagBits pipelineStage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineStage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is one of the {#0#}, specifying a stage of the pipeline."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool that will manage the timestamp."
        }
      },
      {
        "text": "uint32_t query",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "query",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query within the query pool that will contain the timestamp."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Write a device timestamp into a query object"
    }
  },
  {
    "text": "void vkCmdCopyQueryPoolResults",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdCopyQueryPoolResults",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool managing the queries containing the desired results."
        }
      },
      {
        "text": "uint32_t firstQuery",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstQuery",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the initial query index."
        }
      },
      {
        "text": "uint32_t queryCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queryCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "firstQuery"
            },
            {
              "kind": "pname",
              "value": "queryCount"
            }
          ],
          "description": " is the number of queries. {#0#} and {#1#} together define a range of queries."
        }
      },
      {
        "text": "VkBuffer dstBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "dstBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBuffer"
            }
          ],
          "description": " is a {#0#} object that will receive the results of the copy command."
        }
      },
      {
        "text": "VkDeviceSize dstOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "dstOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkDeviceSize stride",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkGetQueryPoolResults"
            },
            {
              "kind": "pname",
              "value": "dstBuffer"
            },
            {
              "kind": "pname",
              "value": "dstBuffer"
            }
          ],
          "description": " is the stride in bytes between results for individual queries within {#1#}. The required size of the backing memory for {#2#} is determined as described above for {#0#}."
        }
      },
      {
        "text": "VkQueryResultFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryResultFlagBits",
        "bitmaskRawType": "VkQueryResultFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkQueryResultFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying how and when results are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Copy the results of queries in a query pool to a buffer object"
    }
  },
  {
    "text": "void vkCmdPushConstants",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdPushConstants",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer in which the push constant update will be recorded."
        }
      },
      {
        "text": "VkPipelineLayout layout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the pipeline layout used to program the push constant updates."
        }
      },
      {
        "text": "VkShaderStageFlags stageFlags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "stageFlags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkShaderStageFlagBits"
            }
          ],
          "description": " is a bitmask of {#0#} specifying the shader stages that will use the push constants in the updated range."
        }
      },
      {
        "text": "uint32_t offset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the start offset of the push constant range to update, in units of bytes."
        }
      },
      {
        "text": "uint32_t size",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " bytes containing the new push constant values."
        }
      },
      {
        "text": "const void * pValues",
        "type": "void",
        "rawType": "const void *",
        "name": "pValues",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "size",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Update the values of push constants"
    }
  },
  {
    "text": "void vkCmdBeginRenderPass",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBeginRenderPass",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer in which to record the command."
        }
      },
      {
        "text": "const VkRenderPassBeginInfo * pRenderPassBegin",
        "type": "VkRenderPassBeginInfo",
        "rawType": "const VkRenderPassBeginInfo *",
        "name": "pRenderPassBegin",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPassBeginInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the render pass to begin an instance of, and the framebuffer the instance uses."
        }
      },
      {
        "text": "VkSubpassContents contents",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "contents",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSubpassContents",
        "enumRawType": "VkSubpassContents",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkSubpassContents"
            }
          ],
          "description": " is a {#0#} value specifying how the commands in the first subpass will be provided."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Begin a new render pass"
    }
  },
  {
    "text": "void vkCmdNextSubpass",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdNextSubpass",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer in which to record the command."
        }
      },
      {
        "text": "VkSubpassContents contents",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "contents",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSubpassContents",
        "enumRawType": "VkSubpassContents",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdBeginRenderPass"
            }
          ],
          "description": " specifies how the commands in the next subpass will be provided, in the same fashion as the corresponding parameter of {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Transition to the next subpass of a render pass"
    }
  },
  {
    "text": "void vkCmdEndRenderPass",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdEndRenderPass",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer in which to end the current render pass instance."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "End the current render pass"
    }
  },
  {
    "text": "void vkCmdExecuteCommands",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdExecuteCommands",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a handle to a primary command buffer that the secondary command buffers are executed in."
        }
      },
      {
        "text": "uint32_t commandBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "commandBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkCommandBuffer * pCommandBuffers",
        "type": "VkCommandBuffer",
        "rawType": "const VkCommandBuffer *",
        "name": "pCommandBuffers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "isArray": true,
        "length": "commandBufferCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "commandBufferCount"
            }
          ],
          "description": " is an array of {#0#} secondary command buffer handles, which are recorded to execute in the primary command buffer in the order they are listed in the array."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Execute a secondary command buffer from a primary command buffer"
    }
  },
  {
    "text": "VkResult vkCreateAndroidSurfaceKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateAndroidSurfaceKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate the surface with."
        }
      },
      {
        "text": "const VkAndroidSurfaceCreateInfoKHR * pCreateInfo",
        "type": "VkAndroidSurfaceCreateInfoKHR",
        "rawType": "const VkAndroidSurfaceCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkAndroidSurfaceCreateInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_android_surface",
      "description": "Create a {#0#} object for an Android native window"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceDisplayPropertiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceDisplayPropertiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a physical device."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of display devices available or queried, as described below."
        }
      },
      {
        "text": "VkDisplayPropertiesKHR * pProperties",
        "type": "VkDisplayPropertiesKHR",
        "rawType": "VkDisplayPropertiesKHR *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayPropertiesKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query information about the available displays"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceDisplayPlanePropertiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceDisplayPlanePropertiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a physical device."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of display planes available or queried, as described below."
        }
      },
      {
        "text": "VkDisplayPlanePropertiesKHR * pProperties",
        "type": "VkDisplayPlanePropertiesKHR",
        "rawType": "VkDisplayPlanePropertiesKHR *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayPlanePropertiesKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query the plane properties"
    }
  },
  {
    "text": "VkResult vkGetDisplayPlaneSupportedDisplaysKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDisplayPlaneSupportedDisplaysKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a physical device."
        }
      },
      {
        "text": "uint32_t planeIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "planeIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is the plane which the application wishes to use, and {#0#} be in the range [eq]#[0, physical device plane count - 1]#."
        }
      },
      {
        "text": "uint32_t * pDisplayCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pDisplayCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of displays available or queried, as described below."
        }
      },
      {
        "text": "VkDisplayKHR * pDisplays",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR *",
        "name": "pDisplays",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": null,
        "isArray": true,
        "length": "pDisplayCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} handles."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query the list of displays a plane supports"
    }
  },
  {
    "text": "VkResult vkGetDisplayModePropertiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDisplayModePropertiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "display"
            }
          ],
          "description": " is the physical device associated with {#0#}."
        }
      },
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the display to query."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of display modes available or queried, as described below."
        }
      },
      {
        "text": "VkDisplayModePropertiesKHR * pProperties",
        "type": "VkDisplayModePropertiesKHR",
        "rawType": "VkDisplayModePropertiesKHR *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayModePropertiesKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query the set of mode properties supported by the display"
    }
  },
  {
    "text": "VkResult vkCreateDisplayModeKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDisplayModeKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "display"
            }
          ],
          "description": " is the physical device associated with {#0#}."
        }
      },
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the display to create an additional mode for."
        }
      },
      {
        "text": "const VkDisplayModeCreateInfoKHR * pCreateInfo",
        "type": "VkDisplayModeCreateInfoKHR",
        "rawType": "const VkDisplayModeCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayModeCreateInfoKHR"
            }
          ],
          "description": " is a {#0#} structure describing the new mode to create."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the display mode object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkDisplayModeKHR * pMode",
        "type": "VkDisplayModeKHR",
        "rawType": "VkDisplayModeKHR *",
        "name": "pMode",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice,VkDisplayKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " returns the handle of the mode created."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Create a display mode"
    }
  },
  {
    "text": "VkResult vkGetDisplayPlaneCapabilitiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDisplayPlaneCapabilitiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "display"
            }
          ],
          "description": " is the physical device associated with {#0#}"
        }
      },
      {
        "text": "VkDisplayModeKHR mode",
        "type": "VkDisplayModeKHR",
        "rawType": "VkDisplayModeKHR",
        "name": "mode",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice,VkDisplayKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the display mode the application intends to program when using the specified plane. Note this parameter also implicitly specifies a display."
        }
      },
      {
        "text": "uint32_t planeIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "planeIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the plane which the application intends to use with the display, and is less than the number of display planes supported by the device."
        }
      },
      {
        "text": "VkDisplayPlaneCapabilitiesKHR * pCapabilities",
        "type": "VkDisplayPlaneCapabilitiesKHR",
        "rawType": "VkDisplayPlaneCapabilitiesKHR *",
        "name": "pCapabilities",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayPlaneCapabilitiesKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query capabilities of a mode and plane combination"
    }
  },
  {
    "text": "VkResult vkCreateDisplayPlaneSurfaceKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDisplayPlaneSurfaceKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance corresponding to the physical device the targeted display is on."
        }
      },
      {
        "text": "const VkDisplaySurfaceCreateInfoKHR * pCreateInfo",
        "type": "VkDisplaySurfaceCreateInfoKHR",
        "rawType": "const VkDisplaySurfaceCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplaySurfaceCreateInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying which mode, plane, and other parameters to use, as described below."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Create a {#0#} structure representing a display plane and mode"
    }
  },
  {
    "text": "VkResult vkCreateSharedSwapchainsKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateSharedSwapchainsKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device to create the swapchains for."
        }
      },
      {
        "text": "uint32_t swapchainCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "swapchainCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of swapchains to create."
        }
      },
      {
        "text": "const VkSwapchainCreateInfoKHR * pCreateInfos",
        "type": "VkSwapchainCreateInfoKHR",
        "rawType": "const VkSwapchainCreateInfoKHR *",
        "name": "pCreateInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSwapchainCreateInfoKHR"
            }
          ],
          "description": " is an array of {#0#} structures specifying the parameters of the created swapchains."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the swapchain objects when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSwapchainKHR * pSwapchains",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR *",
        "name": "pSwapchains",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSwapchainKHR"
            }
          ],
          "description": " is an array of {#0#} handles in which the created swapchain objects will be returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display_swapchain",
      "description": "Create multiple swapchains that share presentable images"
    }
  },
  {
    "text": "void vkDestroySurfaceKHR",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroySurfaceKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance used to create the surface."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Destroy a VkSurfaceKHR object"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfaceSupportKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfaceSupportKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue family."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface."
        }
      },
      {
        "text": "VkBool32 * pSupported",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pSupported",
        "isConstant": false,
        "dereferenceCount": 1,
        "baseType": "VkBool32",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_TRUE"
            },
            {
              "kind": "ename",
              "value": "VK_FALSE"
            },
            {
              "kind": "basetype",
              "value": "VkInout"
            }
          ],
          "description": " is a reference to a {#2#}, which is set to {#0#} to indicate support, and {#1#} otherwise."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query if presentation is supported"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfaceCapabilitiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfaceCapabilitiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            }
          ],
          "description": " is the physical device that will be associated with the swapchain to be created, as described for {#0#}."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface that will be associated with the swapchain."
        }
      },
      {
        "text": "VkSurfaceCapabilitiesKHR * pSurfaceCapabilities",
        "type": "VkSurfaceCapabilitiesKHR",
        "rawType": "VkSurfaceCapabilitiesKHR *",
        "name": "pSurfaceCapabilities",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceCapabilitiesKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query surface capabilities"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfaceFormatsKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfaceFormatsKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            }
          ],
          "description": " is the physical device that will be associated with the swapchain to be created, as described for {#0#}."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface that will be associated with the swapchain."
        }
      },
      {
        "text": "uint32_t * pSurfaceFormatCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pSurfaceFormatCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of format pairs available or queried, as described below."
        }
      },
      {
        "text": "VkSurfaceFormatKHR * pSurfaceFormats",
        "type": "VkSurfaceFormatKHR",
        "rawType": "VkSurfaceFormatKHR *",
        "name": "pSurfaceFormats",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pSurfaceFormatCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSurfaceFormatKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query color formats supported by surface"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfacePresentModesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfacePresentModesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            }
          ],
          "description": " is the physical device that will be associated with the swapchain to be created, as described for {#0#}."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface that will be associated with the swapchain."
        }
      },
      {
        "text": "uint32_t * pPresentModeCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPresentModeCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of presentation modes available or queried, as described below."
        }
      },
      {
        "text": "VkPresentModeKHR * pPresentModes",
        "type": "int32_t",
        "rawType": "int32_t *",
        "name": "pPresentModes",
        "isConstant": false,
        "dereferenceCount": 1,
        "enumType": "VkPresentModeKHR",
        "enumRawType": "VkPresentModeKHR *",
        "isArray": true,
        "length": "pPresentModeCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPresentModeKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} values, indicating the supported presentation modes."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query supported presentation modes"
    }
  },
  {
    "text": "VkResult vkCreateSwapchainKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateSwapchainKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device to create the swapchain for."
        }
      },
      {
        "text": "const VkSwapchainCreateInfoKHR * pCreateInfo",
        "type": "VkSwapchainCreateInfoKHR",
        "rawType": "const VkSwapchainCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSwapchainCreateInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the parameters of the created swapchain."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the swapchain object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSwapchainKHR * pSwapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR *",
        "name": "pSwapchain",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSwapchainKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created swapchain object will be returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Create a swapchain"
    }
  },
  {
    "text": "void vkDestroySwapchainKHR",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroySwapchainKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the swapchain object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Destroy a swapchain object"
    }
  },
  {
    "text": "VkResult vkGetSwapchainImagesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSwapchainImagesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain to query."
        }
      },
      {
        "text": "uint32_t * pSwapchainImageCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pSwapchainImageCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of presentable images available or queried, as described below."
        }
      },
      {
        "text": "VkImage * pSwapchainImages",
        "type": "VkImage",
        "rawType": "VkImage *",
        "name": "pSwapchainImages",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "pSwapchainImageCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkImage"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} handles."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Obtain the array of presentable images associated with a swapchain"
    }
  },
  {
    "text": "VkResult vkAcquireNextImageKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAcquireNextImageKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the non-retired swapchain from which an image is being acquired."
        }
      },
      {
        "text": "uint64_t timeout",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "timeout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " specifies how long the function waits, in nanoseconds, if no image is available."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a semaphore to signal."
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is {#0#} or a fence to signal."
        }
      },
      {
        "text": "uint32_t * pImageIndex",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pImageIndex",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "fname",
              "value": "vkGetSwapchainImagesKHR"
            },
            {
              "kind": "code",
              "value": "uint32_t"
            }
          ],
          "description": " is a reference to a {#1#} in which the index of the next image to use (i.e. an index into the array of images returned by {#0#}) is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Retrieve the index of the next available presentable image"
    }
  },
  {
    "text": "VkResult vkQueuePresentKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkQueuePresentKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a queue that is capable of presentation to the target surface's platform on the same device as the image's swapchain."
        }
      },
      {
        "text": "const VkPresentInfoKHR * pPresentInfo",
        "type": "VkPresentInfoKHR",
        "rawType": "const VkPresentInfoKHR *",
        "name": "pPresentInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPresentInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters of the presentation."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Queue an image for presentation"
    }
  },
  {
    "text": "VkResult vkCreateViSurfaceNN",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateViSurfaceNN",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance with which to associate the surface."
        }
      },
      {
        "text": "const VkViSurfaceCreateInfoNN * pCreateInfo",
        "type": "VkViSurfaceCreateInfoNN",
        "rawType": "const VkViSurfaceCreateInfoNN *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkViSurfaceCreateInfoNN"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NN_vi_surface",
      "description": "Create a {#0#} object for a VI layer"
    }
  },
  {
    "text": "VkResult vkCreateWaylandSurfaceKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateWaylandSurfaceKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate the surface with."
        }
      },
      {
        "text": "const VkWaylandSurfaceCreateInfoKHR * pCreateInfo",
        "type": "VkWaylandSurfaceCreateInfoKHR",
        "rawType": "const VkWaylandSurfaceCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkWaylandSurfaceCreateInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_wayland_surface",
      "description": "Create a {#0#} object for a Wayland window"
    }
  },
  {
    "text": "VkBool32 vkGetPhysicalDeviceWaylandPresentationSupportKHR",
    "type": "uint32_t",
    "rawType": "uint32_t",
    "name": "vkGetPhysicalDeviceWaylandPresentationSupportKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "baseType": "VkBool32",
    "isBoolean": true,
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue family index."
        }
      },
      {
        "text": "struct wl_display * display",
        "type": "wl_display",
        "rawType": "struct wl_display *",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "wl_display"
            }
          ],
          "description": " is a reference to the {#0#} associated with a Wayland compositor."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_wayland_surface",
      "description": "Query physical device for presentation to Wayland"
    }
  },
  {
    "text": "VkResult vkCreateWin32SurfaceKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateWin32SurfaceKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate the surface with."
        }
      },
      {
        "text": "const VkWin32SurfaceCreateInfoKHR * pCreateInfo",
        "type": "VkWin32SurfaceCreateInfoKHR",
        "rawType": "const VkWin32SurfaceCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkWin32SurfaceCreateInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_win32_surface",
      "description": "Create a {#0#} object for an Win32 native window"
    }
  },
  {
    "text": "VkBool32 vkGetPhysicalDeviceWin32PresentationSupportKHR",
    "type": "uint32_t",
    "rawType": "uint32_t",
    "name": "vkGetPhysicalDeviceWin32PresentationSupportKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "baseType": "VkBool32",
    "isBoolean": true,
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue family index."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_win32_surface",
      "description": "query queue family support for presentation on a Win32 display"
    }
  },
  {
    "text": "VkResult vkCreateXlibSurfaceKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateXlibSurfaceKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate the surface with."
        }
      },
      {
        "text": "const VkXlibSurfaceCreateInfoKHR * pCreateInfo",
        "type": "VkXlibSurfaceCreateInfoKHR",
        "rawType": "const VkXlibSurfaceCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkXlibSurfaceCreateInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing the parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_xlib_surface",
      "description": "Create a {#0#} object for an X11 window, using the Xlib client-side library"
    }
  },
  {
    "text": "VkBool32 vkGetPhysicalDeviceXlibPresentationSupportKHR",
    "type": "uint32_t",
    "rawType": "uint32_t",
    "name": "vkGetPhysicalDeviceXlibPresentationSupportKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "baseType": "VkBool32",
    "isBoolean": true,
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue family index."
        }
      },
      {
        "text": "Display * dpy",
        "type": "Display",
        "rawType": "Display *",
        "name": "dpy",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "Display"
            }
          ],
          "description": " is a reference to an Xlib {#0#} connection to the server."
        }
      },
      {
        "text": "VisualID visualID",
        "type": "VisualID",
        "rawType": "VisualID",
        "name": "visualID",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_xlib_surface",
      "description": "Query physical device for presentation to X11 server using Xlib"
    }
  },
  {
    "text": "VkResult vkCreateXcbSurfaceKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateXcbSurfaceKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate the surface with."
        }
      },
      {
        "text": "const VkXcbSurfaceCreateInfoKHR * pCreateInfo",
        "type": "VkXcbSurfaceCreateInfoKHR",
        "rawType": "const VkXcbSurfaceCreateInfoKHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkXcbSurfaceCreateInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_xcb_surface",
      "description": "Create a {#0#} object for a X11 window, using the XCB client-side library"
    }
  },
  {
    "text": "VkBool32 vkGetPhysicalDeviceXcbPresentationSupportKHR",
    "type": "uint32_t",
    "rawType": "uint32_t",
    "name": "vkGetPhysicalDeviceXcbPresentationSupportKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "baseType": "VkBool32",
    "isBoolean": true,
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device."
        }
      },
      {
        "text": "uint32_t queueFamilyIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "queueFamilyIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue family index."
        }
      },
      {
        "text": "xcb_connection_t * connection",
        "type": "xcb_connection_t",
        "rawType": "xcb_connection_t *",
        "name": "connection",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "visual_id"
            },
            {
              "kind": "code",
              "value": "xcb_connection_t"
            },
            {
              "kind": "code",
              "value": "xcb_visualid_t"
            }
          ],
          "description": " is a reference to an {#1#} to the X server. {#0#} is an X11 visual ({#2#})."
        }
      },
      {
        "text": "xcb_visualid_t visual_id",
        "type": "xcb_visualid_t",
        "rawType": "xcb_visualid_t",
        "name": "visual_id",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_xcb_surface",
      "description": "Query physical device for presentation to X11 server using XCB"
    }
  },
  {
    "text": "VkResult vkCreateImagePipeSurfaceFUCHSIA",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateImagePipeSurfaceFUCHSIA",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate with the surface."
        }
      },
      {
        "text": "const VkImagePipeSurfaceCreateInfoFUCHSIA * pCreateInfo",
        "type": "VkImagePipeSurfaceCreateInfoFUCHSIA",
        "rawType": "const VkImagePipeSurfaceCreateInfoFUCHSIA *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImagePipeSurfaceCreateInfoFUCHSIA"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_FUCHSIA_imagepipe_surface",
      "description": "Create a {#0#} object for a Fuchsia ImagePipe"
    }
  },
  {
    "text": "VkResult vkCreateStreamDescriptorSurfaceGGP",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateStreamDescriptorSurfaceGGP",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate with the surface."
        }
      },
      {
        "text": "const VkStreamDescriptorSurfaceCreateInfoGGP * pCreateInfo",
        "type": "VkStreamDescriptorSurfaceCreateInfoGGP",
        "rawType": "const VkStreamDescriptorSurfaceCreateInfoGGP *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkStreamDescriptorSurfaceCreateInfoGGP"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters that affect the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_GGP_stream_descriptor_surface",
      "description": "Create a {#0#} object for a Google Games Platform stream"
    }
  },
  {
    "text": "VkResult vkCreateDebugReportCallbackEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDebugReportCallbackEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " the instance the callback will be logged on."
        }
      },
      {
        "text": "const VkDebugReportCallbackCreateInfoEXT * pCreateInfo",
        "type": "VkDebugReportCallbackCreateInfoEXT",
        "rawType": "const VkDebugReportCallbackCreateInfoEXT *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugReportCallbackCreateInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure defining the conditions under which this callback will be called."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkDebugReportCallbackEXT * pCallback",
        "type": "VkDebugReportCallbackEXT",
        "rawType": "VkDebugReportCallbackEXT *",
        "name": "pCallback",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugReportCallbackEXT"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_report",
      "description": "Create a debug report callback object"
    }
  },
  {
    "text": "void vkDestroyDebugReportCallbackEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyDebugReportCallbackEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " the instance where the callback was created."
        }
      },
      {
        "text": "VkDebugReportCallbackEXT callback",
        "type": "VkDebugReportCallbackEXT",
        "rawType": "VkDebugReportCallbackEXT",
        "name": "callback",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "vkDestroyDebugReportCallbackEXT"
            },
            {
              "kind": "slink",
              "value": "VkDebugReportCallbackEXT"
            },
            {
              "kind": "pname",
              "value": "callback"
            }
          ],
          "description": " the {#3#} object to destroy. {#4#} is an externally synchronized object and {#0#} not be used on more than one thread at a time. This means that {#2#} {#1#} not be called when a callback is active."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_report",
      "description": "Destroy a debug report callback object"
    }
  },
  {
    "text": "void vkDebugReportMessageEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkDebugReportMessageEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkInstance"
            }
          ],
          "description": " is the debug stream's {#0#}."
        }
      },
      {
        "text": "VkDebugReportFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugReportFlagBitsEXT",
        "bitmaskRawType": "VkDebugReportFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugReportFlagBitsEXT"
            }
          ],
          "description": " specifies the {#0#} classification of this event/message."
        }
      },
      {
        "text": "VkDebugReportObjectTypeEXT objectType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "objectType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDebugReportObjectTypeEXT",
        "enumRawType": "VkDebugReportObjectTypeEXT",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugReportObjectTypeEXT"
            }
          ],
          "description": " is a {#0#} specifying the type of object being used or created at the time the event was triggered."
        }
      },
      {
        "text": "uint64_t object",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "object",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "object"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " this is the object where the issue was detected. {#1#} {#0#} be {#2#} if there is no object associated with the event."
        }
      },
      {
        "text": "size_t location",
        "type": "size_t",
        "rawType": "size_t",
        "name": "location",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an application defined value."
        }
      },
      {
        "text": "int32_t messageCode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageCode",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an application defined value."
        }
      },
      {
        "text": "const char * pLayerPrefix",
        "type": "char",
        "rawType": "const char *",
        "name": "pLayerPrefix",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the abbreviation of the component making this event/message."
        }
      },
      {
        "text": "const char * pMessage",
        "type": "char",
        "rawType": "const char *",
        "name": "pMessage",
        "isConstant": true,
        "dereferenceCount": 1,
        "isString": true,
        "jsType": "String",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a string detailing the trigger conditions."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_report",
      "description": "Inject a message into a debug stream"
    }
  },
  {
    "text": "VkResult vkDebugMarkerSetObjectNameEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkDebugMarkerSetObjectNameEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device that created the object."
        }
      },
      {
        "text": "const VkDebugMarkerObjectNameInfoEXT * pNameInfo",
        "type": "VkDebugMarkerObjectNameInfoEXT",
        "rawType": "const VkDebugMarkerObjectNameInfoEXT *",
        "name": "pNameInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugMarkerObjectNameInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the parameters of the name to set on the object."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Give a user-friendly name to an object"
    }
  },
  {
    "text": "VkResult vkDebugMarkerSetObjectTagEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkDebugMarkerSetObjectTagEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device that created the object."
        }
      },
      {
        "text": "const VkDebugMarkerObjectTagInfoEXT * pTagInfo",
        "type": "VkDebugMarkerObjectTagInfoEXT",
        "rawType": "const VkDebugMarkerObjectTagInfoEXT *",
        "name": "pTagInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugMarkerObjectTagInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the parameters of the tag to attach to the object."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Attach arbitrary data to an object"
    }
  },
  {
    "text": "void vkCmdDebugMarkerBeginEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDebugMarkerBeginEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "const VkDebugMarkerMarkerInfoEXT * pMarkerInfo",
        "type": "VkDebugMarkerMarkerInfoEXT",
        "rawType": "const VkDebugMarkerMarkerInfoEXT *",
        "name": "pMarkerInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugMarkerMarkerInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the parameters of the marker region to open."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Open a command buffer marker region"
    }
  },
  {
    "text": "void vkCmdDebugMarkerEndEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDebugMarkerEndEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Close a command buffer marker region"
    }
  },
  {
    "text": "void vkCmdDebugMarkerInsertEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDebugMarkerInsertEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "const VkDebugMarkerMarkerInfoEXT * pMarkerInfo",
        "type": "VkDebugMarkerMarkerInfoEXT",
        "rawType": "const VkDebugMarkerMarkerInfoEXT *",
        "name": "pMarkerInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugMarkerMarkerInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the parameters of the marker to insert."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_marker",
      "description": "Insert a marker label into a command buffer"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceExternalImageFormatPropertiesNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceExternalImageFormatPropertiesNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the image capabilities"
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "pname",
              "value": "format"
            }
          ],
          "description": " is the image format, corresponding to {#0#}::{#1#}."
        }
      },
      {
        "text": "VkImageType type",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "type",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageType",
        "enumRawType": "VkImageType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "pname",
              "value": "imageType"
            }
          ],
          "description": " is the image type, corresponding to {#0#}::{#1#}."
        }
      },
      {
        "text": "VkImageTiling tiling",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "tiling",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageTiling",
        "enumRawType": "VkImageTiling",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "pname",
              "value": "tiling"
            }
          ],
          "description": " is the image tiling, corresponding to {#0#}::{#1#}."
        }
      },
      {
        "text": "VkImageUsageFlags usage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "usage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "pname",
              "value": "usage"
            }
          ],
          "description": " is the intended usage of the image, corresponding to {#0#}::{#1#}."
        }
      },
      {
        "text": "VkImageCreateFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageCreateFlagBits",
        "bitmaskRawType": "VkImageCreateFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageCreateInfo"
            },
            {
              "kind": "pname",
              "value": "flags"
            }
          ],
          "description": " is a bitmask describing additional parameters of the image, corresponding to {#0#}::{#1#}."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagsNV externalHandleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "externalHandleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkExternalMemoryHandleTypeFlagBitsNV"
            }
          ],
          "description": " is either one of the bits from {#0#}, or 0."
        }
      },
      {
        "text": "VkExternalImageFormatPropertiesNV * pExternalImageFormatProperties",
        "type": "VkExternalImageFormatPropertiesNV",
        "rawType": "VkExternalImageFormatPropertiesNV *",
        "name": "pExternalImageFormatProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExternalImageFormatPropertiesNV"
            }
          ],
          "description": " is a reference to a {#0#} structure in which capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory_capabilities",
      "description": "determine image capabilities compatible with external memory handle types"
    }
  },
  {
    "text": "VkResult vkGetMemoryWin32HandleNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetMemoryWin32HandleNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory."
        }
      },
      {
        "text": "VkDeviceMemory memory",
        "type": "VkDeviceMemory",
        "rawType": "VkDeviceMemory",
        "name": "memory",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceMemory"
            }
          ],
          "description": " is the {#0#} object."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagsNV handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBitsNV",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagsNV",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkExternalMemoryHandleTypeFlagBitsNV"
            }
          ],
          "description": " is a bitmask of {#0#} containing a single bit specifying the type of handle requested."
        }
      },
      {
        "text": "HANDLE * pHandle",
        "type": "HANDLE",
        "rawType": "HANDLE *",
        "name": "pHandle",
        "isConstant": false,
        "dereferenceCount": 1,
        "isWin32HandleReference": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_external_memory_win32",
      "description": "retrieve Win32 handle to a device memory object"
    }
  },
  {
    "text": "void vkCmdProcessCommandsNVX",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdProcessCommandsNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the primary command buffer in which the generation process takes space."
        }
      },
      {
        "text": "const VkCmdProcessCommandsInfoNVX * pProcessCommandsInfo",
        "type": "VkCmdProcessCommandsInfoNVX",
        "rawType": "const VkCmdProcessCommandsInfoNVX *",
        "name": "pProcessCommandsInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCmdProcessCommandsInfoNVX"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the processing of commands."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Performs the generation of commands on the device"
    }
  },
  {
    "text": "void vkCmdReserveSpaceForCommandsNVX",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdReserveSpaceForCommandsNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the secondary command buffer in which the space for device-generated commands is reserved."
        }
      },
      {
        "text": "const VkCmdReserveSpaceForCommandsInfoNVX * pReserveSpaceInfo",
        "type": "VkCmdReserveSpaceForCommandsInfoNVX",
        "rawType": "const VkCmdReserveSpaceForCommandsInfoNVX *",
        "name": "pReserveSpaceInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Perform a reservation of command buffer space"
    }
  },
  {
    "text": "VkResult vkCreateIndirectCommandsLayoutNVX",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateIndirectCommandsLayoutNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the indirect command layout."
        }
      },
      {
        "text": "const VkIndirectCommandsLayoutCreateInfoNVX * pCreateInfo",
        "type": "VkIndirectCommandsLayoutCreateInfoNVX",
        "rawType": "const VkIndirectCommandsLayoutCreateInfoNVX *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkIndirectCommandsLayoutCreateInfoNVX"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting creation of the indirect command layout."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkIndirectCommandsLayoutNVX * pIndirectCommandsLayout",
        "type": "VkIndirectCommandsLayoutNVX",
        "rawType": "VkIndirectCommandsLayoutNVX *",
        "name": "pIndirectCommandsLayout",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkIndirectCommandsLayoutNVX"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting indirect command layout is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Create an indirect command layout object"
    }
  },
  {
    "text": "void vkDestroyIndirectCommandsLayoutNVX",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyIndirectCommandsLayoutNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the layout."
        }
      },
      {
        "text": "VkIndirectCommandsLayoutNVX indirectCommandsLayout",
        "type": "VkIndirectCommandsLayoutNVX",
        "rawType": "VkIndirectCommandsLayoutNVX",
        "name": "indirectCommandsLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the table to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Destroy an object table"
    }
  },
  {
    "text": "VkResult vkCreateObjectTableNVX",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateObjectTableNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the object table."
        }
      },
      {
        "text": "const VkObjectTableCreateInfoNVX * pCreateInfo",
        "type": "VkObjectTableCreateInfoNVX",
        "rawType": "const VkObjectTableCreateInfoNVX *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkObjectTableCreateInfoNVX"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting creation of the table."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkObjectTableNVX * pObjectTable",
        "type": "VkObjectTableNVX",
        "rawType": "VkObjectTableNVX *",
        "name": "pObjectTable",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkObjectTableNVX"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting object table is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Create an object table"
    }
  },
  {
    "text": "void vkDestroyObjectTableNVX",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyObjectTableNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the table."
        }
      },
      {
        "text": "VkObjectTableNVX objectTable",
        "type": "VkObjectTableNVX",
        "rawType": "VkObjectTableNVX",
        "name": "objectTable",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the table to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Destroy an object table"
    }
  },
  {
    "text": "VkResult vkRegisterObjectsNVX",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkRegisterObjectsNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the object table."
        }
      },
      {
        "text": "VkObjectTableNVX objectTable",
        "type": "VkObjectTableNVX",
        "rawType": "VkObjectTableNVX",
        "name": "objectTable",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the table for which the resources are registered."
        }
      },
      {
        "text": "uint32_t objectCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "objectCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of resources to register."
        }
      },
      {
        "text": "const VkObjectTableEntryNVX * const* ppObjectTableEntries",
        "type": "VkObjectTableEntryNVX",
        "rawType": "const VkObjectTableEntryNVX * const*",
        "name": "ppObjectTableEntries",
        "isConstant": true,
        "dereferenceCount": 2,
        "isStructType": true,
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkObjectTablePipelineEntryNVX"
            },
            {
              "kind": "sname",
              "value": "VkObjectTableDescriptorSetEntryNVX"
            },
            {
              "kind": "sname",
              "value": "VkObjectTableVertexBufferEntryNVX"
            },
            {
              "kind": "sname",
              "value": "VkObjectTableIndexBufferEntryNVX"
            },
            {
              "kind": "sname",
              "value": "VkObjectTablePushConstantEntryNVX"
            }
          ],
          "description": " provides an array for detailed binding informations. Each array element is a reference to a structure of type {#0#}, {#1#}, {#2#}, {#3#} or {#4#} (see below for details)."
        }
      },
      {
        "text": "const uint32_t * pObjectIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pObjectIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " are the indices at which each resource is registered."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Register resource bindings in an object table"
    }
  },
  {
    "text": "VkResult vkUnregisterObjectsNVX",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkUnregisterObjectsNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the object table."
        }
      },
      {
        "text": "VkObjectTableNVX objectTable",
        "type": "VkObjectTableNVX",
        "rawType": "VkObjectTableNVX",
        "name": "objectTable",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the table from which the resources are unregistered."
        }
      },
      {
        "text": "uint32_t objectCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "objectCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of resources being removed from the object table."
        }
      },
      {
        "text": "const VkObjectEntryTypeNVX * pObjectEntryTypes",
        "type": "int32_t",
        "rawType": "const int32_t *",
        "name": "pObjectEntryTypes",
        "isConstant": true,
        "dereferenceCount": 1,
        "enumType": "VkObjectEntryTypeNVX",
        "enumRawType": "const VkObjectEntryTypeNVX *",
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const uint32_t * pObjectIndices",
        "type": "uint32_t",
        "rawType": "const uint32_t *",
        "name": "pObjectIndices",
        "isConstant": true,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "objectCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Uint32Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " provides the array of object indices to be removed."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Unregister resource bindings in an object table"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle to the physical device whose properties will be queried."
        }
      },
      {
        "text": "VkDeviceGeneratedCommandsFeaturesNVX * pFeatures",
        "type": "VkDeviceGeneratedCommandsFeaturesNVX",
        "rawType": "VkDeviceGeneratedCommandsFeaturesNVX *",
        "name": "pFeatures",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceGeneratedCommandsFeaturesNVX"
            }
          ],
          "description": " is a reference to a {#0#} structure in which features are returned."
        }
      },
      {
        "text": "VkDeviceGeneratedCommandsLimitsNVX * pLimits",
        "type": "VkDeviceGeneratedCommandsLimitsNVX",
        "rawType": "VkDeviceGeneratedCommandsLimitsNVX *",
        "name": "pLimits",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceGeneratedCommandsLimitsNVX"
            }
          ],
          "description": " is a reference to a {#0#} structure in which limitations are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NVX_device_generated_commands",
      "description": "Returns device-generated commands related properties of a physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceFeatures2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceFeatures2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the supported features."
        }
      },
      {
        "text": "VkPhysicalDeviceFeatures2 * pFeatures",
        "type": "VkPhysicalDeviceFeatures2",
        "rawType": "VkPhysicalDeviceFeatures2 *",
        "name": "pFeatures",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceFeatures2"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the physical device features are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Features",
      "description": "Reports capabilities of a physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceProperties2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceProperties2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle to the physical device whose properties will be queried."
        }
      },
      {
        "text": "VkPhysicalDeviceProperties2 * pProperties",
        "type": "VkPhysicalDeviceProperties2",
        "rawType": "VkPhysicalDeviceProperties2 *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceProperties2"
            }
          ],
          "description": " is a reference to a {#0#} structure in which properties are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Returns properties of a physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceFormatProperties2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceFormatProperties2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the format properties."
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the format whose properties are queried."
        }
      },
      {
        "text": "VkFormatProperties2 * pFormatProperties",
        "type": "VkFormatProperties2",
        "rawType": "VkFormatProperties2 *",
        "name": "pFormatProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFormatProperties2"
            },
            {
              "kind": "pname",
              "value": "format"
            }
          ],
          "description": " is a reference to a {#0#} structure in which physical device properties for {#1#} are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Formats",
      "description": "Lists physical device\\"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceImageFormatProperties2",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceImageFormatProperties2",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the image capabilities."
        }
      },
      {
        "text": "const VkPhysicalDeviceImageFormatInfo2 * pImageFormatInfo",
        "type": "VkPhysicalDeviceImageFormatInfo2",
        "rawType": "const VkPhysicalDeviceImageFormatInfo2 *",
        "name": "pImageFormatInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateImage"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceImageFormatInfo2"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "VkImageFormatProperties2 * pImageFormatProperties",
        "type": "VkImageFormatProperties2",
        "rawType": "VkImageFormatProperties2 *",
        "name": "pImageFormatProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImageFormatProperties2"
            }
          ],
          "description": " is a reference to a {#0#} structure in which capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Lists physical device\\"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceQueueFamilyProperties2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceQueueFamilyProperties2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle to the physical device whose properties will be queried."
        }
      },
      {
        "text": "uint32_t * pQueueFamilyPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pQueueFamilyPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkGetPhysicalDeviceQueueFamilyProperties"
            }
          ],
          "description": " is a reference to a number related to the number of queue families available or queried, as described in {#0#}."
        }
      },
      {
        "text": "VkQueueFamilyProperties2 * pQueueFamilyProperties",
        "type": "VkQueueFamilyProperties2",
        "rawType": "VkQueueFamilyProperties2 *",
        "name": "pQueueFamilyProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pQueueFamilyPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkQueueFamilyProperties2"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Reports properties of the queues of the specified physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceMemoryProperties2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceMemoryProperties2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle to the device to query."
        }
      },
      {
        "text": "VkPhysicalDeviceMemoryProperties2 * pMemoryProperties",
        "type": "VkPhysicalDeviceMemoryProperties2",
        "rawType": "VkPhysicalDeviceMemoryProperties2 *",
        "name": "pMemoryProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceMemoryProperties2"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the properties are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Reports memory information for the specified physical device"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceSparseImageFormatProperties2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceSparseImageFormatProperties2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the sparse image capabilities."
        }
      },
      {
        "text": "const VkPhysicalDeviceSparseImageFormatInfo2 * pFormatInfo",
        "type": "VkPhysicalDeviceSparseImageFormatInfo2",
        "rawType": "const VkPhysicalDeviceSparseImageFormatInfo2 *",
        "name": "pFormatInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSparseImageFormatInfo2"
            }
          ],
          "description": " is a reference to a {#0#} structure containing input parameters to the command."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of sparse format properties available or queried, as described below."
        }
      },
      {
        "text": "VkSparseImageFormatProperties2 * pProperties",
        "type": "VkSparseImageFormatProperties2",
        "rawType": "VkSparseImageFormatProperties2 *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSparseImageFormatProperties2"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Retrieve properties of an image format applied to sparse images"
    }
  },
  {
    "text": "void vkCmdPushDescriptorSetKHR",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdPushDescriptorSetKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer that the descriptors will be recorded in."
        }
      },
      {
        "text": "VkPipelineBindPoint pipelineBindPoint",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineBindPoint",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPipelineBindPoint",
        "enumRawType": "VkPipelineBindPoint",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineBindPoint"
            }
          ],
          "description": " is a {#0#} indicating whether the descriptors will be used by graphics pipelines or compute pipelines. There is a separate set of push descriptor bindings for each of graphics and compute, so binding one does not disturb the other."
        }
      },
      {
        "text": "VkPipelineLayout layout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineLayout"
            }
          ],
          "description": " is a {#0#} object used to program the bindings."
        }
      },
      {
        "text": "uint32_t set",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "set",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the set number of the descriptor set in the pipeline layout that will be updated."
        }
      },
      {
        "text": "uint32_t descriptorWriteCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "descriptorWriteCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDescriptorWrites"
            }
          ],
          "description": " is the number of elements in the {#0#} array."
        }
      },
      {
        "text": "const VkWriteDescriptorSet * pDescriptorWrites",
        "type": "VkWriteDescriptorSet",
        "rawType": "const VkWriteDescriptorSet *",
        "name": "pDescriptorWrites",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "descriptorWriteCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkWriteDescriptorSet"
            }
          ],
          "description": " is an array of {#0#} structures describing the descriptors to be updated."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Pushes descriptor updates into a command buffer"
    }
  },
  {
    "text": "void vkTrimCommandPool",
    "type": "void",
    "rawType": "void",
    "name": "vkTrimCommandPool",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the command pool."
        }
      },
      {
        "text": "VkCommandPool commandPool",
        "type": "VkCommandPool",
        "rawType": "VkCommandPool",
        "name": "commandPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command pool to trim."
        }
      },
      {
        "text": "VkCommandPoolTrimFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkCommandPoolTrimFlags",
        "bitmaskRawType": "VkCommandPoolTrimFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is reserved for future use."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Trim a command pool"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceExternalBufferProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceExternalBufferProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the buffer capabilities."
        }
      },
      {
        "text": "const VkPhysicalDeviceExternalBufferInfo * pExternalBufferInfo",
        "type": "VkPhysicalDeviceExternalBufferInfo",
        "rawType": "const VkPhysicalDeviceExternalBufferInfo *",
        "name": "pExternalBufferInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateBuffer"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceExternalBufferInfo"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "VkExternalBufferProperties * pExternalBufferProperties",
        "type": "VkExternalBufferProperties",
        "rawType": "VkExternalBufferProperties *",
        "name": "pExternalBufferProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExternalBufferProperties"
            }
          ],
          "description": " is a reference to a {#0#} structure in which capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Query external handle types supported by buffers"
    }
  },
  {
    "text": "VkResult vkGetMemoryWin32HandleKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetMemoryWin32HandleKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the device memory being exported."
        }
      },
      {
        "text": "const VkMemoryGetWin32HandleInfoKHR * pGetWin32HandleInfo",
        "type": "VkMemoryGetWin32HandleInfoKHR",
        "rawType": "const VkMemoryGetWin32HandleInfoKHR *",
        "name": "pGetWin32HandleInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryGetWin32HandleInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the export operation."
        }
      },
      {
        "text": "HANDLE * pHandle",
        "type": "HANDLE",
        "rawType": "HANDLE *",
        "name": "pHandle",
        "isConstant": false,
        "dereferenceCount": 1,
        "isWin32HandleReference": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return the Windows handle representing the underlying resources of the device memory object."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Get a Windows HANDLE for a memory object"
    }
  },
  {
    "text": "VkResult vkGetMemoryWin32HandlePropertiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetMemoryWin32HandlePropertiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "HANDLE handle",
        "type": "HANDLE",
        "rawType": "HANDLE",
        "name": "handle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isWin32Handle": true,
        "jsType": "BigInt",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle which will be imported."
        }
      },
      {
        "text": "VkMemoryWin32HandlePropertiesKHR * pMemoryWin32HandleProperties",
        "type": "VkMemoryWin32HandlePropertiesKHR",
        "rawType": "VkMemoryWin32HandlePropertiesKHR *",
        "name": "pMemoryWin32HandleProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "handle"
            }
          ],
          "description": " will return properties of {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Get Properties of External Memory Win32 Handles"
    }
  },
  {
    "text": "VkResult vkGetMemoryFdKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetMemoryFdKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the device memory being exported."
        }
      },
      {
        "text": "const VkMemoryGetFdInfoKHR * pGetFdInfo",
        "type": "VkMemoryGetFdInfoKHR",
        "rawType": "const VkMemoryGetFdInfoKHR *",
        "name": "pGetFdInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryGetFdInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the export operation."
        }
      },
      {
        "text": "int * pFd",
        "type": "int",
        "rawType": "int *",
        "name": "pFd",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return a file descriptor representing the underlying resources of the device memory object."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Get a POSIX file descriptor for a memory object"
    }
  },
  {
    "text": "VkResult vkGetMemoryFdPropertiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetMemoryFdPropertiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "int fd",
        "type": "int",
        "rawType": "int",
        "name": "fd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle which will be imported."
        }
      },
      {
        "text": "VkMemoryFdPropertiesKHR * pMemoryFdProperties",
        "type": "VkMemoryFdPropertiesKHR",
        "rawType": "VkMemoryFdPropertiesKHR *",
        "name": "pMemoryFdProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryFdPropertiesKHR"
            },
            {
              "kind": "pname",
              "value": "fd"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the properties of the handle {#1#} are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Get Properties of External Memory File Descriptors"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceExternalSemaphoreProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceExternalSemaphoreProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the semaphore capabilities."
        }
      },
      {
        "text": "const VkPhysicalDeviceExternalSemaphoreInfo * pExternalSemaphoreInfo",
        "type": "VkPhysicalDeviceExternalSemaphoreInfo",
        "rawType": "const VkPhysicalDeviceExternalSemaphoreInfo *",
        "name": "pExternalSemaphoreInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSemaphore"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceExternalSemaphoreInfo"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "VkExternalSemaphoreProperties * pExternalSemaphoreProperties",
        "type": "VkExternalSemaphoreProperties",
        "rawType": "VkExternalSemaphoreProperties *",
        "name": "pExternalSemaphoreProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExternalSemaphoreProperties"
            }
          ],
          "description": " is a reference to a {#0#} structure in which capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Function for querying external semaphore handle capabilities."
    }
  },
  {
    "text": "VkResult vkGetSemaphoreWin32HandleKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSemaphoreWin32HandleKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the semaphore being exported."
        }
      },
      {
        "text": "const VkSemaphoreGetWin32HandleInfoKHR * pGetWin32HandleInfo",
        "type": "VkSemaphoreGetWin32HandleInfoKHR",
        "rawType": "const VkSemaphoreGetWin32HandleInfoKHR *",
        "name": "pGetWin32HandleInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSemaphoreGetWin32HandleInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the export operation."
        }
      },
      {
        "text": "HANDLE * pHandle",
        "type": "HANDLE",
        "rawType": "HANDLE *",
        "name": "pHandle",
        "isConstant": false,
        "dereferenceCount": 1,
        "isWin32HandleReference": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return the Windows handle representing the semaphore state."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Get a Windows HANDLE for a semaphore"
    }
  },
  {
    "text": "VkResult vkImportSemaphoreWin32HandleKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkImportSemaphoreWin32HandleKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the semaphore."
        }
      },
      {
        "text": "const VkImportSemaphoreWin32HandleInfoKHR * pImportSemaphoreWin32HandleInfo",
        "type": "VkImportSemaphoreWin32HandleInfoKHR",
        "rawType": "const VkImportSemaphoreWin32HandleInfoKHR *",
        "name": "pImportSemaphoreWin32HandleInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImportSemaphoreWin32HandleInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the semaphore and import parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Import a semaphore from a Windows HANDLE"
    }
  },
  {
    "text": "VkResult vkGetSemaphoreFdKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSemaphoreFdKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the semaphore being exported."
        }
      },
      {
        "text": "const VkSemaphoreGetFdInfoKHR * pGetFdInfo",
        "type": "VkSemaphoreGetFdInfoKHR",
        "rawType": "const VkSemaphoreGetFdInfoKHR *",
        "name": "pGetFdInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSemaphoreGetFdInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the export operation."
        }
      },
      {
        "text": "int * pFd",
        "type": "int",
        "rawType": "int *",
        "name": "pFd",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return the file descriptor representing the semaphore payload."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Get a POSIX file descriptor handle for a semaphore"
    }
  },
  {
    "text": "VkResult vkImportSemaphoreFdKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkImportSemaphoreFdKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the semaphore."
        }
      },
      {
        "text": "const VkImportSemaphoreFdInfoKHR * pImportSemaphoreFdInfo",
        "type": "VkImportSemaphoreFdInfoKHR",
        "rawType": "const VkImportSemaphoreFdInfoKHR *",
        "name": "pImportSemaphoreFdInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImportSemaphoreFdInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the semaphore and import parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Import a semaphore from a POSIX file descriptor"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceExternalFenceProperties",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceExternalFenceProperties",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the fence capabilities."
        }
      },
      {
        "text": "const VkPhysicalDeviceExternalFenceInfo * pExternalFenceInfo",
        "type": "VkPhysicalDeviceExternalFenceInfo",
        "rawType": "const VkPhysicalDeviceExternalFenceInfo *",
        "name": "pExternalFenceInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateFence"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceExternalFenceInfo"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "VkExternalFenceProperties * pExternalFenceProperties",
        "type": "VkExternalFenceProperties",
        "rawType": "VkExternalFenceProperties *",
        "name": "pExternalFenceProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkExternalFenceProperties"
            }
          ],
          "description": " is a reference to a {#0#} structure in which capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Function for querying external fence handle capabilities."
    }
  },
  {
    "text": "VkResult vkGetFenceWin32HandleKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetFenceWin32HandleKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the fence being exported."
        }
      },
      {
        "text": "const VkFenceGetWin32HandleInfoKHR * pGetWin32HandleInfo",
        "type": "VkFenceGetWin32HandleInfoKHR",
        "rawType": "const VkFenceGetWin32HandleInfoKHR *",
        "name": "pGetWin32HandleInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFenceGetWin32HandleInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the export operation."
        }
      },
      {
        "text": "HANDLE * pHandle",
        "type": "HANDLE",
        "rawType": "HANDLE *",
        "name": "pHandle",
        "isConstant": false,
        "dereferenceCount": 1,
        "isWin32HandleReference": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return the Windows handle representing the fence state."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Get a Windows HANDLE for a fence"
    }
  },
  {
    "text": "VkResult vkImportFenceWin32HandleKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkImportFenceWin32HandleKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the fence."
        }
      },
      {
        "text": "const VkImportFenceWin32HandleInfoKHR * pImportFenceWin32HandleInfo",
        "type": "VkImportFenceWin32HandleInfoKHR",
        "rawType": "const VkImportFenceWin32HandleInfoKHR *",
        "name": "pImportFenceWin32HandleInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImportFenceWin32HandleInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the fence and import parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Import a fence from a Windows HANDLE"
    }
  },
  {
    "text": "VkResult vkGetFenceFdKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetFenceFdKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the fence being exported."
        }
      },
      {
        "text": "const VkFenceGetFdInfoKHR * pGetFdInfo",
        "type": "VkFenceGetFdInfoKHR",
        "rawType": "const VkFenceGetFdInfoKHR *",
        "name": "pGetFdInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFenceGetFdInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the export operation."
        }
      },
      {
        "text": "int * pFd",
        "type": "int",
        "rawType": "int *",
        "name": "pFd",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return the file descriptor representing the fence payload."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Get a POSIX file descriptor handle for a fence"
    }
  },
  {
    "text": "VkResult vkImportFenceFdKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkImportFenceFdKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the fence."
        }
      },
      {
        "text": "const VkImportFenceFdInfoKHR * pImportFenceFdInfo",
        "type": "VkImportFenceFdInfoKHR",
        "rawType": "const VkImportFenceFdInfoKHR *",
        "name": "pImportFenceFdInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkImportFenceFdInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the fence and import parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Import a fence from a POSIX file descriptor"
    }
  },
  {
    "text": "VkResult vkReleaseDisplayEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkReleaseDisplayEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " The physical device the display is on."
        }
      },
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " The display to release control of."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_direct_mode_display",
      "description": "Release access to an acquired VkDisplayKHR"
    }
  },
  {
    "text": "VkResult vkAcquireXlibDisplayEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAcquireXlibDisplayEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " The physical device the display is on."
        }
      },
      {
        "text": "Display * dpy",
        "type": "Display",
        "rawType": "Display *",
        "name": "dpy",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "display"
            }
          ],
          "description": " A connection to the X11 server that currently owns {#0#}."
        }
      },
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " The display the caller wishes to control in Vulkan."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_acquire_xlib_display",
      "description": "Acquire access to a VkDisplayKHR using Xlib"
    }
  },
  {
    "text": "VkResult vkGetRandROutputDisplayEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetRandROutputDisplayEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " The physical device to query the display handle on."
        }
      },
      {
        "text": "Display * dpy",
        "type": "Display",
        "rawType": "Display *",
        "name": "dpy",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "RROutput rrOutput",
        "type": "RROutput",
        "rawType": "RROutput",
        "name": "rrOutput",
        "isConstant": false,
        "dereferenceCount": 0,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " An X11 RandR output ID."
        }
      },
      {
        "text": "VkDisplayKHR * pDisplay",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR *",
        "name": "pDisplay",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayKHR"
            }
          ],
          "description": " The corresponding {#0#} handle will be returned here."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_acquire_xlib_display",
      "description": "Query the VkDisplayKHR corresponding to an X11 RandR Output"
    }
  },
  {
    "text": "VkResult vkDisplayPowerControlEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkDisplayPowerControlEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the display whose power state is modified."
        }
      },
      {
        "text": "const VkDisplayPowerInfoEXT * pDisplayPowerInfo",
        "type": "VkDisplayPowerInfoEXT",
        "rawType": "const VkDisplayPowerInfoEXT *",
        "name": "pDisplayPowerInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayPowerInfoEXT"
            },
            {
              "kind": "pname",
              "value": "display"
            }
          ],
          "description": " is an instance of {#0#} specifying the new power state of {#1#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Set the power state of a display"
    }
  },
  {
    "text": "VkResult vkRegisterDeviceEventEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkRegisterDeviceEventEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " is a logical device on which the event {#0#} occur."
        }
      },
      {
        "text": "const VkDeviceEventInfoEXT * pDeviceEventInfo",
        "type": "VkDeviceEventInfoEXT",
        "rawType": "const VkDeviceEventInfoEXT *",
        "name": "pDeviceEventInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceEventInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure describing the event of interest to the application."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkFence * pFence",
        "type": "VkFence",
        "rawType": "VkFence *",
        "name": "pFence",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a handle in which the resulting fence object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Signal a fence when a device event occurs"
    }
  },
  {
    "text": "VkResult vkRegisterDisplayEventEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkRegisterDisplayEventEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            }
          ],
          "description": " is the display on which the event {#0#} occur."
        }
      },
      {
        "text": "const VkDisplayEventInfoEXT * pDisplayEventInfo",
        "type": "VkDisplayEventInfoEXT",
        "rawType": "const VkDisplayEventInfoEXT *",
        "name": "pDisplayEventInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayEventInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure describing the event of interest to the application."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkFence * pFence",
        "type": "VkFence",
        "rawType": "VkFence *",
        "name": "pFence",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a handle in which the resulting fence object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Signal a fence when a display event occurs"
    }
  },
  {
    "text": "VkResult vkGetSwapchainCounterEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSwapchainCounterEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain from which to query the counter value."
        }
      },
      {
        "text": "VkSurfaceCounterFlagBitsEXT counter",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "counter",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSurfaceCounterFlagBitsEXT",
        "bitmaskRawType": "VkSurfaceCounterFlagBitsEXT",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the counter to query."
        }
      },
      {
        "text": "uint64_t * pCounterValue",
        "type": "uint64_t",
        "rawType": "uint64_t *",
        "name": "pCounterValue",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return the current value of the counter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_control",
      "description": "Query the current value of a surface counter"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfaceCapabilities2EXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfaceCapabilities2EXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            }
          ],
          "description": " is the physical device that will be associated with the swapchain to be created, as described for {#0#}."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface that will be associated with the swapchain."
        }
      },
      {
        "text": "VkSurfaceCapabilities2EXT * pSurfaceCapabilities",
        "type": "VkSurfaceCapabilities2EXT",
        "rawType": "VkSurfaceCapabilities2EXT *",
        "name": "pSurfaceCapabilities",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceCapabilities2EXT"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_display_surface_counter",
      "description": "Query surface capabilities"
    }
  },
  {
    "text": "VkResult vkEnumeratePhysicalDeviceGroups",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkEnumeratePhysicalDeviceGroups",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateInstance"
            }
          ],
          "description": " is a handle to a Vulkan instance previously created with {#0#}."
        }
      },
      {
        "text": "uint32_t * pPhysicalDeviceGroupCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPhysicalDeviceGroupCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of device groups available or queried, as described below."
        }
      },
      {
        "text": "VkPhysicalDeviceGroupProperties * pPhysicalDeviceGroupProperties",
        "type": "VkPhysicalDeviceGroupProperties",
        "rawType": "VkPhysicalDeviceGroupProperties *",
        "name": "pPhysicalDeviceGroupProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPhysicalDeviceGroupCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceGroupProperties"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Enumerates groups of physical devices that can be used to create a single logical device"
    }
  },
  {
    "text": "void vkGetDeviceGroupPeerMemoryFeatures",
    "type": "void",
    "rawType": "void",
    "name": "vkGetDeviceGroupPeerMemoryFeatures",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the memory."
        }
      },
      {
        "text": "uint32_t heapIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "heapIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the memory heap from which the memory is allocated."
        }
      },
      {
        "text": "uint32_t localDeviceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "localDeviceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device index of the physical device that performs the memory access."
        }
      },
      {
        "text": "uint32_t remoteDeviceIndex",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "remoteDeviceIndex",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device index of the physical device that the memory is allocated for."
        }
      },
      {
        "text": "VkPeerMemoryFeatureFlags * pPeerMemoryFeatures",
        "type": "int32_t",
        "rawType": "int32_t *",
        "name": "pPeerMemoryFeatures",
        "isConstant": false,
        "dereferenceCount": 1,
        "bitmaskType": "VkPeerMemoryFeatureFlagBits",
        "bitmaskRawType": "VkPeerMemoryFeatureFlags *",
        "isBitmaskType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkPeerMemoryFeatureFlags"
            }
          ],
          "description": " is a reference to a {#0#} bitmask indicating which types of memory accesses are supported for the combination of heap, local, and remote devices."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Query supported peer memory features of a device"
    }
  },
  {
    "text": "VkResult vkBindBufferMemory2",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkBindBufferMemory2",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the buffers and memory."
        }
      },
      {
        "text": "uint32_t bindInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBindBufferMemoryInfo"
            }
          ],
          "description": " {#0#} structures describing buffers and memory to bind."
        }
      },
      {
        "text": "const VkBindBufferMemoryInfo * pBindInfos",
        "type": "VkBindBufferMemoryInfo",
        "rawType": "const VkBindBufferMemoryInfo *",
        "name": "pBindInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bind device memory to buffer objects"
    }
  },
  {
    "text": "VkResult vkBindImageMemory2",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkBindImageMemory2",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the images and memory."
        }
      },
      {
        "text": "uint32_t bindInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkBindImageMemoryInfo * pBindInfos",
        "type": "VkBindImageMemoryInfo",
        "rawType": "const VkBindImageMemoryInfo *",
        "name": "pBindInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBindImageMemoryInfo"
            }
          ],
          "description": " is an array of {#0#} structures, describing images and memory to bind."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Bind device memory to image objects"
    }
  },
  {
    "text": "void vkCmdSetDeviceMask",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetDeviceMask",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is command buffer whose current device mask is modified."
        }
      },
      {
        "text": "uint32_t deviceMask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "deviceMask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the new value of the current device mask."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Command Buffers",
      "description": "Modify device mask of a command buffer"
    }
  },
  {
    "text": "VkResult vkGetDeviceGroupPresentCapabilitiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDeviceGroupPresentCapabilitiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device."
        }
      },
      {
        "text": "VkDeviceGroupPresentCapabilitiesKHR * pDeviceGroupPresentCapabilities",
        "type": "VkDeviceGroupPresentCapabilitiesKHR",
        "rawType": "VkDeviceGroupPresentCapabilitiesKHR *",
        "name": "pDeviceGroupPresentCapabilities",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceGroupPresentCapabilitiesKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the device's capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query present capabilities from other physical devices"
    }
  },
  {
    "text": "VkResult vkGetDeviceGroupSurfacePresentModesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDeviceGroupSurfacePresentModesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface."
        }
      },
      {
        "text": "VkDeviceGroupPresentModeFlagsKHR * pModes",
        "type": "int32_t",
        "rawType": "int32_t *",
        "name": "pModes",
        "isConstant": false,
        "dereferenceCount": 1,
        "bitmaskType": "VkDeviceGroupPresentModeFlagBitsKHR",
        "bitmaskRawType": "VkDeviceGroupPresentModeFlagsKHR *",
        "isBitmaskType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkDeviceGroupPresentModeFlagsKHR"
            }
          ],
          "description": " is a reference to a {#0#} in which the supported device group present modes for the surface are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query present capabilities for a surface"
    }
  },
  {
    "text": "VkResult vkAcquireNextImage2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAcquireNextImage2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkAcquireNextImageInfoKHR * pAcquireInfo",
        "type": "VkAcquireNextImageInfoKHR",
        "rawType": "const VkAcquireNextImageInfoKHR *",
        "name": "pAcquireInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAcquireNextImageInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the acquire."
        }
      },
      {
        "text": "uint32_t * pImageIndex",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pImageIndex",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "uint32_t"
            }
          ],
          "description": " is a reference to a {#0#} that is set to the index of the next image to use."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Retrieve the index of the next available presentable image"
    }
  },
  {
    "text": "void vkCmdDispatchBase",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDispatchBase",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t baseGroupX",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "baseGroupX",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "WorkgroupId"
            }
          ],
          "description": " is the start value for the X component of {#0#}."
        }
      },
      {
        "text": "uint32_t baseGroupY",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "baseGroupY",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "WorkgroupId"
            }
          ],
          "description": " is the start value for the Y component of {#0#}."
        }
      },
      {
        "text": "uint32_t baseGroupZ",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "baseGroupZ",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "WorkgroupId"
            }
          ],
          "description": " is the start value for the Z component of {#0#}."
        }
      },
      {
        "text": "uint32_t groupCountX",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCountX",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the X dimension."
        }
      },
      {
        "text": "uint32_t groupCountY",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCountY",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the Y dimension."
        }
      },
      {
        "text": "uint32_t groupCountZ",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCountZ",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the Z dimension."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Dispatching Commands",
      "description": "Dispatch compute work items"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDevicePresentRectanglesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDevicePresentRectanglesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device."
        }
      },
      {
        "text": "VkSurfaceKHR surface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR",
        "name": "surface",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the surface."
        }
      },
      {
        "text": "uint32_t * pRectCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pRectCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of rectangles available or queried, as described below."
        }
      },
      {
        "text": "VkRect2D * pRects",
        "type": "VkRect2D",
        "rawType": "VkRect2D *",
        "name": "pRects",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pRectCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRect2D"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query present rectangles for a surface on a physical device"
    }
  },
  {
    "text": "VkResult vkCreateDescriptorUpdateTemplate",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDescriptorUpdateTemplate",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the descriptor update template."
        }
      },
      {
        "text": "const VkDescriptorUpdateTemplateCreateInfo * pCreateInfo",
        "type": "VkDescriptorUpdateTemplateCreateInfo",
        "rawType": "const VkDescriptorUpdateTemplateCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdPushDescriptorSetWithTemplateKHR"
            },
            {
              "kind": "slink",
              "value": "VkDescriptorUpdateTemplateCreateInfo"
            }
          ],
          "description": " is a reference to a {#1#} structure specifying the set of descriptors to update with a single call to {#0#} or"
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkDescriptorUpdateTemplate * pDescriptorUpdateTemplate",
        "type": "VkDescriptorUpdateTemplate",
        "rawType": "VkDescriptorUpdateTemplate *",
        "name": "pDescriptorUpdateTemplate",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Create a new descriptor update template"
    }
  },
  {
    "text": "void vkDestroyDescriptorUpdateTemplate",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyDescriptorUpdateTemplate",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that has been used to create the descriptor update template"
        }
      },
      {
        "text": "VkDescriptorUpdateTemplate descriptorUpdateTemplate",
        "type": "VkDescriptorUpdateTemplate",
        "rawType": "VkDescriptorUpdateTemplate",
        "name": "descriptorUpdateTemplate",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the descriptor update template to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Destroy a descriptor update template object"
    }
  },
  {
    "text": "void vkUpdateDescriptorSetWithTemplate",
    "type": "void",
    "rawType": "void",
    "name": "vkUpdateDescriptorSetWithTemplate",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that updates the descriptor sets."
        }
      },
      {
        "text": "VkDescriptorSet descriptorSet",
        "type": "VkDescriptorSet",
        "rawType": "VkDescriptorSet",
        "name": "descriptorSet",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDescriptorPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the descriptor set to update"
        }
      },
      {
        "text": "VkDescriptorUpdateTemplate descriptorUpdateTemplate",
        "type": "VkDescriptorUpdateTemplate",
        "rawType": "VkDescriptorUpdateTemplate",
        "name": "descriptorUpdateTemplate",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorUpdateTemplate"
            },
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " is a {#0#} object specifying the update mapping between {#1#} and the descriptor set to update."
        }
      },
      {
        "text": "const void * pData",
        "type": "void",
        "rawType": "const void *",
        "name": "pData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorImageInfo"
            },
            {
              "kind": "slink",
              "value": "VkDescriptorBufferInfo"
            },
            {
              "kind": "slink",
              "value": "VkBufferView"
            }
          ],
          "description": " is a reference to memory containing one or more {#0#}, {#1#}, or {#2#} structures used to write the descriptors."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Update the contents of a descriptor set object using an update template"
    }
  },
  {
    "text": "void vkCmdPushDescriptorSetWithTemplateKHR",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdPushDescriptorSetWithTemplateKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer that the descriptors will be recorded in."
        }
      },
      {
        "text": "VkDescriptorUpdateTemplate descriptorUpdateTemplate",
        "type": "VkDescriptorUpdateTemplate",
        "rawType": "VkDescriptorUpdateTemplate",
        "name": "descriptorUpdateTemplate",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " is a descriptor update template defining how to interpret the descriptor information in {#0#}."
        }
      },
      {
        "text": "VkPipelineLayout layout",
        "type": "VkPipelineLayout",
        "rawType": "VkPipelineLayout",
        "name": "layout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "slink",
              "value": "VkPipelineLayout"
            },
            {
              "kind": "pname",
              "value": "descriptorUpdateTemplate"
            }
          ],
          "description": " is a {#1#} object used to program the bindings. It {#0#} be compatible with the layout used to create the {#2#} handle."
        }
      },
      {
        "text": "uint32_t set",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "set",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "descriptorUpdateTemplate"
            }
          ],
          "description": " is the set number of the descriptor set in the pipeline layout that will be updated. This {#0#} be the same number used to create the {#1#} handle."
        }
      },
      {
        "text": "const void * pData",
        "type": "void",
        "rawType": "const void *",
        "name": "pData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to memory containing descriptors for the templated update."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Pushes descriptor updates into a command buffer using a descriptor update template"
    }
  },
  {
    "text": "void vkSetHdrMetadataEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkSetHdrMetadataEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device where the swapchain(s) were created."
        }
      },
      {
        "text": "uint32_t swapchainCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "swapchainCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkHdrMetadataEXT"
            }
          ],
          "description": " {#0#} structures."
        }
      },
      {
        "text": "const VkSwapchainKHR * pSwapchains",
        "type": "VkSwapchainKHR",
        "rawType": "const VkSwapchainKHR *",
        "name": "pSwapchains",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkHdrMetadataEXT * pMetadata",
        "type": "VkHdrMetadataEXT",
        "rawType": "const VkHdrMetadataEXT *",
        "name": "pMetadata",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "swapchainCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_hdr_metadata",
      "description": "function to set Hdr metadata"
    }
  },
  {
    "text": "VkResult vkGetSwapchainStatusKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSwapchainStatusKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain to query."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_shared_presentable_image",
      "description": "Get a swapchain\\"
    }
  },
  {
    "text": "VkResult vkGetRefreshCycleDurationGOOGLE",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetRefreshCycleDurationGOOGLE",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain to obtain the refresh duration for."
        }
      },
      {
        "text": "VkRefreshCycleDurationGOOGLE * pDisplayTimingProperties",
        "type": "VkRefreshCycleDurationGOOGLE",
        "rawType": "VkRefreshCycleDurationGOOGLE *",
        "name": "pDisplayTimingProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkRefreshCycleDurationGOOGLE"
            }
          ],
          "description": " is a reference to a {#0#} structure."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_GOOGLE_display_timing",
      "description": "Obtain the RC duration of the PE\\"
    }
  },
  {
    "text": "VkResult vkGetPastPresentationTimingGOOGLE",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPastPresentationTimingGOOGLE",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain to obtain presentation timing information duration for."
        }
      },
      {
        "text": "uint32_t * pPresentationTimingCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPresentationTimingCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPastPresentationTimingGOOGLE"
            }
          ],
          "description": " is a reference to a number related to the number of {#0#} structures to query, as described below."
        }
      },
      {
        "text": "VkPastPresentationTimingGOOGLE * pPresentationTimings",
        "type": "VkPastPresentationTimingGOOGLE",
        "rawType": "VkPastPresentationTimingGOOGLE *",
        "name": "pPresentationTimings",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPresentationTimingCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPastPresentationTimingGOOGLE"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_GOOGLE_display_timing",
      "description": "Obtain timing of a previously-presented image"
    }
  },
  {
    "text": "VkResult vkCreateIOSSurfaceMVK",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateIOSSurfaceMVK",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance with which to associate the surface."
        }
      },
      {
        "text": "const VkIOSSurfaceCreateInfoMVK * pCreateInfo",
        "type": "VkIOSSurfaceCreateInfoMVK",
        "rawType": "const VkIOSSurfaceCreateInfoMVK *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkIOSSurfaceCreateInfoMVK"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_MVK_ios_surface",
      "description": "Create a VkSurfaceKHR object for an iOS UIView"
    }
  },
  {
    "text": "VkResult vkCreateMacOSSurfaceMVK",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateMacOSSurfaceMVK",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance with which to associate the surface."
        }
      },
      {
        "text": "const VkMacOSSurfaceCreateInfoMVK * pCreateInfo",
        "type": "VkMacOSSurfaceCreateInfoMVK",
        "rawType": "const VkMacOSSurfaceCreateInfoMVK *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMacOSSurfaceCreateInfoMVK"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_MVK_macos_surface",
      "description": "Create a VkSurfaceKHR object for a macOS NSView"
    }
  },
  {
    "text": "VkResult vkCreateMetalSurfaceEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateMetalSurfaceEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance with which to associate the surface."
        }
      },
      {
        "text": "const VkMetalSurfaceCreateInfoEXT * pCreateInfo",
        "type": "VkMetalSurfaceCreateInfoEXT",
        "rawType": "const VkMetalSurfaceCreateInfoEXT *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMetalSurfaceCreateInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_metal_surface",
      "description": "Create a VkSurfaceKHR object for CAMetalLayer"
    }
  },
  {
    "text": "void vkCmdSetViewportWScalingNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetViewportWScalingNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t firstViewport",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstViewport",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first viewport whose parameters are updated by the command."
        }
      },
      {
        "text": "uint32_t viewportCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of viewports whose parameters are updated by the command."
        }
      },
      {
        "text": "const VkViewportWScalingNV * pViewportWScalings",
        "type": "VkViewportWScalingNV",
        "rawType": "const VkViewportWScalingNV *",
        "name": "pViewportWScalings",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "viewportCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkViewportWScalingNV"
            }
          ],
          "description": " is an array of {#0#} structures specifying viewport parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_clip_space_w_scaling",
      "description": "Set the viewport W scaling on a command buffer"
    }
  },
  {
    "text": "void vkCmdSetDiscardRectangleEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetDiscardRectangleEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t firstDiscardRectangle",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstDiscardRectangle",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first discard rectangle whose state is updated by the command."
        }
      },
      {
        "text": "uint32_t discardRectangleCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "discardRectangleCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of discard rectangles whose state are updated by the command."
        }
      },
      {
        "text": "const VkRect2D * pDiscardRectangles",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pDiscardRectangles",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "discardRectangleCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRect2D"
            }
          ],
          "description": " is an array of {#0#} structures specifying discard rectangles."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Set discard rectangles dynamically"
    }
  },
  {
    "text": "void vkCmdSetSampleLocationsEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetSampleLocationsEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "const VkSampleLocationsInfoEXT * pSampleLocationsInfo",
        "type": "VkSampleLocationsInfoEXT",
        "rawType": "const VkSampleLocationsInfoEXT *",
        "name": "pSampleLocationsInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the sample locations state to set."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Set the dynamic sample locations state"
    }
  },
  {
    "text": "void vkGetPhysicalDeviceMultisamplePropertiesEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkGetPhysicalDeviceMultisamplePropertiesEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the additional multisampling capabilities."
        }
      },
      {
        "text": "VkSampleCountFlagBits samples",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "samples",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSampleCountFlagBits",
        "bitmaskRawType": "VkSampleCountFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the sample count to query the capabilities for."
        }
      },
      {
        "text": "VkMultisamplePropertiesEXT * pMultisampleProperties",
        "type": "VkMultisamplePropertiesEXT",
        "rawType": "VkMultisamplePropertiesEXT *",
        "name": "pMultisampleProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMultisamplePropertiesEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure in which information about the additional multisampling capabilities specific to the sample count is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Limits",
      "description": "Report sample count specific multisampling capabilities of a physical device"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfaceCapabilities2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfaceCapabilities2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            }
          ],
          "description": " is the physical device that will be associated with the swapchain to be created, as described for {#0#}."
        }
      },
      {
        "text": "const VkPhysicalDeviceSurfaceInfo2KHR * pSurfaceInfo",
        "type": "VkPhysicalDeviceSurfaceInfo2KHR",
        "rawType": "const VkPhysicalDeviceSurfaceInfo2KHR *",
        "name": "pSurfaceInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSurfaceInfo2KHR"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the surface and other fixed parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "VkSurfaceCapabilities2KHR * pSurfaceCapabilities",
        "type": "VkSurfaceCapabilities2KHR",
        "rawType": "VkSurfaceCapabilities2KHR *",
        "name": "pSurfaceCapabilities",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceCapabilities2KHR"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Reports capabilities of a surface on a physical device"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfaceFormats2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfaceFormats2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            }
          ],
          "description": " is the physical device that will be associated with the swapchain to be created, as described for {#0#}."
        }
      },
      {
        "text": "const VkPhysicalDeviceSurfaceInfo2KHR * pSurfaceInfo",
        "type": "VkPhysicalDeviceSurfaceInfo2KHR",
        "rawType": "const VkPhysicalDeviceSurfaceInfo2KHR *",
        "name": "pSurfaceInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSurfaceInfo2KHR"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the surface and other fixed parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "uint32_t * pSurfaceFormatCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pSurfaceFormatCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of format tuples available or queried, as described below."
        }
      },
      {
        "text": "VkSurfaceFormat2KHR * pSurfaceFormats",
        "type": "VkSurfaceFormat2KHR",
        "rawType": "VkSurfaceFormat2KHR *",
        "name": "pSurfaceFormats",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pSurfaceFormatCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSurfaceFormat2KHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query color formats supported by surface"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceDisplayProperties2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceDisplayProperties2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a physical device."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of display devices available or queried, as described below."
        }
      },
      {
        "text": "VkDisplayProperties2KHR * pProperties",
        "type": "VkDisplayProperties2KHR",
        "rawType": "VkDisplayProperties2KHR *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayProperties2KHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query information about the available displays"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceDisplayPlaneProperties2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceDisplayPlaneProperties2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a physical device."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of display planes available or queried, as described below."
        }
      },
      {
        "text": "VkDisplayPlaneProperties2KHR * pProperties",
        "type": "VkDisplayPlaneProperties2KHR",
        "rawType": "VkDisplayPlaneProperties2KHR *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayPlaneProperties2KHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query information about the available display planes."
    }
  },
  {
    "text": "VkResult vkGetDisplayModeProperties2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDisplayModeProperties2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "display"
            }
          ],
          "description": " is the physical device associated with {#0#}."
        }
      },
      {
        "text": "VkDisplayKHR display",
        "type": "VkDisplayKHR",
        "rawType": "VkDisplayKHR",
        "name": "display",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the display to query."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of display modes available or queried, as described below."
        }
      },
      {
        "text": "VkDisplayModeProperties2KHR * pProperties",
        "type": "VkDisplayModeProperties2KHR",
        "rawType": "VkDisplayModeProperties2KHR *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkDisplayModeProperties2KHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query information about the available display modes."
    }
  },
  {
    "text": "VkResult vkGetDisplayPlaneCapabilities2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDisplayPlaneCapabilities2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pDisplayPlaneInfo"
            }
          ],
          "description": " is the physical device associated with {#0#}."
        }
      },
      {
        "text": "const VkDisplayPlaneInfo2KHR * pDisplayPlaneInfo",
        "type": "VkDisplayPlaneInfo2KHR",
        "rawType": "const VkDisplayPlaneInfo2KHR *",
        "name": "pDisplayPlaneInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayPlaneInfo2KHR"
            }
          ],
          "description": " is a reference to a {#0#} structure describing the plane and mode."
        }
      },
      {
        "text": "VkDisplayPlaneCapabilities2KHR * pCapabilities",
        "type": "VkDisplayPlaneCapabilities2KHR",
        "rawType": "VkDisplayPlaneCapabilities2KHR *",
        "name": "pCapabilities",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDisplayPlaneCapabilities2KHR"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the capabilities are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_display",
      "description": "Query capabilities of a mode and plane combination"
    }
  },
  {
    "text": "void vkGetBufferMemoryRequirements2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetBufferMemoryRequirements2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the buffer."
        }
      },
      {
        "text": "const VkBufferMemoryRequirementsInfo2 * pInfo",
        "type": "VkBufferMemoryRequirementsInfo2",
        "rawType": "const VkBufferMemoryRequirementsInfo2 *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkBufferMemoryRequirementsInfo2"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters required for the memory requirements query."
        }
      },
      {
        "text": "VkMemoryRequirements2 * pMemoryRequirements",
        "type": "VkMemoryRequirements2",
        "rawType": "VkMemoryRequirements2 *",
        "name": "pMemoryRequirements",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryRequirements2"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the memory requirements of the buffer object are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Returns the memory requirements for specified Vulkan object"
    }
  },
  {
    "text": "void vkGetImageMemoryRequirements2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetImageMemoryRequirements2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image."
        }
      },
      {
        "text": "const VkImageMemoryRequirementsInfo2 * pInfo",
        "type": "VkImageMemoryRequirementsInfo2",
        "rawType": "const VkImageMemoryRequirementsInfo2 *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkImageMemoryRequirementsInfo2"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters required for the memory requirements query."
        }
      },
      {
        "text": "VkMemoryRequirements2 * pMemoryRequirements",
        "type": "VkMemoryRequirements2",
        "rawType": "VkMemoryRequirements2 *",
        "name": "pMemoryRequirements",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryRequirements2"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the memory requirements of the image object are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Returns the memory requirements for specified Vulkan object"
    }
  },
  {
    "text": "void vkGetImageSparseMemoryRequirements2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetImageSparseMemoryRequirements2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image."
        }
      },
      {
        "text": "const VkImageSparseMemoryRequirementsInfo2 * pInfo",
        "type": "VkImageSparseMemoryRequirementsInfo2",
        "rawType": "const VkImageSparseMemoryRequirementsInfo2 *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkImageSparseMemoryRequirementsInfo2"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters required for the memory requirements query."
        }
      },
      {
        "text": "uint32_t * pSparseMemoryRequirementCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pSparseMemoryRequirementCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of sparse memory requirements available or queried, as described below."
        }
      },
      {
        "text": "VkSparseImageMemoryRequirements2 * pSparseMemoryRequirements",
        "type": "VkSparseImageMemoryRequirements2",
        "rawType": "VkSparseImageMemoryRequirements2 *",
        "name": "pSparseMemoryRequirements",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pSparseMemoryRequirementCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSparseImageMemoryRequirements2"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Sparse Resources",
      "description": "Query the memory requirements for a sparse image"
    }
  },
  {
    "text": "VkResult vkCreateSamplerYcbcrConversion",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateSamplerYcbcrConversion",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the sampler Y'C~B~C~R~ conversion."
        }
      },
      {
        "text": "const VkSamplerYcbcrConversionCreateInfo * pCreateInfo",
        "type": "VkSamplerYcbcrConversionCreateInfo",
        "rawType": "const VkSamplerYcbcrConversionCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSamplerYcbcrConversionCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the requested sampler Y'C~B~C~R~ conversion."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkSamplerYcbcrConversion * pYcbcrConversion",
        "type": "VkSamplerYcbcrConversion",
        "rawType": "VkSamplerYcbcrConversion *",
        "name": "pYcbcrConversion",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSamplerYcbcrConversion"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting sampler Y'C~B~C~R~ conversion is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Create a new Ycbcr conversion"
    }
  },
  {
    "text": "void vkDestroySamplerYcbcrConversion",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroySamplerYcbcrConversion",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the Y'C~B~C~R~ conversion."
        }
      },
      {
        "text": "VkSamplerYcbcrConversion ycbcrConversion",
        "type": "VkSamplerYcbcrConversion",
        "rawType": "VkSamplerYcbcrConversion",
        "name": "ycbcrConversion",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the conversion to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Samplers",
      "description": "Destroy a created Y\\"
    }
  },
  {
    "text": "void vkGetDeviceQueue2",
    "type": "void",
    "rawType": "void",
    "name": "vkGetDeviceQueue2",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the queue."
        }
      },
      {
        "text": "const VkDeviceQueueInfo2 * pQueueInfo",
        "type": "VkDeviceQueueInfo2",
        "rawType": "const VkDeviceQueueInfo2 *",
        "name": "pQueueInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDeviceQueueInfo2"
            }
          ],
          "description": " is a reference to a {#0#} structure, describing the parameters used to create the device queue."
        }
      },
      {
        "text": "VkQueue * pQueue",
        "type": "VkQueue",
        "rawType": "VkQueue *",
        "name": "pQueue",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkQueue"
            }
          ],
          "description": " is a reference to a {#0#} object that will be filled with the handle for the requested queue."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Devices and Queues",
      "description": "Get a queue handle from a device"
    }
  },
  {
    "text": "VkResult vkCreateValidationCacheEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateValidationCacheEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the validation cache object."
        }
      },
      {
        "text": "const VkValidationCacheCreateInfoEXT * pCreateInfo",
        "type": "VkValidationCacheCreateInfoEXT",
        "rawType": "const VkValidationCacheCreateInfoEXT *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkValidationCacheCreateInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure containing the initial parameters for the validation cache object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkValidationCacheEXT * pValidationCache",
        "type": "VkValidationCacheEXT",
        "rawType": "VkValidationCacheEXT *",
        "name": "pValidationCache",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkValidationCacheEXT"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting validation cache object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Creates a new validation cache"
    }
  },
  {
    "text": "void vkDestroyValidationCacheEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyValidationCacheEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the validation cache object."
        }
      },
      {
        "text": "VkValidationCacheEXT validationCache",
        "type": "VkValidationCacheEXT",
        "rawType": "VkValidationCacheEXT",
        "name": "validationCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the validation cache to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Destroy a validation cache object"
    }
  },
  {
    "text": "VkResult vkGetValidationCacheDataEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetValidationCacheDataEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the validation cache."
        }
      },
      {
        "text": "VkValidationCacheEXT validationCache",
        "type": "VkValidationCacheEXT",
        "rawType": "VkValidationCacheEXT",
        "name": "validationCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the validation cache to retrieve data from."
        }
      },
      {
        "text": "size_t * pDataSize",
        "type": "size_t",
        "rawType": "size_t *",
        "name": "pDataSize",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a value related to the amount of data in the validation cache, as described below."
        }
      },
      {
        "text": "void * pData",
        "type": "void",
        "rawType": "void *",
        "name": "pData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "pDataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is either <i>null</i> or a reference to a buffer."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Get the data store from a validation cache"
    }
  },
  {
    "text": "VkResult vkMergeValidationCachesEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkMergeValidationCachesEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the validation cache objects."
        }
      },
      {
        "text": "VkValidationCacheEXT dstCache",
        "type": "VkValidationCacheEXT",
        "rawType": "VkValidationCacheEXT",
        "name": "dstCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the validation cache to merge results into."
        }
      },
      {
        "text": "uint32_t srcCacheCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "srcCacheCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkValidationCacheEXT * pSrcCaches",
        "type": "VkValidationCacheEXT",
        "rawType": "const VkValidationCacheEXT *",
        "name": "pSrcCaches",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "srcCacheCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "dstCache"
            },
            {
              "kind": "pname",
              "value": "dstCache"
            }
          ],
          "description": " is an array of validation cache handles, which will be merged into {#0#}. The previous contents of {#1#} are included after the merge."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Combine the data stores of validation caches"
    }
  },
  {
    "text": "void vkGetDescriptorSetLayoutSupport",
    "type": "void",
    "rawType": "void",
    "name": "vkGetDescriptorSetLayoutSupport",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that would create the descriptor set layout."
        }
      },
      {
        "text": "const VkDescriptorSetLayoutCreateInfo * pCreateInfo",
        "type": "VkDescriptorSetLayoutCreateInfo",
        "rawType": "const VkDescriptorSetLayoutCreateInfo *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSetLayoutCreateInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the state of the descriptor set layout object."
        }
      },
      {
        "text": "VkDescriptorSetLayoutSupport * pSupport",
        "type": "VkDescriptorSetLayoutSupport",
        "rawType": "VkDescriptorSetLayoutSupport *",
        "name": "pSupport",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDescriptorSetLayoutSupport"
            }
          ],
          "description": " is a reference to a {#0#} structure, in which information about support for the descriptor set layout object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Query whether a descriptor set layout can be created"
    }
  },
  {
    "text": "VkResult vkGetSwapchainGrallocUsageANDROID",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSwapchainGrallocUsageANDROID",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags imageUsage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "int * grallocUsage",
        "type": "int",
        "rawType": "int *",
        "name": "grallocUsage",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "text": "VkResult vkGetSwapchainGrallocUsage2ANDROID",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSwapchainGrallocUsage2ANDROID",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFormat format",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "format",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkFormat",
        "enumRawType": "VkFormat",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImageUsageFlags imageUsage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkImageUsageFlagBits",
        "bitmaskRawType": "VkImageUsageFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSwapchainImageUsageFlagsANDROID swapchainImageUsage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "swapchainImageUsage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkSwapchainImageUsageFlagBitsANDROID",
        "bitmaskRawType": "VkSwapchainImageUsageFlagsANDROID",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint64_t * grallocConsumerUsage",
        "type": "uint64_t",
        "rawType": "uint64_t *",
        "name": "grallocConsumerUsage",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint64_t * grallocProducerUsage",
        "type": "uint64_t",
        "rawType": "uint64_t *",
        "name": "grallocProducerUsage",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "text": "VkResult vkAcquireImageANDROID",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAcquireImageANDROID",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "int nativeFenceFd",
        "type": "int",
        "rawType": "int",
        "name": "nativeFenceFd",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkFence fence",
        "type": "VkFence",
        "rawType": "VkFence",
        "name": "fence",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "text": "VkResult vkQueueSignalReleaseImageANDROID",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkQueueSignalReleaseImageANDROID",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "uint32_t waitSemaphoreCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "waitSemaphoreCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "const VkSemaphore * pWaitSemaphores",
        "type": "VkSemaphore",
        "rawType": "const VkSemaphore *",
        "name": "pWaitSemaphores",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      },
      {
        "text": "int * pNativeFenceFd",
        "type": "int",
        "rawType": "int *",
        "name": "pNativeFenceFd",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": ""
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "",
      "description": ""
    }
  },
  {
    "text": "VkResult vkGetShaderInfoAMD",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetShaderInfoAMD",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the target of the query."
        }
      },
      {
        "text": "VkShaderStageFlagBits shaderStage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "shaderStage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkShaderStageFlagBits",
        "bitmaskRawType": "VkShaderStageFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " identifies the particular shader within the pipeline about which information is being queried."
        }
      },
      {
        "text": "VkShaderInfoTypeAMD infoType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "infoType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkShaderInfoTypeAMD",
        "enumRawType": "VkShaderInfoTypeAMD",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " describes what kind of information is being queried."
        }
      },
      {
        "text": "size_t * pInfoSize",
        "type": "size_t",
        "rawType": "size_t *",
        "name": "pInfoSize",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a value related to the amount of data the query returns, as described below."
        }
      },
      {
        "text": "void * pInfo",
        "type": "void",
        "rawType": "void *",
        "name": "pInfo",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "pInfoSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is either <i>null</i> or a reference to a buffer."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_AMD_shader_info",
      "description": "Get information about a shader in a pipeline"
    }
  },
  {
    "text": "void vkSetLocalDimmingAMD",
    "type": "void",
    "rawType": "void",
    "name": "vkSetLocalDimmingAMD",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapChain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapChain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " handle to enable local dimming."
        }
      },
      {
        "text": "VkBool32 localDimmingEnable",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "localDimmingEnable",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " specifies whether local dimming is enabled for the swapchain."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_swapchain",
      "description": "Set Local Dimming"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceCalibrateableTimeDomainsEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the set of calibrateable time domains."
        }
      },
      {
        "text": "uint32_t * pTimeDomainCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pTimeDomainCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of calibrateable time domains available or queried, as described below."
        }
      },
      {
        "text": "VkTimeDomainEXT * pTimeDomains",
        "type": "int32_t",
        "rawType": "int32_t *",
        "name": "pTimeDomains",
        "isConstant": false,
        "dereferenceCount": 1,
        "enumType": "VkTimeDomainEXT",
        "enumRawType": "VkTimeDomainEXT *",
        "isArray": true,
        "length": "pTimeDomainCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkTimeDomainEXT"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} values, indicating the supported calibrateable time domains."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Additional Capabilities",
      "description": "Query calibrateable time domains"
    }
  },
  {
    "text": "VkResult vkGetCalibratedTimestampsEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetCalibratedTimestampsEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device used to perform the query."
        }
      },
      {
        "text": "uint32_t timestampCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "timestampCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " 64-bit unsigned integer values in which the requested calibrated timestamp values are returned."
        }
      },
      {
        "text": "const VkCalibratedTimestampInfoEXT * pTimestampInfos",
        "type": "VkCalibratedTimestampInfoEXT",
        "rawType": "const VkCalibratedTimestampInfoEXT *",
        "name": "pTimestampInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "timestampCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint64_t * pTimestamps",
        "type": "uint64_t",
        "rawType": "uint64_t *",
        "name": "pTimestamps",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "timestampCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint64_t * pMaxDeviation",
        "type": "uint64_t",
        "rawType": "uint64_t *",
        "name": "pMaxDeviation",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a 64-bit unsigned integer value in which the strictly positive maximum deviation, in nanoseconds, of the calibrated timestamp values is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Query calibrated timestamps"
    }
  },
  {
    "text": "VkResult vkSetDebugUtilsObjectNameEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkSetDebugUtilsObjectNameEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device that created the object."
        }
      },
      {
        "text": "const VkDebugUtilsObjectNameInfoEXT * pNameInfo",
        "type": "VkDebugUtilsObjectNameInfoEXT",
        "rawType": "const VkDebugUtilsObjectNameInfoEXT *",
        "name": "pNameInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsObjectNameInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters of the name to set on the object."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Give a user-friendly name to an object"
    }
  },
  {
    "text": "VkResult vkSetDebugUtilsObjectTagEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkSetDebugUtilsObjectTagEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device that created the object."
        }
      },
      {
        "text": "const VkDebugUtilsObjectTagInfoEXT * pTagInfo",
        "type": "VkDebugUtilsObjectTagInfoEXT",
        "rawType": "const VkDebugUtilsObjectTagInfoEXT *",
        "name": "pTagInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsObjectTagInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters of the tag to attach to the object."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Attach arbitrary data to an object"
    }
  },
  {
    "text": "void vkQueueBeginDebugUtilsLabelEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkQueueBeginDebugUtilsLabelEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue in which to start a debug label region."
        }
      },
      {
        "text": "const VkDebugUtilsLabelEXT * pLabelInfo",
        "type": "VkDebugUtilsLabelEXT",
        "rawType": "const VkDebugUtilsLabelEXT *",
        "name": "pLabelInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsLabelEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters of the label region to open."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Open a queue debug label region"
    }
  },
  {
    "text": "void vkQueueEndDebugUtilsLabelEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkQueueEndDebugUtilsLabelEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue in which a debug label region should be closed."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Close a queue debug label region"
    }
  },
  {
    "text": "void vkQueueInsertDebugUtilsLabelEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkQueueInsertDebugUtilsLabelEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue into which a debug label will be inserted."
        }
      },
      {
        "text": "const VkDebugUtilsLabelEXT * pLabelInfo",
        "type": "VkDebugUtilsLabelEXT",
        "rawType": "const VkDebugUtilsLabelEXT *",
        "name": "pLabelInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsLabelEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters of the label to insert."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Insert a label into a queue"
    }
  },
  {
    "text": "void vkCmdBeginDebugUtilsLabelEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBeginDebugUtilsLabelEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "const VkDebugUtilsLabelEXT * pLabelInfo",
        "type": "VkDebugUtilsLabelEXT",
        "rawType": "const VkDebugUtilsLabelEXT *",
        "name": "pLabelInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsLabelEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying parameters of the label region to open."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Open a command buffer debug label region"
    }
  },
  {
    "text": "void vkCmdEndDebugUtilsLabelEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdEndDebugUtilsLabelEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Close a command buffer label region"
    }
  },
  {
    "text": "void vkCmdInsertDebugUtilsLabelEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdInsertDebugUtilsLabelEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "const VkDebugUtilsLabelEXT * pLabelInfo",
        "type": "VkDebugUtilsLabelEXT",
        "rawType": "const VkDebugUtilsLabelEXT *",
        "name": "pLabelInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Insert a label into a command buffer"
    }
  },
  {
    "text": "VkResult vkCreateDebugUtilsMessengerEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateDebugUtilsMessengerEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " the instance the messenger will be used with."
        }
      },
      {
        "text": "const VkDebugUtilsMessengerCreateInfoEXT * pCreateInfo",
        "type": "VkDebugUtilsMessengerCreateInfoEXT",
        "rawType": "const VkDebugUtilsMessengerCreateInfoEXT *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsMessengerCreateInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure containing the callback reference, as well as defining conditions under which this messenger will trigger the callback."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkDebugUtilsMessengerEXT * pMessenger",
        "type": "VkDebugUtilsMessengerEXT",
        "rawType": "VkDebugUtilsMessengerEXT *",
        "name": "pMessenger",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsMessengerEXT"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Create a debug messenger object"
    }
  },
  {
    "text": "void vkDestroyDebugUtilsMessengerEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyDebugUtilsMessengerEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " the instance where the callback was created."
        }
      },
      {
        "text": "VkDebugUtilsMessengerEXT messenger",
        "type": "VkDebugUtilsMessengerEXT",
        "rawType": "VkDebugUtilsMessengerEXT",
        "name": "messenger",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "fname",
              "value": "vkDestroyDebugUtilsMessengerEXT"
            },
            {
              "kind": "slink",
              "value": "VkDebugUtilsMessengerEXT"
            },
            {
              "kind": "pname",
              "value": "messenger"
            }
          ],
          "description": " the {#3#} object to destroy. {#4#} is an externally synchronized object and {#0#} not be used on more than one thread at a time. This means that {#2#} {#1#} not be called when a callback is active."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Destroy a debug messenger object"
    }
  },
  {
    "text": "void vkSubmitDebugUtilsMessageEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkSubmitDebugUtilsMessageEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkInstance"
            }
          ],
          "description": " is the debug stream's {#0#}."
        }
      },
      {
        "text": "VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageSeverity",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessageSeverityFlagBitsEXT",
        "bitmaskRawType": "VkDebugUtilsMessageSeverityFlagBitsEXT",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugUtilsMessageSeverityFlagBitsEXT"
            }
          ],
          "description": " is the {#0#} severity of this event/message."
        }
      },
      {
        "text": "VkDebugUtilsMessageTypeFlagsEXT messageTypes",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageTypes",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessageTypeFlagBitsEXT",
        "bitmaskRawType": "VkDebugUtilsMessageTypeFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkDebugUtilsMessageTypeFlagBitsEXT"
            }
          ],
          "description": " is a bitmask of {#0#} specifying which type of event(s) to identify with this message."
        }
      },
      {
        "text": "const VkDebugUtilsMessengerCallbackDataEXT * pCallbackData",
        "type": "VkDebugUtilsMessengerCallbackDataEXT",
        "rawType": "const VkDebugUtilsMessengerCallbackDataEXT *",
        "name": "pCallbackData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkDebugUtilsMessengerCallbackDataEXT"
            }
          ],
          "description": " contains all the callback related data in the {#0#} structure."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_debug_utils",
      "description": "Inject a message into a debug stream"
    }
  },
  {
    "text": "VkResult vkGetMemoryHostPointerPropertiesEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetMemoryHostPointerPropertiesEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pHostPointer"
            }
          ],
          "description": " is the logical device that will be importing {#0#}."
        }
      },
      {
        "text": "VkExternalMemoryHandleTypeFlagBits handleType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "handleType",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkExternalMemoryHandleTypeFlagBits",
        "bitmaskRawType": "VkExternalMemoryHandleTypeFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const void * pHostPointer",
        "type": "void",
        "rawType": "const void *",
        "name": "pHostPointer",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the host reference to import from."
        }
      },
      {
        "text": "VkMemoryHostPointerPropertiesEXT * pMemoryHostPointerProperties",
        "type": "VkMemoryHostPointerPropertiesEXT",
        "rawType": "VkMemoryHostPointerPropertiesEXT *",
        "name": "pMemoryHostPointerProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryHostPointerPropertiesEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the host reference properties are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Get properties of external memory host reference"
    }
  },
  {
    "text": "void vkCmdWriteBufferMarkerAMD",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdWriteBufferMarkerAMD",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkPipelineStageFlagBits pipelineStage",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "pipelineStage",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkPipelineStageFlagBits",
        "bitmaskRawType": "VkPipelineStageFlagBits",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPipelineStageFlagBits"
            }
          ],
          "description": " is one of the {#0#} values, specifying the pipeline stage whose completion triggers the marker write."
        }
      },
      {
        "text": "VkBuffer dstBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "dstBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer where the marker will be written to."
        }
      },
      {
        "text": "VkDeviceSize dstOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "dstOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the byte offset into the buffer where the marker will be written to."
        }
      },
      {
        "text": "uint32_t marker",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "marker",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the 32-bit value of the marker."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_AMD_buffer_marker",
      "description": "Execute a pipelined write of a marker value into a buffer"
    }
  },
  {
    "text": "VkResult vkCreateRenderPass2KHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateRenderPass2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the render pass."
        }
      },
      {
        "text": "const VkRenderPassCreateInfo2KHR * pCreateInfo",
        "type": "VkRenderPassCreateInfo2KHR",
        "rawType": "const VkRenderPassCreateInfo2KHR *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPassCreateInfo2KHR"
            }
          ],
          "description": " is a reference to a {#0#} structure describing the parameters of the render pass."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkRenderPass * pRenderPass",
        "type": "VkRenderPass",
        "rawType": "VkRenderPass *",
        "name": "pRenderPass",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPass"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting render pass object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Create a new render pass object"
    }
  },
  {
    "text": "void vkCmdBeginRenderPass2KHR",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBeginRenderPass2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer in which to record the command."
        }
      },
      {
        "text": "const VkRenderPassBeginInfo * pRenderPassBegin",
        "type": "VkRenderPassBeginInfo",
        "rawType": "const VkRenderPassBeginInfo *",
        "name": "pRenderPassBegin",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRenderPassBeginInfo"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the render pass to begin an instance of, and the framebuffer the instance uses."
        }
      },
      {
        "text": "const VkSubpassBeginInfoKHR * pSubpassBeginInfo",
        "type": "VkSubpassBeginInfoKHR",
        "rawType": "const VkSubpassBeginInfoKHR *",
        "name": "pSubpassBeginInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassBeginInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about the subpass which is about to begin rendering."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Begin a new render pass"
    }
  },
  {
    "text": "void vkCmdNextSubpass2KHR",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdNextSubpass2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer in which to record the command."
        }
      },
      {
        "text": "const VkSubpassBeginInfoKHR * pSubpassBeginInfo",
        "type": "VkSubpassBeginInfoKHR",
        "rawType": "const VkSubpassBeginInfoKHR *",
        "name": "pSubpassBeginInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassBeginInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about the subpass which is about to begin rendering."
        }
      },
      {
        "text": "const VkSubpassEndInfoKHR * pSubpassEndInfo",
        "type": "VkSubpassEndInfoKHR",
        "rawType": "const VkSubpassEndInfoKHR *",
        "name": "pSubpassEndInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassEndInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about how the previous subpass will be ended."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "Transition to the next subpass of a render pass"
    }
  },
  {
    "text": "void vkCmdEndRenderPass2KHR",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdEndRenderPass2KHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer in which to end the current render pass instance."
        }
      },
      {
        "text": "const VkSubpassEndInfoKHR * pSubpassEndInfo",
        "type": "VkSubpassEndInfoKHR",
        "rawType": "const VkSubpassEndInfoKHR *",
        "name": "pSubpassEndInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSubpassEndInfoKHR"
            }
          ],
          "description": " is a reference to a {#0#} structure containing information about how the previous subpass will be ended."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Render Pass",
      "description": "End the current render pass"
    }
  },
  {
    "text": "VkResult vkGetSemaphoreCounterValueKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetSemaphoreCounterValueKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the semaphore."
        }
      },
      {
        "text": "VkSemaphore semaphore",
        "type": "VkSemaphore",
        "rawType": "VkSemaphore",
        "name": "semaphore",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the handle of the semaphore to query."
        }
      },
      {
        "text": "uint64_t * pValue",
        "type": "uint64_t",
        "rawType": "uint64_t *",
        "name": "pValue",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a 64-bit integer value in which the current counter value of the semaphore is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Query the current state of a timeline semaphore"
    }
  },
  {
    "text": "VkResult vkWaitSemaphoresKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkWaitSemaphoresKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the semaphore."
        }
      },
      {
        "text": "const VkSemaphoreWaitInfoKHR * pWaitInfo",
        "type": "VkSemaphoreWaitInfoKHR",
        "rawType": "const VkSemaphoreWaitInfoKHR *",
        "name": "pWaitInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSemaphoreWaitInfoKHR"
            }
          ],
          "description": " is a reference to an instance of the {#0#} structure containing information about the wait condition."
        }
      },
      {
        "text": "uint64_t timeout",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "timeout",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "timeout"
            }
          ],
          "description": " is the timeout period in units of nanoseconds. {#2#} is adjusted to the closest value allowed by the implementation-dependent timeout accuracy, which {#0#} be substantially longer than one nanosecond, and {#1#} be longer than the requested period."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Wait for timeline semaphores on the host"
    }
  },
  {
    "text": "VkResult vkSignalSemaphoreKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkSignalSemaphoreKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the semaphore."
        }
      },
      {
        "text": "const VkSemaphoreSignalInfoKHR * pSignalInfo",
        "type": "VkSemaphoreSignalInfoKHR",
        "rawType": "const VkSemaphoreSignalInfoKHR *",
        "name": "pSignalInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkSemaphoreSignalInfoKHR"
            }
          ],
          "description": " is a reference to an instance of the {#0#} structure containing information about the signal operation."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Synchronization and Cache Control",
      "description": "Signal a timeline semaphore on the host"
    }
  },
  {
    "text": "VkResult vkGetAndroidHardwareBufferPropertiesANDROID",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetAndroidHardwareBufferPropertiesANDROID",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const struct AHardwareBuffer * buffer",
        "type": "AHardwareBuffer",
        "rawType": "const struct AHardwareBuffer *",
        "name": "buffer",
        "isConstant": true,
        "dereferenceCount": 1,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the Android hardware buffer which will be imported."
        }
      },
      {
        "text": "VkAndroidHardwareBufferPropertiesANDROID * pProperties",
        "type": "VkAndroidHardwareBufferPropertiesANDROID",
        "rawType": "VkAndroidHardwareBufferPropertiesANDROID *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAndroidHardwareBufferPropertiesANDROID"
            },
            {
              "kind": "pname",
              "value": "buffer"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the properties of {#1#} are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Get Properties of External Memory Android Hardware Buffers"
    }
  },
  {
    "text": "VkResult vkGetMemoryAndroidHardwareBufferANDROID",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetMemoryAndroidHardwareBufferANDROID",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that created the device memory being exported."
        }
      },
      {
        "text": "const VkMemoryGetAndroidHardwareBufferInfoANDROID * pInfo",
        "type": "VkMemoryGetAndroidHardwareBufferInfoANDROID",
        "rawType": "const VkMemoryGetAndroidHardwareBufferInfoANDROID *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkMemoryGetAndroidHardwareBufferInfoANDROID"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters of the export operation."
        }
      },
      {
        "text": "struct AHardwareBuffer ** pBuffer",
        "type": "AHardwareBuffer",
        "rawType": "struct AHardwareBuffer **",
        "name": "pBuffer",
        "isConstant": false,
        "dereferenceCount": 2,
        "jsType": "undefined",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return an Android hardware buffer representing the underlying resources of the device memory object."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Memory Allocation",
      "description": "Get an Android hardware buffer for a memory object"
    }
  },
  {
    "text": "void vkCmdDrawIndirectCountKHR",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawIndirectCountKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where parameters begin."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkBuffer countBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "countBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where the draw count begins."
        }
      },
      {
        "text": "VkDeviceSize countBufferOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "countBufferOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t maxDrawCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDrawCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "countBuffer"
            },
            {
              "kind": "pname",
              "value": "maxDrawCount"
            }
          ],
          "description": " specifies the maximum number of draws that will be executed. The actual number of executed draw calls is the minimum of the count specified in {#0#} and {#1#}."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the byte stride between successive sets of draw parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Perform an indirect draw with the draw count sourced from a buffer"
    }
  },
  {
    "text": "void vkCmdDrawIndexedIndirectCountKHR",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawIndexedIndirectCountKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where parameters begin."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkBuffer countBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "countBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where the draw count begins."
        }
      },
      {
        "text": "VkDeviceSize countBufferOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "countBufferOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t maxDrawCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDrawCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "countBuffer"
            },
            {
              "kind": "pname",
              "value": "maxDrawCount"
            }
          ],
          "description": " specifies the maximum number of draws that will be executed. The actual number of executed draw calls is the minimum of the count specified in {#0#} and {#1#}."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the byte stride between successive sets of draw parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Perform an indexed indirect draw with the draw count sourced from a buffer"
    }
  },
  {
    "text": "void vkCmdSetCheckpointNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetCheckpointNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer that will receive the marker"
        }
      },
      {
        "text": "const void * pCheckpointMarker",
        "type": "void",
        "rawType": "const void *",
        "name": "pCheckpointMarker",
        "isConstant": true,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": true,
        "isDynamicVoidPointer": false,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an opaque application-provided value that will be associated with the checkpoint."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_device_diagnostic_checkpoints",
      "description": "insert diagnostic checkpoint in command stream"
    }
  },
  {
    "text": "void vkGetQueueCheckpointDataNV",
    "type": "void",
    "rawType": "void",
    "name": "vkGetQueueCheckpointDataNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkQueue"
            }
          ],
          "description": " is the {#0#} object the caller would like to retrieve checkpoint data for"
        }
      },
      {
        "text": "uint32_t * pCheckpointDataCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pCheckpointDataCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of checkpoint markers available or queried, as described below."
        }
      },
      {
        "text": "VkCheckpointDataNV * pCheckpointData",
        "type": "VkCheckpointDataNV",
        "rawType": "VkCheckpointDataNV *",
        "name": "pCheckpointData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pCheckpointDataCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkCheckpointDataNV"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_device_diagnostic_checkpoints",
      "description": "retrieve diagnostic checkpoint data"
    }
  },
  {
    "text": "void vkCmdBindTransformFeedbackBuffersEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBindTransformFeedbackBuffersEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t firstBinding",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstBinding",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first transform feedback binding whose state is updated by the command."
        }
      },
      {
        "text": "uint32_t bindingCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindingCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of transform feedback bindings whose state is updated by the command."
        }
      },
      {
        "text": "const VkBuffer * pBuffers",
        "type": "VkBuffer",
        "rawType": "const VkBuffer *",
        "name": "pBuffers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "bindingCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of buffer handles."
        }
      },
      {
        "text": "const VkDeviceSize * pOffsets",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pOffsets",
        "isConstant": true,
        "dereferenceCount": 1,
        "baseType": "VkDeviceSize",
        "isArray": true,
        "length": "bindingCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of buffer offsets."
        }
      },
      {
        "text": "const VkDeviceSize * pSizes",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pSizes",
        "isConstant": true,
        "dereferenceCount": 1,
        "baseType": "VkDeviceSize",
        "isArray": true,
        "length": "bindingCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_WHOLE_SIZE"
            },
            {
              "kind": "pname",
              "value": "pSizes"
            },
            {
              "kind": "pname",
              "value": "pSizes"
            }
          ],
          "description": " is an optional array of buffer sizes, specifying the maximum number of bytes to capture to the corresponding transform feedback buffer. If {#1#} is <i>null</i>, or the value of the {#2#} array element is {#0#}, then the maximum bytes captured will be the size of the corresponding buffer minus the buffer offset."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Bind transform feedback buffers to a command buffer"
    }
  },
  {
    "text": "void vkCmdBeginTransformFeedbackEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBeginTransformFeedbackEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t firstCounterBuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstCounterBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCounterBuffers"
            },
            {
              "kind": "pname",
              "value": "pCounterBufferOffsets"
            }
          ],
          "description": " is the index of the first transform feedback buffer corresponding to {#0#}[0] and {#1#}[0]."
        }
      },
      {
        "text": "uint32_t counterBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "counterBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkBuffer * pCounterBuffers",
        "type": "VkBuffer",
        "rawType": "const VkBuffer *",
        "name": "pCounterBuffers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "counterBufferCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCmdEndTransformFeedbackEXT"
            },
            {
              "kind": "pname",
              "value": "pCounterBuffers"
            },
            {
              "kind": "pname",
              "value": "pCounterBuffers"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is an optional array of buffer handles to the counter buffers which contain a 4 byte integer value representing the byte offset from the start of the corresponding transform feedback buffer from where to start capturing vertex data. If the byte offset stored to the counter buffer location was done using {#0#} it can be used to resume transform feedback from the previous location. If {#1#} is <i>null</i>, then transform feedback will start capturing vertex data to byte offset zero in all bound transform feedback buffers. For each element of {#2#} that is {#3#}, transform feedback will start capturing vertex data to byte zero in the corresponding bound transform feedback buffer."
        }
      },
      {
        "text": "const VkDeviceSize * pCounterBufferOffsets",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pCounterBufferOffsets",
        "isConstant": true,
        "dereferenceCount": 1,
        "baseType": "VkDeviceSize",
        "isArray": true,
        "length": "counterBufferCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "pCounterBuffers"
            },
            {
              "kind": "pname",
              "value": "pCounterBufferOffsets"
            }
          ],
          "description": " is an optional array of offsets within each of the {#1#} where the counter values were previously written. The location in each counter buffer at these offsets {#0#} be large enough to contain 4 bytes of data. This data is the number of bytes captured by the previous transform feedback to this buffer. If {#2#} is <i>null</i>, then it is assumed the offsets are zero."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Make transform feedback active in the command buffer"
    }
  },
  {
    "text": "void vkCmdEndTransformFeedbackEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdEndTransformFeedbackEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t firstCounterBuffer",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstCounterBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pCounterBuffers"
            },
            {
              "kind": "pname",
              "value": "pCounterBufferOffsets"
            }
          ],
          "description": " is the index of the first transform feedback buffer corresponding to {#0#}[0] and {#1#}[0]."
        }
      },
      {
        "text": "uint32_t counterBufferCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "counterBufferCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkBuffer * pCounterBuffers",
        "type": "VkBuffer",
        "rawType": "const VkBuffer *",
        "name": "pCounterBuffers",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "counterBufferCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "flink",
              "value": "vkCmdBeginTransformFeedbackEXT"
            },
            {
              "kind": "flink",
              "value": "vkCmdDrawIndirectByteCountEXT"
            }
          ],
          "description": " is an optional array of buffer handles to the counter buffers used to record the current byte positions of each transform feedback buffer where the next vertex output data would be captured. This {#0#} be used by a subsequent {#1#} call to resume transform feedback capture from this position. It can also be used by {#2#} to determine the vertex count of the draw call."
        }
      },
      {
        "text": "const VkDeviceSize * pCounterBufferOffsets",
        "type": "uint64_t",
        "rawType": "const uint64_t *",
        "name": "pCounterBufferOffsets",
        "isConstant": true,
        "dereferenceCount": 1,
        "baseType": "VkDeviceSize",
        "isArray": true,
        "length": "counterBufferCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "BigUint64Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "pCounterBuffers"
            },
            {
              "kind": "pname",
              "value": "pCounterBufferOffsets"
            }
          ],
          "description": " is an optional array of offsets within each of the {#1#} where the counter values can be written. The location in each counter buffer at these offsets {#0#} be large enough to contain 4 bytes of data. The data stored at this location is the byte offset from the start of the transform feedback buffer binding where the next vertex data would be written. If {#2#} is <i>null</i>, then it is assumed the offsets are zero."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fixed-Function Vertex Post-Processing",
      "description": "Make transform feedback inactive in the command buffer"
    }
  },
  {
    "text": "void vkCmdBeginQueryIndexedEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBeginQueryIndexedEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool that will manage the results of the query."
        }
      },
      {
        "text": "uint32_t query",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "query",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query index within the query pool that will contain the results."
        }
      },
      {
        "text": "VkQueryControlFlags flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkQueryControlFlagBits",
        "bitmaskRawType": "VkQueryControlFlags",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            },
            {
              "kind": "elink",
              "value": "VkQueryControlFlagBits"
            }
          ],
          "description": " is a bitmask of {#1#} specifying constraints on the types of queries that {#0#} be performed."
        }
      },
      {
        "text": "uint32_t index",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "index",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "ename",
              "value": "VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT"
            }
          ],
          "description": " is the query type specific index. When the query type is {#0#} the index represents the vertex stream."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Begin an indexed query"
    }
  },
  {
    "text": "void vkCmdEndQueryIndexedEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdEndQueryIndexedEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which this command will be recorded."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool that is managing the results of the query."
        }
      },
      {
        "text": "uint32_t query",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "query",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query index within the query pool where the result is stored."
        }
      },
      {
        "text": "uint32_t index",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "index",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query type specific index."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Queries",
      "description": "Ends a query"
    }
  },
  {
    "text": "void vkCmdDrawIndirectByteCountEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawIndirectByteCountEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "uint32_t instanceCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "instanceCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of instances to draw."
        }
      },
      {
        "text": "uint32_t firstInstance",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstInstance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance ID of the first instance to draw."
        }
      },
      {
        "text": "VkBuffer counterBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "counterBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer handle from where the byte count is read."
        }
      },
      {
        "text": "VkDeviceSize counterBufferOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "counterBufferOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the offset into the buffer used to read the byte count, which is used to calculate the vertex count for this draw call."
        }
      },
      {
        "text": "uint32_t counterOffset",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "counterOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "counterBuffer"
            },
            {
              "kind": "pname",
              "value": "counterBufferOffset"
            }
          ],
          "description": " is subtracted from the byte count read from the {#0#} at the {#1#}"
        }
      },
      {
        "text": "uint32_t vertexStride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "vertexStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "code",
              "value": "XfbStride"
            }
          ],
          "description": " is the stride in bytes between each element of the vertex data that is used to calculate the vertex count from the counter value. This value is typically the same value that was used in the graphics pipeline state when the transform feedback was captured as the {#0#}."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Drawing Commands",
      "description": "Draw primitives where the vertex count is derived from the counter byte value in the counter buffer"
    }
  },
  {
    "text": "void vkCmdSetExclusiveScissorNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetExclusiveScissorNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t firstExclusiveScissor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstExclusiveScissor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first exclusive scissor rectangle whose state is updated by the command."
        }
      },
      {
        "text": "uint32_t exclusiveScissorCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "exclusiveScissorCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of exclusive scissor rectangles updated by the command."
        }
      },
      {
        "text": "const VkRect2D * pExclusiveScissors",
        "type": "VkRect2D",
        "rawType": "const VkRect2D *",
        "name": "pExclusiveScissors",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "exclusiveScissorCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRect2D"
            }
          ],
          "description": " is an array of {#0#} structures defining exclusive scissor rectangles."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Set the dynamic exclusive scissor rectangles on a command buffer"
    }
  },
  {
    "text": "void vkCmdBindShadingRateImageNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBindShadingRateImageNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkImageView imageView",
        "type": "VkImageView",
        "rawType": "VkImageView",
        "name": "imageView",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "may",
              "value": ""
            },
            {
              "kind": "pname",
              "value": "imageView"
            },
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is an image view handle specifying the shading rate image. {#1#} {#0#} be set to {#2#}, which is equivalent to specifying a view of an image filled with zero values."
        }
      },
      {
        "text": "VkImageLayout imageLayout",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "imageLayout",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkImageLayout",
        "enumRawType": "VkImageLayout",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "imageView"
            }
          ],
          "description": " is the layout that the image subresources accessible from {#0#} will be in when the shading rate image is accessed."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Bind a shading rate image on a command buffer"
    }
  },
  {
    "text": "void vkCmdSetViewportShadingRatePaletteNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetViewportShadingRatePaletteNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t firstViewport",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstViewport",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the first viewport whose shading rate palette is updated by the command."
        }
      },
      {
        "text": "uint32_t viewportCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "viewportCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of viewports whose shading rate palettes are updated by the command."
        }
      },
      {
        "text": "const VkShadingRatePaletteNV * pShadingRatePalettes",
        "type": "VkShadingRatePaletteNV",
        "rawType": "const VkShadingRatePaletteNV *",
        "name": "pShadingRatePalettes",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "viewportCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkShadingRatePaletteNV"
            }
          ],
          "description": " is an array of {#0#} structures defining the palette for each viewport."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Set shading rate image palettes on a command buffer"
    }
  },
  {
    "text": "void vkCmdSetCoarseSampleOrderNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetCoarseSampleOrderNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkCoarseSampleOrderTypeNV sampleOrderType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "sampleOrderType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCoarseSampleOrderTypeNV",
        "enumRawType": "VkCoarseSampleOrderTypeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " specifies the mechanism used to order coverage samples in fragments larger than one pixel."
        }
      },
      {
        "text": "uint32_t customSampleOrderCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "customSampleOrderCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " specifies the number of custom sample orderings to use when ordering coverage samples."
        }
      },
      {
        "text": "const VkCoarseSampleOrderCustomNV * pCustomSampleOrders",
        "type": "VkCoarseSampleOrderCustomNV",
        "rawType": "const VkCoarseSampleOrderCustomNV *",
        "name": "pCustomSampleOrders",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "customSampleOrderCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCoarseSampleOrderCustomNV"
            }
          ],
          "description": " is an array of {#0#} structures, each of which specifies the coverage sample order for a single combination of fragment area and coverage sample count."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Set sample order for coarse fragments on a command buffer"
    }
  },
  {
    "text": "void vkCmdDrawMeshTasksNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawMeshTasksNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t taskCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "taskCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of local workgroups to dispatch in the X dimension. Y and Z dimension are implicitly set to one."
        }
      },
      {
        "text": "uint32_t firstTask",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstTask",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the X component of the first workgroup ID."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_mesh_shader",
      "description": "Draw mesh task work items"
    }
  },
  {
    "text": "void vkCmdDrawMeshTasksIndirectNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawMeshTasksIndirectNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where parameters begin."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t drawCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "drawCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "can",
              "value": ""
            }
          ],
          "description": " is the number of draws to execute, and {#0#} be zero."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the byte stride between successive sets of draw parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_mesh_shader",
      "description": "Issue an indirect mesh tasks draw into a command buffer"
    }
  },
  {
    "text": "void vkCmdDrawMeshTasksIndirectCountNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdDrawMeshTasksIndirectCountNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command is recorded."
        }
      },
      {
        "text": "VkBuffer buffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "buffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where parameters begin."
        }
      },
      {
        "text": "VkDeviceSize offset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "offset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkBuffer countBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "countBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " where the draw count begins."
        }
      },
      {
        "text": "VkDeviceSize countBufferOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "countBufferOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "uint32_t maxDrawCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "maxDrawCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "countBuffer"
            },
            {
              "kind": "pname",
              "value": "maxDrawCount"
            }
          ],
          "description": " specifies the maximum number of draws that will be executed. The actual number of executed draw calls is the minimum of the count specified in {#0#} and {#1#}."
        }
      },
      {
        "text": "uint32_t stride",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "stride",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the byte stride between successive sets of draw parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_mesh_shader",
      "description": "Perform an indirect mesh tasks draw with the draw count sourced from a buffer"
    }
  },
  {
    "text": "VkResult vkCompileDeferredNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCompileDeferredNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device containing the ray tracing pipeline."
        }
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the ray tracing pipeline object containing the shaders."
        }
      },
      {
        "text": "uint32_t shader",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "shader",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the index of the shader to compile."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Deferred compilation of shaders"
    }
  },
  {
    "text": "VkResult vkCreateAccelerationStructureNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateAccelerationStructureNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the buffer object."
        }
      },
      {
        "text": "const VkAccelerationStructureCreateInfoNV * pCreateInfo",
        "type": "VkAccelerationStructureCreateInfoNV",
        "rawType": "const VkAccelerationStructureCreateInfoNV *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkAccelerationStructureCreateInfoNV"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting creation of the acceleration structure."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkAccelerationStructureNV * pAccelerationStructure",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV *",
        "name": "pAccelerationStructure",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkAccelerationStructureNV"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting acceleration structure object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Create a new acceleration structure object"
    }
  },
  {
    "text": "void vkDestroyAccelerationStructureNV",
    "type": "void",
    "rawType": "void",
    "name": "vkDestroyAccelerationStructureNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that destroys the buffer."
        }
      },
      {
        "text": "VkAccelerationStructureNV accelerationStructure",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "accelerationStructure",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the acceleration structure to destroy."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Destroy an acceleration structure object"
    }
  },
  {
    "text": "void vkGetAccelerationStructureMemoryRequirementsNV",
    "type": "void",
    "rawType": "void",
    "name": "vkGetAccelerationStructureMemoryRequirementsNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device on which the acceleration structure was created."
        }
      },
      {
        "text": "const VkAccelerationStructureMemoryRequirementsInfoNV * pInfo",
        "type": "VkAccelerationStructureMemoryRequirementsInfoNV",
        "rawType": "const VkAccelerationStructureMemoryRequirementsInfoNV *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " specifies the acceleration structure to get memory requirements for."
        }
      },
      {
        "text": "VkMemoryRequirements2KHR * pMemoryRequirements",
        "type": "VkMemoryRequirements2KHR",
        "rawType": "VkMemoryRequirements2KHR *",
        "name": "pMemoryRequirements",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " returns the requested acceleration structure memory requirements."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Get acceleration structure memory requirements"
    }
  },
  {
    "text": "VkResult vkBindAccelerationStructureMemoryNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkBindAccelerationStructureMemoryNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the acceleration structures and memory."
        }
      },
      {
        "text": "uint32_t bindInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "bindInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkBindAccelerationStructureMemoryInfoNV * pBindInfos",
        "type": "VkBindAccelerationStructureMemoryInfoNV",
        "rawType": "const VkBindAccelerationStructureMemoryInfoNV *",
        "name": "pBindInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "bindInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBindAccelerationStructureMemoryInfoNV"
            }
          ],
          "description": " is an array of {#0#} structures describing images and memory to bind."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Bind acceleration structure memory"
    }
  },
  {
    "text": "void vkCmdCopyAccelerationStructureNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdCopyAccelerationStructureNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkAccelerationStructureNV dst",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "dst",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to the target acceleration structure for the copy."
        }
      },
      {
        "text": "VkAccelerationStructureNV src",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "src",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to the source acceleration structure for the copy."
        }
      },
      {
        "text": "VkCopyAccelerationStructureModeNV mode",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "mode",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkCopyAccelerationStructureModeNV",
        "enumRawType": "VkCopyAccelerationStructureModeNV",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkCopyAccelerationStructureModeNV"
            }
          ],
          "description": " is a {#0#} value specifying additional operations to perform during the copy."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Copy an acceleration structure"
    }
  },
  {
    "text": "void vkCmdWriteAccelerationStructuresPropertiesNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdWriteAccelerationStructuresPropertiesNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t accelerationStructureCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "accelerationStructureCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the count of acceleration structures for which to query the property."
        }
      },
      {
        "text": "const VkAccelerationStructureNV * pAccelerationStructures",
        "type": "VkAccelerationStructureNV",
        "rawType": "const VkAccelerationStructureNV *",
        "name": "pAccelerationStructures",
        "isConstant": true,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "accelerationStructureCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array of existing previously built acceleration structures."
        }
      },
      {
        "text": "VkQueryType queryType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "queryType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkQueryType",
        "enumRawType": "VkQueryType",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkQueryType"
            }
          ],
          "description": " is a {#0#} value specifying the type of queries managed by the pool."
        }
      },
      {
        "text": "VkQueryPool queryPool",
        "type": "VkQueryPool",
        "rawType": "VkQueryPool",
        "name": "queryPool",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the query pool that will manage the results of the query."
        }
      },
      {
        "text": "uint32_t firstQuery",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstQuery",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "accelerationStructureCount"
            }
          ],
          "description": " is the first query index within the query pool that will contain the {#0#} number of results."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Write acceleration structure result parameters to query results."
    }
  },
  {
    "text": "void vkCmdBuildAccelerationStructureNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdBuildAccelerationStructureNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "const VkAccelerationStructureInfoNV * pInfo",
        "type": "VkAccelerationStructureInfoNV",
        "rawType": "const VkAccelerationStructureInfoNV *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " contains the shared information for the acceleration structure's structure."
        }
      },
      {
        "text": "VkBuffer instanceData",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "instanceData",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "must",
              "value": ""
            }
          ],
          "description": " is the buffer containing instance data that will be used to build the acceleration structure as described in <<acceleration-structure-instance, Accelerator structure instances.>> This parameter {#0#} be <i>null</i> for bottom level acceleration structures."
        }
      },
      {
        "text": "VkDeviceSize instanceOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "instanceOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "instanceData"
            }
          ],
          "description": " is the offset in bytes (relative to the start of {#0#}) at which the instance data is located."
        }
      },
      {
        "text": "VkBool32 update",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "update",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkBool32",
        "isBoolean": true,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkAccelerationStructureNV dst",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "dst",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to the target acceleration structure for the build."
        }
      },
      {
        "text": "VkAccelerationStructureNV src",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "src",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "dst"
            }
          ],
          "description": " is a reference to an existing acceleration structure that is to be used to update the {#0#} acceleration structure."
        }
      },
      {
        "text": "VkBuffer scratch",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "scratch",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBuffer"
            }
          ],
          "description": " is the {#0#} that will be used as scratch memory for the build."
        }
      },
      {
        "text": "VkDeviceSize scratchOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "scratchOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "scratch"
            }
          ],
          "description": " is the offset in bytes relative to the start of {#0#} that will be used as a scratch memory."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Build an acceleration structure"
    }
  },
  {
    "text": "void vkCmdTraceRaysNV",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdTraceRaysNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "VkBuffer raygenShaderBindingTableBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "raygenShaderBindingTableBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer object that holds the shader binding table data for the ray generation shader stage."
        }
      },
      {
        "text": "VkDeviceSize raygenShaderBindingOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "raygenShaderBindingOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "raygenShaderBindingTableBuffer"
            }
          ],
          "description": " is the offset in bytes (relative to {#0#}) of the ray generation shader being used for the trace."
        }
      },
      {
        "text": "VkBuffer missShaderBindingTableBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "missShaderBindingTableBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer object that holds the shader binding table data for the miss shader stage."
        }
      },
      {
        "text": "VkDeviceSize missShaderBindingOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "missShaderBindingOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "missShaderBindingTableBuffer"
            }
          ],
          "description": " is the offset in bytes (relative to {#0#}) of the miss shader being used for the trace."
        }
      },
      {
        "text": "VkDeviceSize missShaderBindingStride",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "missShaderBindingStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "missShaderBindingTableBuffer"
            }
          ],
          "description": " is the size in bytes of each shader binding table record in {#0#}."
        }
      },
      {
        "text": "VkBuffer hitShaderBindingTableBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "hitShaderBindingTableBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer object that holds the shader binding table data for the hit shader stages."
        }
      },
      {
        "text": "VkDeviceSize hitShaderBindingOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "hitShaderBindingOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "hitShaderBindingTableBuffer"
            }
          ],
          "description": " is the offset in bytes (relative to {#0#}) of the hit shader group being used for the trace."
        }
      },
      {
        "text": "VkDeviceSize hitShaderBindingStride",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "hitShaderBindingStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "hitShaderBindingTableBuffer"
            }
          ],
          "description": " is the size in bytes of each shader binding table record in {#0#}."
        }
      },
      {
        "text": "VkBuffer callableShaderBindingTableBuffer",
        "type": "VkBuffer",
        "rawType": "VkBuffer",
        "name": "callableShaderBindingTableBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the buffer object that holds the shader binding table data for the callable shader stage."
        }
      },
      {
        "text": "VkDeviceSize callableShaderBindingOffset",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "callableShaderBindingOffset",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "callableShaderBindingTableBuffer"
            }
          ],
          "description": " is the offset in bytes (relative to {#0#}) of the callable shader being used for the trace."
        }
      },
      {
        "text": "VkDeviceSize callableShaderBindingStride",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "callableShaderBindingStride",
        "isConstant": false,
        "dereferenceCount": 0,
        "baseType": "VkDeviceSize",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "callableShaderBindingTableBuffer"
            }
          ],
          "description": " is the size in bytes of each shader binding table record in {#0#}."
        }
      },
      {
        "text": "uint32_t width",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "width",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the width of the ray trace query dimensions."
        }
      },
      {
        "text": "uint32_t height",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "height",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is height of the ray trace query dimensions."
        }
      },
      {
        "text": "uint32_t depth",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "depth",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is depth of the ray trace query dimensions."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Initialize a ray tracing dispatch"
    }
  },
  {
    "text": "VkResult vkGetRayTracingShaderGroupHandlesNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetRayTracingShaderGroupHandlesNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device containing the ray tracing pipeline."
        }
      },
      {
        "text": "VkPipeline pipeline",
        "type": "VkPipeline",
        "rawType": "VkPipeline",
        "name": "pipeline",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the ray tracing pipeline object containing the shaders."
        }
      },
      {
        "text": "uint32_t firstGroup",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "firstGroup",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkRayTracingShaderGroupCreateInfoNV"
            },
            {
              "kind": "pname",
              "value": "pGroups"
            }
          ],
          "description": " is the index of the first group to retrieve a handle for from the {#0#}::{#1#} array."
        }
      },
      {
        "text": "uint32_t groupCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "groupCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the number of shader handles to retrieve."
        }
      },
      {
        "text": "size_t dataSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "dataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " is the size in bytes of the buffer pointed to by {#0#}."
        }
      },
      {
        "text": "void * pData",
        "type": "void",
        "rawType": "void *",
        "name": "pData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a user-allocated buffer where the results will be written."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Query ray tracing pipeline shader group handles"
    }
  },
  {
    "text": "VkResult vkGetAccelerationStructureHandleNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetAccelerationStructureHandleNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the acceleration structures."
        }
      },
      {
        "text": "VkAccelerationStructureNV accelerationStructure",
        "type": "VkAccelerationStructureNV",
        "rawType": "VkAccelerationStructureNV",
        "name": "accelerationStructure",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the acceleration structure."
        }
      },
      {
        "text": "size_t dataSize",
        "type": "size_t",
        "rawType": "size_t",
        "name": "dataSize",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "pname",
              "value": "pData"
            }
          ],
          "description": " is the size in bytes of the buffer pointed to by {#0#}."
        }
      },
      {
        "text": "void * pData",
        "type": "void",
        "rawType": "void *",
        "name": "pData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isArray": true,
        "length": "dataSize",
        "isDynamicArray": true,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a user-allocated buffer where the results will be written."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Get opaque acceleration structure handle"
    }
  },
  {
    "text": "VkResult vkCreateRayTracingPipelinesNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateRayTracingPipelinesNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that creates the ray tracing pipelines."
        }
      },
      {
        "text": "VkPipelineCache pipelineCache",
        "type": "VkPipelineCache",
        "rawType": "VkPipelineCache",
        "name": "pipelineCache",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "dlink",
              "value": "VK_NULL_HANDLE"
            }
          ],
          "description": " is either {#0#}, indicating that pipeline caching is disabled, or the handle of a valid <<pipelines-cache,pipeline cache>> object, in which case use of that cache is enabled for the duration of the command."
        }
      },
      {
        "text": "uint32_t createInfoCount",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "createInfoCount",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkRayTracingPipelineCreateInfoNV * pCreateInfos",
        "type": "VkRayTracingPipelineCreateInfoNV",
        "rawType": "const VkRayTracingPipelineCreateInfoNV *",
        "name": "pCreateInfos",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "createInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkRayTracingPipelineCreateInfoNV"
            }
          ],
          "description": " is an array of {#0#} structures."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " controls host memory allocation as described in the <<memory-allocation, Memory Allocation>> chapter."
        }
      },
      {
        "text": "VkPipeline * pPipelines",
        "type": "VkPipeline",
        "rawType": "VkPipeline *",
        "name": "pPipelines",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "isArray": true,
        "length": "createInfoCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is an array in which the resulting ray tracing pipeline objects are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_NV_ray_tracing",
      "description": "Creates a new ray tracing pipeline object"
    }
  },
  {
    "text": "VkResult vkGetImageDrmFormatModifierPropertiesEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetImageDrmFormatModifierPropertiesEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image."
        }
      },
      {
        "text": "VkImage image",
        "type": "VkImage",
        "rawType": "VkImage",
        "name": "image",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queried image."
        }
      },
      {
        "text": "VkImageDrmFormatModifierPropertiesEXT * pProperties",
        "type": "VkImageDrmFormatModifierPropertiesEXT",
        "rawType": "VkImageDrmFormatModifierPropertiesEXT *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " will return properties of the image's _DRM format modifier_."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Returns an image\\"
    }
  },
  {
    "text": "VkDeviceAddress vkGetBufferDeviceAddressEXT",
    "type": "uint64_t",
    "rawType": "uint64_t",
    "name": "vkGetBufferDeviceAddressEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "baseType": "VkDeviceAddress",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that the buffer was created on."
        }
      },
      {
        "text": "const VkBufferDeviceAddressInfoEXT * pInfo",
        "type": "VkBufferDeviceAddressInfoEXT",
        "rawType": "const VkBufferDeviceAddressInfoEXT *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkBufferDeviceAddressInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying the buffer to retrieve an address for."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Descriptors",
      "description": "Query an address of a buffer"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceCooperativeMatrixPropertiesNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device."
        }
      },
      {
        "text": "uint32_t * pPropertyCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPropertyCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of cooperative matrix properties available or queried."
        }
      },
      {
        "text": "VkCooperativeMatrixPropertiesNV * pProperties",
        "type": "VkCooperativeMatrixPropertiesNV",
        "rawType": "VkCooperativeMatrixPropertiesNV *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pPropertyCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkCooperativeMatrixPropertiesNV"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Shaders",
      "description": "Returns properties describing what cooperative matrix types are supported"
    }
  },
  {
    "text": "uint32_t vkGetImageViewHandleNVX",
    "type": "uint32_t",
    "rawType": "uint32_t",
    "name": "vkGetImageViewHandleNVX",
    "isConstant": false,
    "dereferenceCount": 0,
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that owns the image view."
        }
      },
      {
        "text": "const VkImageViewHandleInfoNVX * pInfo",
        "type": "VkImageViewHandleInfoNVX",
        "rawType": "const VkImageViewHandleInfoNVX *",
        "name": "pInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " describes the image view to query and type of handle."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Resource Creation",
      "description": "Get the handle for an image view for a specific descriptor type"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSurfacePresentModes2EXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSurfacePresentModes2EXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            }
          ],
          "description": " is the physical device that will be associated with the swapchain to be created, as described for {#0#}."
        }
      },
      {
        "text": "const VkPhysicalDeviceSurfaceInfo2KHR * pSurfaceInfo",
        "type": "VkPhysicalDeviceSurfaceInfo2KHR",
        "rawType": "const VkPhysicalDeviceSurfaceInfo2KHR *",
        "name": "pSurfaceInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSurfaceInfo2KHR"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the surface and other fixed parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "uint32_t * pPresentModeCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pPresentModeCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of presentation modes available or queried, as described below."
        }
      },
      {
        "text": "VkPresentModeKHR * pPresentModes",
        "type": "int32_t",
        "rawType": "int32_t *",
        "name": "pPresentModes",
        "isConstant": false,
        "dereferenceCount": 1,
        "enumType": "VkPresentModeKHR",
        "enumRawType": "VkPresentModeKHR *",
        "isArray": true,
        "length": "pPresentModeCount",
        "isDynamicArray": true,
        "isNumericArray": true,
        "isTypedArray": true,
        "jsTypedArrayName": "Int32Array",
        "jsType": "ArrayBufferView",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "elink",
              "value": "VkPresentModeKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} values, indicating the supported presentation modes."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query supported presentation modes"
    }
  },
  {
    "text": "VkResult vkGetDeviceGroupSurfacePresentModes2EXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetDeviceGroupSurfacePresentModes2EXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device."
        }
      },
      {
        "text": "const VkPhysicalDeviceSurfaceInfo2KHR * pSurfaceInfo",
        "type": "VkPhysicalDeviceSurfaceInfo2KHR",
        "rawType": "const VkPhysicalDeviceSurfaceInfo2KHR *",
        "name": "pSurfaceInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "flink",
              "value": "vkCreateSwapchainKHR"
            },
            {
              "kind": "slink",
              "value": "VkPhysicalDeviceSurfaceInfo2KHR"
            }
          ],
          "description": " is a reference to a {#1#} structure describing the surface and other fixed parameters that would be consumed by {#0#}."
        }
      },
      {
        "text": "VkDeviceGroupPresentModeFlagsKHR * pModes",
        "type": "int32_t",
        "rawType": "int32_t *",
        "name": "pModes",
        "isConstant": false,
        "dereferenceCount": 1,
        "bitmaskType": "VkDeviceGroupPresentModeFlagBitsKHR",
        "bitmaskRawType": "VkDeviceGroupPresentModeFlagsKHR *",
        "isBitmaskType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "tlink",
              "value": "VkDeviceGroupPresentModeFlagsKHR"
            }
          ],
          "description": " is a reference to a {#0#} in which the supported device group present modes for the surface are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Query device group present capabilities for a surface"
    }
  },
  {
    "text": "VkResult vkAcquireFullScreenExclusiveModeEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAcquireFullScreenExclusiveModeEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain to acquire exclusive full-screen access for."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Acquire full-screen exclusive mode for a swapchain"
    }
  },
  {
    "text": "VkResult vkReleaseFullScreenExclusiveModeEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkReleaseFullScreenExclusiveModeEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "VkSwapchainKHR swapchain",
        "type": "VkSwapchainKHR",
        "rawType": "VkSwapchainKHR",
        "name": "swapchain",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkSurfaceKHR",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the swapchain to release exclusive full-screen access from."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_surface",
      "description": "Release full-screen exclusive mode from a swapchain"
    }
  },
  {
    "text": "VkResult vkCreateHeadlessSurfaceEXT",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCreateHeadlessSurfaceEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkInstance instance",
        "type": "VkInstance",
        "rawType": "VkInstance",
        "name": "instance",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": null,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the instance to associate the surface with."
        }
      },
      {
        "text": "const VkHeadlessSurfaceCreateInfoEXT * pCreateInfo",
        "type": "VkHeadlessSurfaceCreateInfoEXT",
        "rawType": "const VkHeadlessSurfaceCreateInfoEXT *",
        "name": "pCreateInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkHeadlessSurfaceCreateInfoEXT"
            }
          ],
          "description": " is a reference to a {#0#} structure containing parameters affecting the creation of the surface object."
        }
      },
      {
        "text": "const VkAllocationCallbacks * pAllocator",
        "type": "VkAllocationCallbacks",
        "rawType": "const VkAllocationCallbacks *",
        "name": "pAllocator",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <<memory-allocation,Memory Allocation>>)."
        }
      },
      {
        "text": "VkSurfaceKHR * pSurface",
        "type": "VkSurfaceKHR",
        "rawType": "VkSurfaceKHR *",
        "name": "pSurface",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkSurfaceKHR"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the created surface object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_EXT_headless_surface",
      "description": "Create a headless {#0#} object"
    }
  },
  {
    "text": "VkResult vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkPhysicalDevice physicalDevice",
        "type": "VkPhysicalDevice",
        "rawType": "VkPhysicalDevice",
        "name": "physicalDevice",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkInstance",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the physical device from which to query the set of combinations."
        }
      },
      {
        "text": "uint32_t * pCombinationCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pCombinationCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of combinations available or queried, as described below."
        }
      },
      {
        "text": "VkFramebufferMixedSamplesCombinationNV * pCombinations",
        "type": "VkFramebufferMixedSamplesCombinationNV",
        "rawType": "VkFramebufferMixedSamplesCombinationNV *",
        "name": "pCombinations",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pCombinationCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkFramebufferMixedSamplesCombinationNV"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} values, indicating the supported combinations of coverage reduction mode, rasterization samples, and color, depth, stencil attachment sample counts."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Fragment Operations",
      "description": "Query supported sample count combinations"
    }
  },
  {
    "text": "VkResult vkInitializePerformanceApiINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkInitializePerformanceApiINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device used for the queries."
        }
      },
      {
        "text": "const VkInitializePerformanceApiInfoINTEL * pInitializeInfo",
        "type": "VkInitializePerformanceApiInfoINTEL",
        "rawType": "const VkInitializePerformanceApiInfoINTEL *",
        "name": "pInitializeInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkInitializePerformanceApiInfoINTEL"
            }
          ],
          "description": " is a reference to a {#0#} structure specifying initialization parameters."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Initialize a device for performance queries"
    }
  },
  {
    "text": "void vkUninitializePerformanceApiINTEL",
    "type": "void",
    "rawType": "void",
    "name": "vkUninitializePerformanceApiINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device used for the queries."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Uninitialize a device for performance queries"
    }
  },
  {
    "text": "VkResult vkCmdSetPerformanceMarkerINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCmdSetPerformanceMarkerINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkPerformanceMarkerInfoINTEL * pMarkerInfo",
        "type": "VkPerformanceMarkerInfoINTEL",
        "rawType": "const VkPerformanceMarkerInfoINTEL *",
        "name": "pMarkerInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Markers"
    }
  },
  {
    "text": "VkResult vkCmdSetPerformanceStreamMarkerINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCmdSetPerformanceStreamMarkerINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      },
      {
        "text": "const VkPerformanceStreamMarkerInfoINTEL * pMarkerInfo",
        "type": "VkPerformanceStreamMarkerInfoINTEL",
        "rawType": "const VkPerformanceStreamMarkerInfoINTEL *",
        "name": "pMarkerInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM"
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Markers"
    }
  },
  {
    "text": "VkResult vkCmdSetPerformanceOverrideINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkCmdSetPerformanceOverrideINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer where the override takes place."
        }
      },
      {
        "text": "const VkPerformanceOverrideInfoINTEL * pOverrideInfo",
        "type": "VkPerformanceOverrideInfoINTEL",
        "rawType": "const VkPerformanceOverrideInfoINTEL *",
        "name": "pOverrideInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPerformanceOverrideInfoINTEL"
            }
          ],
          "description": " is a reference to a {#0#} structure selecting the parameter to override."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Performance override settings"
    }
  },
  {
    "text": "VkResult vkAcquirePerformanceConfigurationINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkAcquirePerformanceConfigurationINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device that the performance query commands will be submitted to."
        }
      },
      {
        "text": "const VkPerformanceConfigurationAcquireInfoINTEL * pAcquireInfo",
        "type": "VkPerformanceConfigurationAcquireInfoINTEL",
        "rawType": "const VkPerformanceConfigurationAcquireInfoINTEL *",
        "name": "pAcquireInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPerformanceConfigurationAcquireInfoINTEL"
            }
          ],
          "description": " is a reference to a {#0#} structure, specifying the performance configuration to acquire."
        }
      },
      {
        "text": "VkPerformanceConfigurationINTEL * pConfiguration",
        "type": "VkPerformanceConfigurationINTEL",
        "rawType": "VkPerformanceConfigurationINTEL *",
        "name": "pConfiguration",
        "isConstant": false,
        "dereferenceCount": 1,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "sname",
              "value": "VkPerformanceConfigurationINTEL"
            }
          ],
          "description": " is a reference to a {#0#} handle in which the resulting configuration object is returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Acquire the performance query capability"
    }
  },
  {
    "text": "VkResult vkReleasePerformanceConfigurationINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkReleasePerformanceConfigurationINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device associated to the configuration object to release."
        }
      },
      {
        "text": "VkPerformanceConfigurationINTEL configuration",
        "type": "VkPerformanceConfigurationINTEL",
        "rawType": "VkPerformanceConfigurationINTEL",
        "name": "configuration",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the configuration object to release."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Release a configuration to capture performance data"
    }
  },
  {
    "text": "VkResult vkQueueSetPerformanceConfigurationINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkQueueSetPerformanceConfigurationINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkQueue queue",
        "type": "VkQueue",
        "rawType": "VkQueue",
        "name": "queue",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the queue on which the configuration will be used."
        }
      },
      {
        "text": "VkPerformanceConfigurationINTEL configuration",
        "type": "VkPerformanceConfigurationINTEL",
        "rawType": "VkPerformanceConfigurationINTEL",
        "name": "configuration",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the configuration to use."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Set a performance query"
    }
  },
  {
    "text": "VkResult vkGetPerformanceParameterINTEL",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPerformanceParameterINTEL",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the logical device to query."
        }
      },
      {
        "text": "VkPerformanceParameterTypeINTEL parameter",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "parameter",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkPerformanceParameterTypeINTEL",
        "enumRawType": "VkPerformanceParameterTypeINTEL",
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the parameter to query."
        }
      },
      {
        "text": "VkPerformanceValueINTEL * pValue",
        "type": "VkPerformanceValueINTEL",
        "rawType": "VkPerformanceValueINTEL *",
        "name": "pValue",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPerformanceValueINTEL"
            }
          ],
          "description": " is a reference to a {#0#} structure in which the type and value of the parameter are returned."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_INTEL_performance_query",
      "description": "Query performance capabilities of the device"
    }
  },
  {
    "text": "VkResult vkGetPipelineExecutablePropertiesKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPipelineExecutablePropertiesKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device that created the pipeline."
        }
      },
      {
        "text": "const VkPipelineInfoKHR * pPipelineInfo",
        "type": "VkPipelineInfoKHR",
        "rawType": "const VkPipelineInfoKHR *",
        "name": "pPipelineInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " describes the pipeline being queried."
        }
      },
      {
        "text": "uint32_t * pExecutableCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pExecutableCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of pipeline executables available or queried, as described below."
        }
      },
      {
        "text": "VkPipelineExecutablePropertiesKHR * pProperties",
        "type": "VkPipelineExecutablePropertiesKHR",
        "rawType": "VkPipelineExecutablePropertiesKHR *",
        "name": "pProperties",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pExecutableCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineExecutablePropertiesKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Get the executables associated with a pipeline"
    }
  },
  {
    "text": "VkResult vkGetPipelineExecutableStatisticsKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPipelineExecutableStatisticsKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device that created the pipeline."
        }
      },
      {
        "text": "const VkPipelineExecutableInfoKHR * pExecutableInfo",
        "type": "VkPipelineExecutableInfoKHR",
        "rawType": "const VkPipelineExecutableInfoKHR *",
        "name": "pExecutableInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " describes the pipeline executable being queried."
        }
      },
      {
        "text": "uint32_t * pStatisticCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pStatisticCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of statistics available or queried, as described below."
        }
      },
      {
        "text": "VkPipelineExecutableStatisticKHR * pStatistics",
        "type": "VkPipelineExecutableStatisticKHR",
        "rawType": "VkPipelineExecutableStatisticKHR *",
        "name": "pStatistics",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pStatisticCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineExecutableStatisticKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Get compile time statistics associated with a pipeline executable"
    }
  },
  {
    "text": "VkResult vkGetPipelineExecutableInternalRepresentationsKHR",
    "type": "int32_t",
    "rawType": "int32_t",
    "name": "vkGetPipelineExecutableInternalRepresentationsKHR",
    "isConstant": false,
    "dereferenceCount": 0,
    "enumType": "VkResult",
    "enumRawType": "VkResult",
    "isNumber": true,
    "jsType": "Number",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkDevice device",
        "type": "VkDevice",
        "rawType": "VkDevice",
        "name": "device",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkPhysicalDevice",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the device that created the pipeline."
        }
      },
      {
        "text": "const VkPipelineExecutableInfoKHR * pExecutableInfo",
        "type": "VkPipelineExecutableInfoKHR",
        "rawType": "const VkPipelineExecutableInfoKHR *",
        "name": "pExecutableInfo",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " describes the pipeline executable being queried."
        }
      },
      {
        "text": "uint32_t * pInternalRepresentationCount",
        "type": "uint32_t",
        "rawType": "uint32_t *",
        "name": "pInternalRepresentationCount",
        "isConstant": false,
        "dereferenceCount": 1,
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is a reference to a number related to the number of internal representations available or queried, as described below."
        }
      },
      {
        "text": "VkPipelineExecutableInternalRepresentationKHR * pInternalRepresentations",
        "type": "VkPipelineExecutableInternalRepresentationKHR",
        "rawType": "VkPipelineExecutableInternalRepresentationKHR *",
        "name": "pInternalRepresentations",
        "isConstant": false,
        "dereferenceCount": 1,
        "isStructType": true,
        "isArray": true,
        "length": "pInternalRepresentationCount",
        "isDynamicArray": true,
        "jsType": "Array",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [
            {
              "kind": "slink",
              "value": "VkPipelineExecutableInternalRepresentationKHR"
            }
          ],
          "description": " is either <i>null</i> or a reference to an array of {#0#} structures."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "VK_KHR_pipeline_executable_properties",
      "description": "Get internal representations of the pipeline executable"
    }
  },
  {
    "text": "void vkCmdSetLineStippleEXT",
    "type": "void",
    "rawType": "void",
    "name": "vkCmdSetLineStippleEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "COMMAND_PROTO",
    "params": [
      {
        "text": "VkCommandBuffer commandBuffer",
        "type": "VkCommandBuffer",
        "rawType": "VkCommandBuffer",
        "name": "commandBuffer",
        "isConstant": false,
        "dereferenceCount": 0,
        "isHandleType": true,
        "handleType": "VkCommandPool",
        "jsType": "Object",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the command buffer into which the command will be recorded."
        }
      },
      {
        "text": "uint32_t lineStippleFactor",
        "type": "uint32_t",
        "rawType": "uint32_t",
        "name": "lineStippleFactor",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the repeat factor used in stippled line rasterization."
        }
      },
      {
        "text": "uint16_t lineStipplePattern",
        "type": "uint16_t",
        "rawType": "uint16_t",
        "name": "lineStipplePattern",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number",
        "kind": "COMMAND_PARAM",
        "documentation": {
          "macros": [],
          "description": " is the bit pattern used in stippled line rasterization."
        }
      }
    ],
    "documentation": {
      "macros": [],
      "category": "Rasterization",
      "description": "Set the dynamic line width state"
    }
  },
  {
    "text": "void",
    "type": "void",
    "rawType": "void",
    "name": "vkInternalAllocationNotification",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "FUNCTION_POINTER",
    "params": [
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      },
      {
        "text": "size_t size",
        "type": "size_t",
        "rawType": "size_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkInternalAllocationType allocationType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "allocationType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkInternalAllocationType",
        "enumRawType": "VkInternalAllocationType",
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkSystemAllocationScope allocationScope",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "allocationScope",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSystemAllocationScope",
        "enumRawType": "VkSystemAllocationScope",
        "isNumber": true,
        "jsType": "Number"
      }
    ]
  },
  {
    "text": "void",
    "type": "void",
    "rawType": "void",
    "name": "vkInternalFreeNotification",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "FUNCTION_POINTER",
    "params": [
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      },
      {
        "text": "size_t size",
        "type": "size_t",
        "rawType": "size_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkInternalAllocationType allocationType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "allocationType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkInternalAllocationType",
        "enumRawType": "VkInternalAllocationType",
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkSystemAllocationScope allocationScope",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "allocationScope",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSystemAllocationScope",
        "enumRawType": "VkSystemAllocationScope",
        "isNumber": true,
        "jsType": "Number"
      }
    ]
  },
  {
    "text": "void *",
    "type": "void *",
    "rawType": "void *",
    "name": "vkReallocationFunction",
    "isConstant": false,
    "dereferenceCount": 1,
    "isVoidPointer": true,
    "isContantVoidPointer": false,
    "isDynamicVoidPointer": true,
    "isTypedArray": true,
    "jsTypedArrayName": "ArrayBuffer",
    "jsType": "ArrayBufferView",
    "kind": "FUNCTION_POINTER",
    "params": [
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      },
      {
        "text": "void * pOriginal",
        "type": "void",
        "rawType": "void *",
        "name": "pOriginal",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      },
      {
        "text": "size_t size",
        "type": "size_t",
        "rawType": "size_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "size_t alignment",
        "type": "size_t",
        "rawType": "size_t",
        "name": "alignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkSystemAllocationScope allocationScope",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "allocationScope",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSystemAllocationScope",
        "enumRawType": "VkSystemAllocationScope",
        "isNumber": true,
        "jsType": "Number"
      }
    ]
  },
  {
    "text": "void *",
    "type": "void *",
    "rawType": "void *",
    "name": "vkAllocationFunction",
    "isConstant": false,
    "dereferenceCount": 1,
    "isVoidPointer": true,
    "isContantVoidPointer": false,
    "isDynamicVoidPointer": true,
    "isTypedArray": true,
    "jsTypedArrayName": "ArrayBuffer",
    "jsType": "ArrayBufferView",
    "kind": "FUNCTION_POINTER",
    "params": [
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      },
      {
        "text": "size_t size",
        "type": "size_t",
        "rawType": "size_t",
        "name": "size",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "size_t alignment",
        "type": "size_t",
        "rawType": "size_t",
        "name": "alignment",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkSystemAllocationScope allocationScope",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "allocationScope",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkSystemAllocationScope",
        "enumRawType": "VkSystemAllocationScope",
        "isNumber": true,
        "jsType": "Number"
      }
    ]
  },
  {
    "text": "void",
    "type": "void",
    "rawType": "void",
    "name": "vkFreeFunction",
    "isConstant": false,
    "dereferenceCount": 0,
    "jsType": "undefined",
    "kind": "FUNCTION_POINTER",
    "params": [
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      },
      {
        "text": "void * pMemory",
        "type": "void",
        "rawType": "void *",
        "name": "pMemory",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      }
    ]
  },
  {
    "text": "VkBool32",
    "type": "uint32_t",
    "rawType": "uint32_t",
    "name": "vkDebugReportCallbackEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "baseType": "VkBool32",
    "isBoolean": true,
    "isNumber": true,
    "jsType": "Number",
    "kind": "FUNCTION_POINTER",
    "params": [
      {
        "text": "VkDebugReportFlagsEXT flags",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "flags",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugReportFlagBitsEXT",
        "bitmaskRawType": "VkDebugReportFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkDebugReportObjectTypeEXT objectType",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "objectType",
        "isConstant": false,
        "dereferenceCount": 0,
        "enumType": "VkDebugReportObjectTypeEXT",
        "enumRawType": "VkDebugReportObjectTypeEXT",
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "uint64_t object",
        "type": "uint64_t",
        "rawType": "uint64_t",
        "name": "object",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "size_t location",
        "type": "size_t",
        "rawType": "size_t",
        "name": "location",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "int32_t messageCodeconst",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageCodeconst",
        "isConstant": false,
        "dereferenceCount": 0,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "const char * pLayerPrefixconst",
        "type": "char",
        "rawType": "const char *",
        "name": "pLayerPrefixconst",
        "isConstant": true,
        "dereferenceCount": 1,
        "jsType": "undefined"
      },
      {
        "text": "const char * pMessage",
        "type": "char",
        "rawType": "const char *",
        "name": "pMessage",
        "isConstant": true,
        "dereferenceCount": 1,
        "jsType": "undefined"
      },
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      }
    ]
  },
  {
    "text": "VkBool32",
    "type": "uint32_t",
    "rawType": "uint32_t",
    "name": "vkDebugUtilsMessengerCallbackEXT",
    "isConstant": false,
    "dereferenceCount": 0,
    "baseType": "VkBool32",
    "isBoolean": true,
    "isNumber": true,
    "jsType": "Number",
    "kind": "FUNCTION_POINTER",
    "params": [
      {
        "text": "VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageSeverity",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessageSeverityFlagBitsEXT",
        "bitmaskRawType": "VkDebugUtilsMessageSeverityFlagBitsEXT",
        "isBitmaskType": true,
        "enumType": "int32_t",
        "enumRawType": "int32_t",
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "VkDebugUtilsMessageTypeFlagsEXT messageTypesconst",
        "type": "int32_t",
        "rawType": "int32_t",
        "name": "messageTypesconst",
        "isConstant": false,
        "dereferenceCount": 0,
        "bitmaskType": "VkDebugUtilsMessageTypeFlagBitsEXT",
        "bitmaskRawType": "VkDebugUtilsMessageTypeFlagsEXT",
        "isBitmaskType": true,
        "isNumber": true,
        "jsType": "Number"
      },
      {
        "text": "const VkDebugUtilsMessengerCallbackDataEXT * pCallbackData",
        "type": "VkDebugUtilsMessengerCallbackDataEXT",
        "rawType": "const VkDebugUtilsMessengerCallbackDataEXT *",
        "name": "pCallbackData",
        "isConstant": true,
        "dereferenceCount": 1,
        "isStructType": true,
        "jsType": "Object"
      },
      {
        "text": "void * pUserData",
        "type": "void",
        "rawType": "void *",
        "name": "pUserData",
        "isConstant": false,
        "dereferenceCount": 1,
        "isVoidPointer": true,
        "isContantVoidPointer": false,
        "isDynamicVoidPointer": true,
        "isTypedArray": true,
        "jsTypedArrayName": "ArrayBuffer",
        "jsType": "ArrayBufferView"
      }
    ]
  }
]