/*
 * MACHINE GENERATED, DO NOT EDIT
 * GENERATED BY node-vulkan v0.0.1
 */
#include <nan.h>

#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

#define GLM_FORCE_RADIANS
#define GLM_FORCE_DEPTH_ZERO_TO_ONE

#include <glm/vec4.hpp>
#include <glm/mat4x4.hpp>

#include "index.h"
#include "calls.h"
#include "enums.h"

void _VK_MAKE_VERSION(const Nan::FunctionCallbackInfo<v8::Value>& info) {
  uint32_t major = info[0]->Uint32Value();
  uint32_t minor = info[1]->Uint32Value();
  uint32_t patch = info[2]->Uint32Value();
  info.GetReturnValue().Set(VK_MAKE_VERSION(major, minor, patch));
};

void _VK_VERSION_MAJOR(const Nan::FunctionCallbackInfo<v8::Value>& info) {
  uint32_t version = info[0]->Uint32Value();
  info.GetReturnValue().Set((uint32_t)(version) >> 22);
};

void _VK_VERSION_MINOR(const Nan::FunctionCallbackInfo<v8::Value>& info) {
  uint32_t version = info[0]->Uint32Value();
  info.GetReturnValue().Set(((uint32_t)(version) >> 12) & 0x3ff);
};

void _VK_VERSION_PATCH(const Nan::FunctionCallbackInfo<v8::Value>& info) {
  uint32_t version = info[0]->Uint32Value();
  info.GetReturnValue().Set((uint32_t)(version) & 0xfff);
};

NAN_MODULE_INIT(InitModule) {
  // manual initializers
  target->Set(
    Nan::New("getVulkanEnumerations").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(getVulkanEnumerations)->GetFunction()
  );
  target->Set(
    Nan::New("VK_MAKE_VERSION").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_VK_MAKE_VERSION)->GetFunction()
  );
  target->Set(
    Nan::New("VK_VERSION_MAJOR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_VK_VERSION_MAJOR)->GetFunction()
  );
  target->Set(
    Nan::New("VK_VERSION_MINOR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_VK_VERSION_MINOR)->GetFunction()
  );
  target->Set(
    Nan::New("VK_VERSION_PATCH").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_VK_VERSION_PATCH)->GetFunction()
  );
  target->Set(
    Nan::New("VK_API_VERSION_1_0").ToLocalChecked(),
    Nan::New(VK_MAKE_VERSION(1, 0, 0))
  );
  // generated initializers
  _VkDebugUtilsMessengerEXT::Initialize(target);
  _VkDebugReportCallbackEXT::Initialize(target);
  _VkSwapchainKHR::Initialize(target);
  _VkSurfaceKHR::Initialize(target);
  _VkDisplayModeKHR::Initialize(target);
  _VkDisplayKHR::Initialize(target);
  _VkValidationCacheEXT::Initialize(target);
  _VkSamplerYcbcrConversion::Initialize(target);
  _VkDescriptorUpdateTemplate::Initialize(target);
  _VkIndirectCommandsLayoutNVX::Initialize(target);
  _VkObjectTableNVX::Initialize(target);
  _VkPipelineCache::Initialize(target);
  _VkRenderPass::Initialize(target);
  _VkFramebuffer::Initialize(target);
  _VkQueryPool::Initialize(target);
  _VkEvent::Initialize(target);
  _VkSemaphore::Initialize(target);
  _VkFence::Initialize(target);
  _VkDescriptorPool::Initialize(target);
  _VkDescriptorSetLayout::Initialize(target);
  _VkDescriptorSet::Initialize(target);
  _VkSampler::Initialize(target);
  _VkPipelineLayout::Initialize(target);
  _VkPipeline::Initialize(target);
  _VkShaderModule::Initialize(target);
  _VkImageView::Initialize(target);
  _VkImage::Initialize(target);
  _VkBufferView::Initialize(target);
  _VkBuffer::Initialize(target);
  _VkCommandPool::Initialize(target);
  _VkDeviceMemory::Initialize(target);
  _VkCommandBuffer::Initialize(target);
  _VkQueue::Initialize(target);
  _VkDevice::Initialize(target);
  _VkPhysicalDevice::Initialize(target);
  _VkInstance::Initialize(target);
  _VkBindImagePlaneMemoryInfo::Initialize(target);
  _VkImageSubresourceRange::Initialize(target);
  _VkImageMemoryBarrier::Initialize(target);
  _VkBufferCreateInfo::Initialize(target);
  _VkApplicationInfo::Initialize(target);
  _VkInstanceCreateInfo::Initialize(target);
  _VkPhysicalDeviceFeatures::Initialize(target);
  _VkDeviceQueueCreateInfo::Initialize(target);
  _VkDeviceCreateInfo::Initialize(target);
  _VkExtent2D::Initialize(target);
  _VkOffset2D::Initialize(target);
  _VkRect2D::Initialize(target);
  _VkClearRect::Initialize(target);
  
  target->Set(
    Nan::New("vkCreateInstance").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateInstance)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyInstance").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyInstance)->GetFunction()
  );
  target->Set(
    Nan::New("vkEnumeratePhysicalDevices").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEnumeratePhysicalDevices)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDeviceProcAddr").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDeviceProcAddr)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetInstanceProcAddr").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetInstanceProcAddr)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceQueueFamilyProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceQueueFamilyProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceMemoryProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceMemoryProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceFeatures").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceFeatures)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceFormatProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceFormatProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceImageFormatProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceImageFormatProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDevice").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDevice)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyDevice").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyDevice)->GetFunction()
  );
  target->Set(
    Nan::New("vkEnumerateInstanceVersion").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEnumerateInstanceVersion)->GetFunction()
  );
  target->Set(
    Nan::New("vkEnumerateInstanceLayerProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEnumerateInstanceLayerProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkEnumerateInstanceExtensionProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEnumerateInstanceExtensionProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkEnumerateDeviceLayerProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEnumerateDeviceLayerProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkEnumerateDeviceExtensionProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEnumerateDeviceExtensionProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDeviceQueue").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDeviceQueue)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueueSubmit").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueueSubmit)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueueWaitIdle").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueueWaitIdle)->GetFunction()
  );
  target->Set(
    Nan::New("vkDeviceWaitIdle").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDeviceWaitIdle)->GetFunction()
  );
  target->Set(
    Nan::New("vkAllocateMemory").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkAllocateMemory)->GetFunction()
  );
  target->Set(
    Nan::New("vkFreeMemory").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkFreeMemory)->GetFunction()
  );
  target->Set(
    Nan::New("vkMapMemory").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkMapMemory)->GetFunction()
  );
  target->Set(
    Nan::New("vkUnmapMemory").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkUnmapMemory)->GetFunction()
  );
  target->Set(
    Nan::New("vkFlushMappedMemoryRanges").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkFlushMappedMemoryRanges)->GetFunction()
  );
  target->Set(
    Nan::New("vkInvalidateMappedMemoryRanges").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkInvalidateMappedMemoryRanges)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDeviceMemoryCommitment").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDeviceMemoryCommitment)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetBufferMemoryRequirements").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetBufferMemoryRequirements)->GetFunction()
  );
  target->Set(
    Nan::New("vkBindBufferMemory").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkBindBufferMemory)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetImageMemoryRequirements").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetImageMemoryRequirements)->GetFunction()
  );
  target->Set(
    Nan::New("vkBindImageMemory").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkBindImageMemory)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetImageSparseMemoryRequirements").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetImageSparseMemoryRequirements)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSparseImageFormatProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSparseImageFormatProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueueBindSparse").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueueBindSparse)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateFence").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateFence)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyFence").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyFence)->GetFunction()
  );
  target->Set(
    Nan::New("vkResetFences").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkResetFences)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetFenceStatus").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetFenceStatus)->GetFunction()
  );
  target->Set(
    Nan::New("vkWaitForFences").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkWaitForFences)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateSemaphore").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateSemaphore)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroySemaphore").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroySemaphore)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateEvent").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateEvent)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyEvent").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyEvent)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetEventStatus").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetEventStatus)->GetFunction()
  );
  target->Set(
    Nan::New("vkSetEvent").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkSetEvent)->GetFunction()
  );
  target->Set(
    Nan::New("vkResetEvent").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkResetEvent)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateQueryPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateQueryPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyQueryPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyQueryPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetQueryPoolResults").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetQueryPoolResults)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateBufferView").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateBufferView)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyBufferView").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyBufferView)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetImageSubresourceLayout").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetImageSubresourceLayout)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateImageView").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateImageView)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyImageView").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyImageView)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateShaderModule").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateShaderModule)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyShaderModule").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyShaderModule)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreatePipelineCache").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreatePipelineCache)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyPipelineCache").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyPipelineCache)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPipelineCacheData").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPipelineCacheData)->GetFunction()
  );
  target->Set(
    Nan::New("vkMergePipelineCaches").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkMergePipelineCaches)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateGraphicsPipelines").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateGraphicsPipelines)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateComputePipelines").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateComputePipelines)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyPipeline").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyPipeline)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreatePipelineLayout").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreatePipelineLayout)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyPipelineLayout").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyPipelineLayout)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateSampler").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateSampler)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroySampler").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroySampler)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDescriptorSetLayout").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDescriptorSetLayout)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyDescriptorSetLayout").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyDescriptorSetLayout)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDescriptorPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDescriptorPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyDescriptorPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyDescriptorPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkResetDescriptorPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkResetDescriptorPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkAllocateDescriptorSets").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkAllocateDescriptorSets)->GetFunction()
  );
  target->Set(
    Nan::New("vkFreeDescriptorSets").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkFreeDescriptorSets)->GetFunction()
  );
  target->Set(
    Nan::New("vkUpdateDescriptorSets").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkUpdateDescriptorSets)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateFramebuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateFramebuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyFramebuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyFramebuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateRenderPass").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateRenderPass)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyRenderPass").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyRenderPass)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetRenderAreaGranularity").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetRenderAreaGranularity)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateCommandPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateCommandPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyCommandPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyCommandPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkResetCommandPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkResetCommandPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkAllocateCommandBuffers").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkAllocateCommandBuffers)->GetFunction()
  );
  target->Set(
    Nan::New("vkFreeCommandBuffers").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkFreeCommandBuffers)->GetFunction()
  );
  target->Set(
    Nan::New("vkBeginCommandBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkBeginCommandBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkEndCommandBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEndCommandBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkResetCommandBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkResetCommandBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBindPipeline").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBindPipeline)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetViewport").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetViewport)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetScissor").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetScissor)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetLineWidth").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetLineWidth)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetDepthBias").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetDepthBias)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetBlendConstants").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetBlendConstants)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetDepthBounds").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetDepthBounds)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetStencilCompareMask").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetStencilCompareMask)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetStencilWriteMask").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetStencilWriteMask)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetStencilReference").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetStencilReference)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBindDescriptorSets").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBindDescriptorSets)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBindIndexBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBindIndexBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBindVertexBuffers").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBindVertexBuffers)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDraw").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDraw)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDrawIndexed").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDrawIndexed)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDrawIndirect").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDrawIndirect)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDrawIndexedIndirect").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDrawIndexedIndirect)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDispatch").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDispatch)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDispatchIndirect").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDispatchIndirect)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdCopyBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdCopyBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdCopyImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdCopyImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBlitImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBlitImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdCopyBufferToImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdCopyBufferToImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdCopyImageToBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdCopyImageToBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdUpdateBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdUpdateBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdFillBuffer").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdFillBuffer)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdClearColorImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdClearColorImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdClearDepthStencilImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdClearDepthStencilImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdClearAttachments").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdClearAttachments)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdResolveImage").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdResolveImage)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetEvent").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetEvent)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdResetEvent").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdResetEvent)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdWaitEvents").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdWaitEvents)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdPipelineBarrier").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdPipelineBarrier)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBeginQuery").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBeginQuery)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdEndQuery").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdEndQuery)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBeginConditionalRenderingEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBeginConditionalRenderingEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdEndConditionalRenderingEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdEndConditionalRenderingEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdResetQueryPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdResetQueryPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdWriteTimestamp").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdWriteTimestamp)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdCopyQueryPoolResults").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdCopyQueryPoolResults)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdPushConstants").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdPushConstants)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBeginRenderPass").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBeginRenderPass)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdNextSubpass").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdNextSubpass)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdEndRenderPass").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdEndRenderPass)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdExecuteCommands").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdExecuteCommands)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateAndroidSurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateAndroidSurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceDisplayPropertiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceDisplayPropertiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceDisplayPlanePropertiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceDisplayPlanePropertiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDisplayPlaneSupportedDisplaysKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDisplayPlaneSupportedDisplaysKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDisplayModePropertiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDisplayModePropertiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDisplayModeKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDisplayModeKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDisplayPlaneCapabilitiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDisplayPlaneCapabilitiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDisplayPlaneSurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDisplayPlaneSurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateSharedSwapchainsKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateSharedSwapchainsKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateMirSurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateMirSurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceMirPresentationSupportKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceMirPresentationSupportKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroySurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroySurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSurfaceSupportKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSurfaceSupportKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSurfaceCapabilitiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSurfaceCapabilitiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSurfaceFormatsKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSurfaceFormatsKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSurfacePresentModesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSurfacePresentModesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateSwapchainKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateSwapchainKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroySwapchainKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroySwapchainKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetSwapchainImagesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetSwapchainImagesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkAcquireNextImageKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkAcquireNextImageKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueuePresentKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueuePresentKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateViSurfaceNN").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateViSurfaceNN)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateWaylandSurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateWaylandSurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceWaylandPresentationSupportKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceWaylandPresentationSupportKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateWin32SurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateWin32SurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceWin32PresentationSupportKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceWin32PresentationSupportKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateXlibSurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateXlibSurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceXlibPresentationSupportKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceXlibPresentationSupportKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateXcbSurfaceKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateXcbSurfaceKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceXcbPresentationSupportKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceXcbPresentationSupportKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDebugReportCallbackEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDebugReportCallbackEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyDebugReportCallbackEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyDebugReportCallbackEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkDebugReportMessageEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDebugReportMessageEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkDebugMarkerSetObjectNameEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDebugMarkerSetObjectNameEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkDebugMarkerSetObjectTagEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDebugMarkerSetObjectTagEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDebugMarkerBeginEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDebugMarkerBeginEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDebugMarkerEndEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDebugMarkerEndEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDebugMarkerInsertEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDebugMarkerInsertEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceExternalImageFormatPropertiesNV").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceExternalImageFormatPropertiesNV)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetMemoryWin32HandleNV").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetMemoryWin32HandleNV)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDrawIndirectCountAMD").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDrawIndirectCountAMD)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDrawIndexedIndirectCountAMD").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDrawIndexedIndirectCountAMD)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdProcessCommandsNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdProcessCommandsNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdReserveSpaceForCommandsNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdReserveSpaceForCommandsNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateIndirectCommandsLayoutNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateIndirectCommandsLayoutNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyIndirectCommandsLayoutNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyIndirectCommandsLayoutNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateObjectTableNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateObjectTableNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyObjectTableNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyObjectTableNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkRegisterObjectsNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkRegisterObjectsNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkUnregisterObjectsNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkUnregisterObjectsNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceFeatures2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceFeatures2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceProperties2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceProperties2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceFormatProperties2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceFormatProperties2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceImageFormatProperties2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceImageFormatProperties2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceQueueFamilyProperties2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceQueueFamilyProperties2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceMemoryProperties2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceMemoryProperties2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSparseImageFormatProperties2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSparseImageFormatProperties2)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdPushDescriptorSetKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdPushDescriptorSetKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkTrimCommandPool").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkTrimCommandPool)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceExternalBufferProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceExternalBufferProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetMemoryWin32HandleKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetMemoryWin32HandleKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetMemoryWin32HandlePropertiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetMemoryWin32HandlePropertiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetMemoryFdKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetMemoryFdKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetMemoryFdPropertiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetMemoryFdPropertiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceExternalSemaphoreProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceExternalSemaphoreProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetSemaphoreWin32HandleKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetSemaphoreWin32HandleKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkImportSemaphoreWin32HandleKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkImportSemaphoreWin32HandleKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetSemaphoreFdKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetSemaphoreFdKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkImportSemaphoreFdKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkImportSemaphoreFdKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceExternalFenceProperties").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceExternalFenceProperties)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetFenceWin32HandleKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetFenceWin32HandleKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkImportFenceWin32HandleKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkImportFenceWin32HandleKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetFenceFdKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetFenceFdKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkImportFenceFdKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkImportFenceFdKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkReleaseDisplayEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkReleaseDisplayEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkAcquireXlibDisplayEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkAcquireXlibDisplayEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetRandROutputDisplayEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetRandROutputDisplayEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkDisplayPowerControlEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDisplayPowerControlEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkRegisterDeviceEventEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkRegisterDeviceEventEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkRegisterDisplayEventEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkRegisterDisplayEventEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetSwapchainCounterEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetSwapchainCounterEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSurfaceCapabilities2EXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSurfaceCapabilities2EXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkEnumeratePhysicalDeviceGroups").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkEnumeratePhysicalDeviceGroups)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDeviceGroupPeerMemoryFeatures").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDeviceGroupPeerMemoryFeatures)->GetFunction()
  );
  target->Set(
    Nan::New("vkBindBufferMemory2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkBindBufferMemory2)->GetFunction()
  );
  target->Set(
    Nan::New("vkBindImageMemory2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkBindImageMemory2)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetDeviceMask").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetDeviceMask)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDeviceGroupPresentCapabilitiesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDeviceGroupPresentCapabilitiesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDeviceGroupSurfacePresentModesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDeviceGroupSurfacePresentModesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkAcquireNextImage2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkAcquireNextImage2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDispatchBase").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDispatchBase)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDevicePresentRectanglesKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDevicePresentRectanglesKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDescriptorUpdateTemplate").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDescriptorUpdateTemplate)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyDescriptorUpdateTemplate").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyDescriptorUpdateTemplate)->GetFunction()
  );
  target->Set(
    Nan::New("vkUpdateDescriptorSetWithTemplate").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkUpdateDescriptorSetWithTemplate)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdPushDescriptorSetWithTemplateKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdPushDescriptorSetWithTemplateKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkSetHdrMetadataEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkSetHdrMetadataEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetSwapchainStatusKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetSwapchainStatusKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetRefreshCycleDurationGOOGLE").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetRefreshCycleDurationGOOGLE)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPastPresentationTimingGOOGLE").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPastPresentationTimingGOOGLE)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateIOSSurfaceMVK").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateIOSSurfaceMVK)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateMacOSSurfaceMVK").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateMacOSSurfaceMVK)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetViewportWScalingNV").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetViewportWScalingNV)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetDiscardRectangleEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetDiscardRectangleEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetSampleLocationsEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetSampleLocationsEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceMultisamplePropertiesEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceMultisamplePropertiesEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSurfaceCapabilities2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSurfaceCapabilities2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceSurfaceFormats2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceSurfaceFormats2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceDisplayProperties2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceDisplayProperties2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetPhysicalDeviceDisplayPlaneProperties2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetPhysicalDeviceDisplayPlaneProperties2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDisplayModeProperties2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDisplayModeProperties2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDisplayPlaneCapabilities2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDisplayPlaneCapabilities2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetBufferMemoryRequirements2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetBufferMemoryRequirements2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetImageMemoryRequirements2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetImageMemoryRequirements2)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetImageSparseMemoryRequirements2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetImageSparseMemoryRequirements2)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateSamplerYcbcrConversion").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateSamplerYcbcrConversion)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroySamplerYcbcrConversion").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroySamplerYcbcrConversion)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDeviceQueue2").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDeviceQueue2)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateValidationCacheEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateValidationCacheEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyValidationCacheEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyValidationCacheEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetValidationCacheDataEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetValidationCacheDataEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkMergeValidationCachesEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkMergeValidationCachesEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetDescriptorSetLayoutSupport").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetDescriptorSetLayoutSupport)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetSwapchainGrallocUsageANDROID").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetSwapchainGrallocUsageANDROID)->GetFunction()
  );
  target->Set(
    Nan::New("vkAcquireImageANDROID").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkAcquireImageANDROID)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueueSignalReleaseImageANDROID").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueueSignalReleaseImageANDROID)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetShaderInfoAMD").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetShaderInfoAMD)->GetFunction()
  );
  target->Set(
    Nan::New("vkSetDebugUtilsObjectNameEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkSetDebugUtilsObjectNameEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkSetDebugUtilsObjectTagEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkSetDebugUtilsObjectTagEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueueBeginDebugUtilsLabelEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueueBeginDebugUtilsLabelEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueueEndDebugUtilsLabelEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueueEndDebugUtilsLabelEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkQueueInsertDebugUtilsLabelEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkQueueInsertDebugUtilsLabelEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBeginDebugUtilsLabelEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBeginDebugUtilsLabelEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdEndDebugUtilsLabelEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdEndDebugUtilsLabelEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdInsertDebugUtilsLabelEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdInsertDebugUtilsLabelEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateDebugUtilsMessengerEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateDebugUtilsMessengerEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkDestroyDebugUtilsMessengerEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkDestroyDebugUtilsMessengerEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkSubmitDebugUtilsMessageEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkSubmitDebugUtilsMessageEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetMemoryHostPointerPropertiesEXT").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetMemoryHostPointerPropertiesEXT)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdWriteBufferMarkerAMD").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdWriteBufferMarkerAMD)->GetFunction()
  );
  target->Set(
    Nan::New("vkCreateRenderPass2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCreateRenderPass2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdBeginRenderPass2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdBeginRenderPass2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdNextSubpass2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdNextSubpass2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdEndRenderPass2KHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdEndRenderPass2KHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetAndroidHardwareBufferPropertiesANDROID").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetAndroidHardwareBufferPropertiesANDROID)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetMemoryAndroidHardwareBufferANDROID").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetMemoryAndroidHardwareBufferANDROID)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDrawIndirectCountKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDrawIndirectCountKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdDrawIndexedIndirectCountKHR").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdDrawIndexedIndirectCountKHR)->GetFunction()
  );
  target->Set(
    Nan::New("vkCmdSetCheckpointNV").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkCmdSetCheckpointNV)->GetFunction()
  );
  target->Set(
    Nan::New("vkGetQueueCheckpointDataNV").ToLocalChecked(),
    Nan::New<v8::FunctionTemplate>(_vkGetQueueCheckpointDataNV)->GetFunction()
  );
  
}

NODE_MODULE(myModule, InitModule);
